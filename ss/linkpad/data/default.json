[
	{
		"id": 422,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 423,
		"type_id": 3,
		"from_id": 380,
		"to_id": 422,
		"value": {
			"id": 200,
			"value": "adminPackageInstallPublish",
			"link_id": 423
		},
		"__typename": "links"
	},
	{
		"id": 424,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 425,
		"type_id": 16,
		"from_id": 424,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 426,
		"type_id": 70,
		"from_id": 425,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 427,
		"type_id": 18,
		"from_id": 422,
		"to_id": 424,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 428,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 429,
		"type_id": 16,
		"from_id": 428,
		"to_id": 93,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 430,
		"type_id": 70,
		"from_id": 429,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 431,
		"type_id": 16,
		"from_id": 428,
		"to_id": 94,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 432,
		"type_id": 70,
		"from_id": 431,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 433,
		"type_id": 19,
		"from_id": 422,
		"to_id": 428,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 434,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 435,
		"type_id": 16,
		"from_id": 434,
		"to_id": 93,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 436,
		"type_id": 70,
		"from_id": 435,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 437,
		"type_id": 16,
		"from_id": 434,
		"to_id": 94,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 438,
		"type_id": 70,
		"from_id": 437,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 439,
		"type_id": 20,
		"from_id": 422,
		"to_id": 434,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 440,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 441,
		"type_id": 3,
		"from_id": 380,
		"to_id": 440,
		"value": {
			"id": 201,
			"value": "usersCanSeeAll",
			"link_id": 441
		},
		"__typename": "links"
	},
	{
		"id": 442,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 443,
		"type_id": 16,
		"from_id": 442,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 444,
		"type_id": 70,
		"from_id": 443,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 445,
		"type_id": 18,
		"from_id": 440,
		"to_id": 442,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 446,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 447,
		"type_id": 16,
		"from_id": 446,
		"to_id": 372,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 448,
		"type_id": 70,
		"from_id": 447,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 449,
		"type_id": 19,
		"from_id": 440,
		"to_id": 446,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 450,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 451,
		"type_id": 16,
		"from_id": 450,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 452,
		"type_id": 70,
		"from_id": 451,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 453,
		"type_id": 20,
		"from_id": 440,
		"to_id": 450,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 454,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 455,
		"type_id": 3,
		"from_id": 380,
		"to_id": 454,
		"value": {
			"id": 202,
			"value": "usersCanLoginAdmin",
			"link_id": 455
		},
		"__typename": "links"
	},
	{
		"id": 456,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 457,
		"type_id": 16,
		"from_id": 456,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 458,
		"type_id": 70,
		"from_id": 457,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 459,
		"type_id": 18,
		"from_id": 454,
		"to_id": 456,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 460,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 461,
		"type_id": 16,
		"from_id": 460,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 462,
		"type_id": 70,
		"from_id": 461,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 463,
		"type_id": 19,
		"from_id": 454,
		"to_id": 460,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 464,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 465,
		"type_id": 16,
		"from_id": 464,
		"to_id": 64,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 466,
		"type_id": 70,
		"from_id": 465,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 467,
		"type_id": 20,
		"from_id": 454,
		"to_id": 464,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 468,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 469,
		"type_id": 3,
		"from_id": 380,
		"to_id": 468,
		"value": {
			"id": 203,
			"value": "usersCanInsertSafeLinks",
			"link_id": 469
		},
		"__typename": "links"
	},
	{
		"id": 470,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 471,
		"type_id": 16,
		"from_id": 470,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 472,
		"type_id": 70,
		"from_id": 471,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 473,
		"type_id": 18,
		"from_id": 468,
		"to_id": 470,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 474,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 475,
		"type_id": 16,
		"from_id": 474,
		"to_id": 92,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 476,
		"type_id": 70,
		"from_id": 475,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 477,
		"type_id": 16,
		"from_id": 474,
		"to_id": 55,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 478,
		"type_id": 70,
		"from_id": 477,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 479,
		"type_id": 16,
		"from_id": 474,
		"to_id": 3,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 480,
		"type_id": 70,
		"from_id": 479,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 481,
		"type_id": 16,
		"from_id": 474,
		"to_id": 62,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 482,
		"type_id": 70,
		"from_id": 481,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 483,
		"type_id": 16,
		"from_id": 474,
		"to_id": 58,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 484,
		"type_id": 70,
		"from_id": 483,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 485,
		"type_id": 16,
		"from_id": 474,
		"to_id": 30,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 486,
		"type_id": 70,
		"from_id": 485,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 487,
		"type_id": 16,
		"from_id": 474,
		"to_id": 57,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 488,
		"type_id": 70,
		"from_id": 487,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 489,
		"type_id": 19,
		"from_id": 468,
		"to_id": 474,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 490,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 491,
		"type_id": 16,
		"from_id": 490,
		"to_id": 125,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 492,
		"type_id": 70,
		"from_id": 491,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 493,
		"type_id": 20,
		"from_id": 468,
		"to_id": 490,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 586,
		"type_id": 3,
		"from_id": 551,
		"to_id": 585,
		"value": {
			"id": 238,
			"value": "ScheduleSymbol",
			"link_id": 586
		},
		"__typename": "links"
	},
	{
		"id": 637,
		"type_id": 146,
		"from_id": 551,
		"to_id": 17,
		"value": {
			"id": 289,
			"value": "📜",
			"link_id": 637
		},
		"__typename": "links"
	},
	{
		"id": 788,
		"type_id": 752,
		"from_id": 785,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 789,
		"type_id": 752,
		"from_id": 785,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 790,
		"type_id": 752,
		"from_id": 785,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 494,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 495,
		"type_id": 3,
		"from_id": 380,
		"to_id": 494,
		"value": {
			"id": 204,
			"value": "usersCanUpdateSafeLinks",
			"link_id": 495
		},
		"__typename": "links"
	},
	{
		"id": 496,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 497,
		"type_id": 16,
		"from_id": 496,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 498,
		"type_id": 70,
		"from_id": 497,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 499,
		"type_id": 18,
		"from_id": 494,
		"to_id": 496,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 500,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 501,
		"type_id": 16,
		"from_id": 500,
		"to_id": 92,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 502,
		"type_id": 70,
		"from_id": 501,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 503,
		"type_id": 16,
		"from_id": 500,
		"to_id": 55,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 504,
		"type_id": 70,
		"from_id": 503,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 505,
		"type_id": 16,
		"from_id": 500,
		"to_id": 3,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 506,
		"type_id": 70,
		"from_id": 505,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 507,
		"type_id": 16,
		"from_id": 500,
		"to_id": 62,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 508,
		"type_id": 70,
		"from_id": 507,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 509,
		"type_id": 16,
		"from_id": 500,
		"to_id": 58,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 510,
		"type_id": 70,
		"from_id": 509,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 511,
		"type_id": 16,
		"from_id": 500,
		"to_id": 30,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 512,
		"type_id": 70,
		"from_id": 511,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 513,
		"type_id": 16,
		"from_id": 500,
		"to_id": 57,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 514,
		"type_id": 70,
		"from_id": 513,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 515,
		"type_id": 58,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 1,
			"value": {
				"_by_item": {
					"group_id": {
						"_eq": 40
					},
					"path_item_id": {
						"_eq": "X-Deep-User-Id"
					}
				}
			},
			"link_id": 515
		},
		"__typename": "links"
	},
	{
		"id": 516,
		"type_id": 73,
		"from_id": 500,
		"to_id": 515,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 517,
		"type_id": 19,
		"from_id": 494,
		"to_id": 500,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 518,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 519,
		"type_id": 16,
		"from_id": 518,
		"to_id": 126,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 520,
		"type_id": 70,
		"from_id": 519,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 521,
		"type_id": 20,
		"from_id": 494,
		"to_id": 518,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 522,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 523,
		"type_id": 3,
		"from_id": 380,
		"to_id": 522,
		"value": {
			"id": 205,
			"value": "usersCanDeleteSafeLinks",
			"link_id": 523
		},
		"__typename": "links"
	},
	{
		"id": 524,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 525,
		"type_id": 16,
		"from_id": 524,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 526,
		"type_id": 70,
		"from_id": 525,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 527,
		"type_id": 18,
		"from_id": 522,
		"to_id": 524,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 528,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 529,
		"type_id": 16,
		"from_id": 528,
		"to_id": 92,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 530,
		"type_id": 70,
		"from_id": 529,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 531,
		"type_id": 16,
		"from_id": 528,
		"to_id": 55,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 532,
		"type_id": 70,
		"from_id": 531,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 533,
		"type_id": 16,
		"from_id": 528,
		"to_id": 3,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 534,
		"type_id": 70,
		"from_id": 533,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 535,
		"type_id": 16,
		"from_id": 528,
		"to_id": 62,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 536,
		"type_id": 70,
		"from_id": 535,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 537,
		"type_id": 16,
		"from_id": 528,
		"to_id": 58,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 538,
		"type_id": 70,
		"from_id": 537,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 539,
		"type_id": 16,
		"from_id": 528,
		"to_id": 30,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 540,
		"type_id": 70,
		"from_id": 539,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 541,
		"type_id": 16,
		"from_id": 528,
		"to_id": 57,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 542,
		"type_id": 70,
		"from_id": 541,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 543,
		"type_id": 58,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 2,
			"value": {
				"_by_item": {
					"group_id": {
						"_eq": 40
					},
					"path_item_id": {
						"_eq": "X-Deep-User-Id"
					}
				}
			},
			"link_id": 543
		},
		"__typename": "links"
	},
	{
		"id": 544,
		"type_id": 73,
		"from_id": 528,
		"to_id": 543,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 545,
		"type_id": 19,
		"from_id": 522,
		"to_id": 528,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 546,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 547,
		"type_id": 16,
		"from_id": 546,
		"to_id": 127,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 548,
		"type_id": 70,
		"from_id": 547,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 549,
		"type_id": 20,
		"from_id": 522,
		"to_id": 546,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 587,
		"type_id": 146,
		"from_id": 551,
		"to_id": 73,
		"value": {
			"id": 239,
			"value": "🔎",
			"link_id": 587
		},
		"__typename": "links"
	},
	{
		"id": 638,
		"type_id": 3,
		"from_id": 551,
		"to_id": 637,
		"value": {
			"id": 290,
			"value": "RuleSymbol",
			"link_id": 638
		},
		"__typename": "links"
	},
	{
		"id": 639,
		"type_id": 146,
		"from_id": 551,
		"to_id": 72,
		"value": {
			"id": 291,
			"value": "🪡",
			"link_id": 639
		},
		"__typename": "links"
	},
	{
		"id": 640,
		"type_id": 3,
		"from_id": 551,
		"to_id": 639,
		"value": {
			"id": 292,
			"value": "SelectorExcludeSymbol",
			"link_id": 640
		},
		"__typename": "links"
	},
	{
		"id": 641,
		"type_id": 146,
		"from_id": 551,
		"to_id": 16,
		"value": {
			"id": 293,
			"value": "🪡",
			"link_id": 641
		},
		"__typename": "links"
	},
	{
		"id": 642,
		"type_id": 3,
		"from_id": 551,
		"to_id": 641,
		"value": {
			"id": 294,
			"value": "SelectorIncludeSymbol",
			"link_id": 642
		},
		"__typename": "links"
	},
	{
		"id": 643,
		"type_id": 146,
		"from_id": 551,
		"to_id": 15,
		"value": {
			"id": 295,
			"value": "🪢",
			"link_id": 643
		},
		"__typename": "links"
	},
	{
		"id": 644,
		"type_id": 3,
		"from_id": 551,
		"to_id": 643,
		"value": {
			"id": 296,
			"value": "SelectorSymbol",
			"link_id": 644
		},
		"__typename": "links"
	},
	{
		"id": 855,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 856,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 857,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 858,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 859,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 860,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 861,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 862,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 863,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 864,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 865,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 866,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 867,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 868,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 791,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 343,
			"value": "@deep-foundation/deepcase",
			"link_id": 791
		},
		"__typename": "links"
	},
	{
		"id": 792,
		"type_id": 66,
		"from_id": 791,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 793,
		"type_id": 3,
		"from_id": 754,
		"to_id": 791,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 794,
		"type_id": 713,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 344,
			"value": "({ deep, require }) => {\n  const React = require('react');\n  const { useState } = require('react');\n  const axiosHooks = require(\"axios-hooks\");\n  const axios = require(\"axios\");\n  const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n\n  return ({ fillSize, style, link }) => {\n\n    const ssl = deep.apolloClient.ssl;\n    const path = deep.apolloClient.path.slice(0, -4);\n    const url = `${ssl ? \"https://\" : \"http://\"}${path}/file?linkId=${link.id}`;\n\n    const [{ data, loading, error }, refetch] = useAxios({ \n      method: 'get',\n      url,\n      headers: {\n        'Authorization': `Bearer ${deep.token}`\n      },\n      \n      responseType: \"blob\",\n    });\n\n    const [src, setSrc] = useState(\"test\");\n    if (!loading && data) {\n      const reader = new window.FileReader();\n      reader.onload = () => {\n        setSrc(reader.result);\n      }\n      reader.readAsDataURL(data);\n    }\n\n    const renderMedia = () => {\n      if (src.startsWith('data:image')) {\n        return <img src={src} alt=\"An image from Deep file storage.\" style={style}></img>;\n      } else if (src.startsWith('data:audio')) {\n        return <audio src={src} controls style={style}>Your browser does not support the audio element.</audio>;\n      } else {\n        return <div>Unsupported file type.</div>;\n      }\n    } \n\n    return renderMedia();\n  }\n}\n",
			"link_id": 794
		},
		"__typename": "links"
	},
	{
		"id": 869,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 870,
		"type_id": 10,
		"from_id": 794,
		"to_id": 869,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 836,
		"type_id": 3,
		"from_id": 821,
		"to_id": 795,
		"value": {
			"id": 380,
			"value": "editorClientHandler",
			"link_id": 836
		},
		"__typename": "links"
	},
	{
		"id": 837,
		"type_id": 3,
		"from_id": 821,
		"to_id": 804,
		"value": {
			"id": 381,
			"value": "queryClientHandlerGeneratedFrom",
			"link_id": 837
		},
		"__typename": "links"
	},
	{
		"id": 838,
		"type_id": 3,
		"from_id": 821,
		"to_id": 796,
		"value": {
			"id": 382,
			"value": "queryClientHandler",
			"link_id": 838
		},
		"__typename": "links"
	},
	{
		"id": 839,
		"type_id": 3,
		"from_id": 821,
		"to_id": 815,
		"value": {
			"id": 383,
			"value": "editorHandleClientSyncTextFile",
			"link_id": 839
		},
		"__typename": "links"
	},
	{
		"id": 840,
		"type_id": 3,
		"from_id": 821,
		"to_id": 808,
		"value": {
			"id": 384,
			"value": "stringClientHandlerGeneratedFrom",
			"link_id": 840
		},
		"__typename": "links"
	},
	{
		"id": 841,
		"type_id": 3,
		"from_id": 821,
		"to_id": 797,
		"value": {
			"id": 385,
			"value": "stringClientHandler",
			"link_id": 841
		},
		"__typename": "links"
	},
	{
		"id": 842,
		"type_id": 3,
		"from_id": 821,
		"to_id": 800,
		"value": {
			"id": 386,
			"value": "travelerSymbol",
			"link_id": 842
		},
		"__typename": "links"
	},
	{
		"id": 843,
		"type_id": 3,
		"from_id": 821,
		"to_id": 799,
		"value": {
			"id": 387,
			"value": "Traveler",
			"link_id": 843
		},
		"__typename": "links"
	},
	{
		"id": 844,
		"type_id": 3,
		"from_id": 821,
		"to_id": 816,
		"value": {
			"id": 388,
			"value": "queryHandleClient",
			"link_id": 844
		},
		"__typename": "links"
	},
	{
		"id": 845,
		"type_id": 3,
		"from_id": 821,
		"to_id": 811,
		"value": {
			"id": 389,
			"value": "queryHandler",
			"link_id": 845
		},
		"__typename": "links"
	},
	{
		"id": 846,
		"type_id": 3,
		"from_id": 821,
		"to_id": 803,
		"value": {
			"id": 390,
			"value": "queryClientHandlerGenerated",
			"link_id": 846
		},
		"__typename": "links"
	},
	{
		"id": 847,
		"type_id": 3,
		"from_id": 821,
		"to_id": 817,
		"value": {
			"id": 391,
			"value": "editorHandleClientTSX",
			"link_id": 847
		},
		"__typename": "links"
	},
	{
		"id": 848,
		"type_id": 3,
		"from_id": 821,
		"to_id": 812,
		"value": {
			"id": 392,
			"value": "editorHandler",
			"link_id": 848
		},
		"__typename": "links"
	},
	{
		"id": 849,
		"type_id": 3,
		"from_id": 821,
		"to_id": 805,
		"value": {
			"id": 393,
			"value": "editorClientHandlerGenerated",
			"link_id": 849
		},
		"__typename": "links"
	},
	{
		"id": 850,
		"type_id": 3,
		"from_id": 821,
		"to_id": 807,
		"value": {
			"id": 394,
			"value": "stringClientHandlerGenerated",
			"link_id": 850
		},
		"__typename": "links"
	},
	{
		"id": 851,
		"type_id": 3,
		"from_id": 821,
		"to_id": 818,
		"value": {
			"id": 395,
			"value": "stringContainHandleClient",
			"link_id": 851
		},
		"__typename": "links"
	},
	{
		"id": 852,
		"type_id": 3,
		"from_id": 821,
		"to_id": 819,
		"value": {
			"id": 396,
			"value": "stringPackageQueryHandleClient",
			"link_id": 852
		},
		"__typename": "links"
	},
	{
		"id": 853,
		"type_id": 3,
		"from_id": 821,
		"to_id": 813,
		"value": {
			"id": 397,
			"value": "stringHandler",
			"link_id": 853
		},
		"__typename": "links"
	},
	{
		"id": 854,
		"type_id": 3,
		"from_id": 821,
		"to_id": 820,
		"value": {
			"id": 398,
			"value": "stringJoinHandleClient",
			"link_id": 854
		},
		"__typename": "links"
	},
	{
		"id": 905,
		"type_id": 3,
		"from_id": 380,
		"to_id": 821,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 906,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 7,
			"value": {
				"ids": [
					791,
					792,
					793,
					794,
					795,
					796,
					797,
					798,
					799,
					800,
					801,
					802,
					803,
					804,
					805,
					806,
					807,
					808,
					809,
					810,
					811,
					812,
					813,
					814,
					815,
					816,
					817,
					818,
					819,
					820,
					821,
					822,
					823,
					824,
					825,
					826,
					827,
					828,
					829,
					830,
					831,
					832,
					833,
					834,
					835,
					836,
					837,
					838,
					839,
					840,
					841,
					842,
					843,
					844,
					845,
					846,
					847,
					848,
					849,
					850,
					851,
					852,
					853,
					854,
					855,
					856,
					857,
					858,
					859,
					860,
					861,
					862,
					863,
					864,
					865,
					866,
					867,
					868
				],
				"errors": [],
				"packageId": 821,
				"namespaceId": 791
			},
			"link_id": 906
		},
		"__typename": "links"
	},
	{
		"id": 907,
		"type_id": 11,
		"from_id": 786,
		"to_id": 906,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 908,
		"type_id": 54,
		"from_id": 907,
		"to_id": 753,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 909,
		"type_id": 66,
		"from_id": 821,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 910,
		"type_id": 16,
		"from_id": 474,
		"to_id": 799,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 911,
		"type_id": 70,
		"from_id": 910,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 912,
		"type_id": 16,
		"from_id": 500,
		"to_id": 799,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 913,
		"type_id": 70,
		"from_id": 912,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 914,
		"type_id": 16,
		"from_id": 528,
		"to_id": 799,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 915,
		"type_id": 70,
		"from_id": 914,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 916,
		"type_id": 97,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 399,
			"value": "@deep-foundation/npm-packager-ui",
			"link_id": 916
		},
		"__typename": "links"
	},
	{
		"id": 917,
		"type_id": 750,
		"from_id": 380,
		"to_id": 916,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 918,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 919,
		"type_id": 10,
		"from_id": 917,
		"to_id": 918,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1005,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 416,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { Wrap, WrapItem, Stack, HStack, VStack, Flex, StackDivider, Box, Button, Text, Input } = require('@chakra-ui/react');\n    const { Resize } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const json5 = require('json5');\n    const { TbArrowMoveLeft, TbArrowMoveRight } = require('react-icons/tb');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const getSymbol = (link) => link?.inByType[deep.idLocal('@deep-foundation/core', 'Symbol')]?.[0]?.value?.value;\n    const getTypes = (link) => {\n        const types = [];\n        for (let l = link; l?.type && l?.id !== 1; l = link?.type)\n            types.push(link?.type_id);\n        return types;\n    };\n    const ListItem = ({ link, current, setCurrent, ...props }) => {\n        const _symbol = getSymbol(link) || getSymbol(link?.type) || getSymbol(link?.type?.type);\n        const _value = deep.stringify(link?.value?.value);\n        const __value = _value?.length > 29 ? _value.slice(0, 20) + '...' + _value.slice(-9, _value.length) : _value;\n        return (React.createElement(Box, { background: 'backgroundModal', p: '0.2rem', ...props },\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null,\n                    _symbol,\n                    \" \",\n                    link?.id,\n                    \" \",\n                    deep.nameLocal(link?.id))),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null, __value)),\n            React.createElement(Flex, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 2, justifyContent: 'space-between', alignItems: 'center', sx: {\n                    '& > *:not(:last-of-type)': {\n                        mr: '0.5rem'\n                    }\n                } },\n                !!link?.from_id && React.createElement(Button, { size: 'sm', variant: \"outline\", width: 'max-content', rightIcon: React.createElement(TbArrowMoveLeft, { size: '1.3rem' }), onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.from_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, { fontSize: 'sm' }, link?.from_id || 0)),\n                !!link?.to_id && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", leftIcon: React.createElement(TbArrowMoveRight, { size: '1.3rem' }), onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.to_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, null, link?.to_id || 0)),\n                !!link?.type_id && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.type_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, null,\n                        link?.type_id,\n                        \" \",\n                        deep.nameLocal(link?.type_id))))));\n    };\n    const List = ({ link, parentsQuery, childrenQuery, current, setCurrent }) => {\n        const { data: parents } = deep.useDeepSubscription(parentsQuery);\n        const { data: children } = deep.useDeepSubscription(childrenQuery);\n        const descriptionQuery = React.useMemo(() => {\n            return {\n                to: { down: {\n                        tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n                        link_id: { _in: [\n                                ...(current?.id ? [current.id] : []),\n                                ...parents?.map(l => l.id),\n                                ...children?.map(l => l.id),\n                                ...parents?.map(l => l.from_id),\n                                ...children?.map(l => l.from_id),\n                                ...parents?.map(l => l.to_id),\n                                ...children?.map(l => l.to_id),\n                            ] },\n                    } },\n                type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Contain'), deep.idLocal('@deep-foundation/core', 'Symbol')] },\n            };\n        }, [current, parents, children]);\n        const description = deep.useDeepSubscription(descriptionQuery);\n        deep.useDeepSubscription({\n            down: {\n                tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n                link_id: { _in: [\n                        ...(current?.id ? [current.id] : []),\n                        ...parents?.map(l => l.id),\n                        ...children?.map(l => l.id),\n                        ...parents?.map(l => l.from_id),\n                        ...children?.map(l => l.from_id),\n                        ...parents?.map(l => l.to_id),\n                        ...children?.map(l => l.to_id),\n                    ] },\n            },\n        });\n        return React.createElement(React.Fragment, null, !description.loading &&\n            React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', fontSize: 'sm' },\n                parents?.map(c => (React.createElement(ListItem, { key: c?.id, current: current, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c), bg: 'backgroundModal', p: '0.2rem' }))),\n                !!current && React.createElement(ListItem, { current: current, setCurrent: setCurrent, link: current, p: '0.2rem' }),\n                children?.map(c => (React.createElement(ListItem, { key: c?.id, current: current, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c) })))));\n    };\n    return ({ style, link, onChange, search, query, fillSize, children = null, }) => {\n        const [currentId, setCurrentId] = React.useState(link?.id || 0);\n        const setCurrent = React.useCallback((link) => setCurrentId(link?.id || 0));\n        const { data: [current] = [] } = deep.useDeepSubscription({ id: currentId });\n        const [mode, setMode] = React.useState(typeof (search) === 'string' ? 'Search' : typeof (query) === 'object' ? 'Query' : 'Contains');\n        const [viewSize, setViewSize] = React.useState({ height: 400, width: 450 });\n        React.useEffect(() => onChange && onChange(current), [current]);\n        const [trees, setTrees] = React.useState([]);\n        React.useEffect(() => {\n            mode === 'Trees' && (async () => {\n                setTrees((await deep.select({\n                    link_id: { _eq: current?.id },\n                    parent_id: { _eq: current?.id },\n                    distinct_on: ['tree_id'],\n                }, {\n                    table: 'tree',\n                    returning: `\n          id link_id tree_id root_id depth position_id\n        `,\n                }))?.data);\n            })();\n        }, [mode, current]);\n        const [tree, setTree] = React.useState();\n        React.useEffect(() => setTree(), [mode, current]);\n        const [q, setQ] = React.useState(query);\n        const setQoDebounce = useDebounceCallback((q) => {\n            try {\n                setQo(json5.parse(q));\n            }\n            catch (error) { }\n        }, 1000);\n        const [qo, setQo] = React.useState(q);\n        const [s, setS] = React.useState(search || '');\n        const setSoDebounce = useDebounceCallback((s) => {\n            const num = parseFloat(s);\n            const _or = [];\n            if (!Number.isNaN(num)) {\n                _or.push({ id: num }, { number: { value: num } });\n            }\n            _or.push({ string: { value: s } }, { string: { value: { _ilike: s } } }, { string: { value: { _similar: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _ilike: s } } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _similar: s } } } });\n            const query = JSON.stringify({\n                _or,\n            });\n            setQ(query);\n            try {\n                setQo(json5.parse(query));\n            }\n            catch (error) { }\n        }, 1000);\n        const { colorMode } = useColorMode();\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        const body = React.createElement(Box, { sx: {\n                height: fillSize ? '100%' : viewSize.height,\n                width: fillSize ? '100%' : viewSize.width,\n                overflowY: 'auto',\n                position: 'relative',\n                borderColor: 'borderColor',\n                borderWidth: 'thin',\n                borderRadius: '0.5rem',\n                p: '0.2rem',\n                ...style\n            } },\n            React.createElement(HStack, { align: 'stretch', justifyContent: 'space-between', sx: { position: 'sticky', top: 0, mb: '0.3rem' }, bg: 'transparent' },\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Search') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Search') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Search') }, \"\\uD83E\\uDEAC\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Query') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Query') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Query') }, \"\\uD83D\\uDD0D\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Contains') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Contains') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Contains') }, \"\\uD83D\\uDDC2\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'In/Out') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'In/Out') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('In/Out') }, \"In/Out\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Trees') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Trees') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Trees') }, \"\\uD83C\\uDF32\")),\n            mode === 'Search' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(Input, { autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                        width: '100%',\n                    }, onChange: (e) => {\n                        setS(e.target.value);\n                        setSoDebounce(e.target.value);\n                    }, value: s }),\n                React.createElement(List, { link: link, current: null, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: {\n                        ...qo,\n                        limit: 30,\n                    } })),\n            mode === 'Query' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(MonacoEditor, { options: {\n                        minimap: {\n                            enabled: false\n                        },\n                        lineNumbers: 'off',\n                        wordWrap: true,\n                    }, height: \"200px\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: q || '', onChange: (value) => {\n                        setQ(value);\n                        setQoDebounce(value);\n                    } }),\n                React.createElement(List, { link: link, current: null, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: {\n                        ...qo,\n                        limit: 30,\n                    } })),\n            mode === 'Contains' && current && React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                    out: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        to_id: current?.id,\n                    }\n                }, childrenQuery: {\n                    in: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: current?.id,\n                    }\n                } }),\n            mode === 'In/Out' && current && React.createElement(React.Fragment, null,\n                React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                        to_id: current?.id\n                    }, childrenQuery: {\n                        from_id: current?.id\n                    } })),\n            mode === 'Trees' && React.createElement(React.Fragment, null,\n                React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', bg: 'gray.800' }, [React.createElement(Wrap, { key: tree?.id || 0, spacing: 1, justify: 'center' }, trees?.map(t => React.createElement(WrapItem, { key: t?.id },\n                        React.createElement(Button, { size: 'sm', variant: tree?.id === t?.id ? 'solid' : \"outline\", onClick: () => setTree(t) }, deep.nameLocal(t?.tree_id)))))]),\n                !tree && React.createElement(React.Fragment, null,\n                    React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                            id: 0\n                        }, childrenQuery: {\n                            id: 0\n                        } })),\n                !!tree && React.createElement(React.Fragment, null, [React.createElement(List, { key: tree?.id, link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                            down: {\n                                tree_id: tree?.tree_id,\n                                position_id: tree?.position_id,\n                                link_id: current?.id\n                            },\n                        }, childrenQuery: { _and: [\n                                { up: {\n                                        tree_id: tree?.tree_id,\n                                        root_id: tree?.root_id,\n                                        parent_id: tree?.link_id,\n                                        depth: tree?.depth,\n                                    } },\n                                { down: {\n                                        tree_id: tree?.tree_id,\n                                        root_id: tree?.root_id,\n                                        depth: tree?.depth + 1,\n                                    } },\n                            ] } })])),\n            children);\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 1005
		},
		"__typename": "links"
	},
	{
		"id": 1006,
		"type_id": 3,
		"from_id": 974,
		"to_id": 1005,
		"value": {
			"id": 415,
			"value": "generated",
			"link_id": 1006
		},
		"__typename": "links"
	},
	{
		"id": 1007,
		"type_id": 143,
		"from_id": 1005,
		"to_id": 974,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1008,
		"type_id": 3,
		"from_id": 974,
		"to_id": 1007,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1044,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1045,
		"type_id": 66,
		"from_id": 1044,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1046,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1047,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1048,
		"type_id": 16,
		"from_id": 1047,
		"to_id": 1044,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1049,
		"type_id": 70,
		"from_id": 1048,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1050,
		"type_id": 18,
		"from_id": 1046,
		"to_id": 1047,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1051,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1052,
		"type_id": 16,
		"from_id": 1051,
		"to_id": 1044,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1053,
		"type_id": 70,
		"from_id": 1052,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1054,
		"type_id": 19,
		"from_id": 1046,
		"to_id": 1051,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1055,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1056,
		"type_id": 16,
		"from_id": 1055,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 871,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 346,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = require('react');\n    const axiosHooks = require(\"axios-hooks\");\n    const axios = require(\"axios\");\n    const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n    return ({ fillSize, style, link }) => {\n        const ssl = deep.apolloClient.ssl;\n        const path = deep.apolloClient.path.slice(0, -4);\n        const url = `${ssl ? \"https://\" : \"http://\"}${path}/file?linkId=${link.id}`;\n        const [{ data, loading, error }, refetch] = useAxios({\n            method: 'get',\n            url,\n            headers: {\n                'Authorization': `Bearer ${deep.token}`\n            },\n            responseType: \"blob\",\n        });\n        const [src, setSrc] = useState(\"test\");\n        if (!loading && data) {\n            const reader = new window.FileReader();\n            reader.onload = () => {\n                setSrc(reader.result);\n            };\n            reader.readAsDataURL(data);\n        }\n        const renderMedia = () => {\n            if (src.startsWith('data:image')) {\n                return React.createElement(\"img\", { src: src, alt: \"An image from Deep file storage.\", style: style });\n            }\n            else if (src.startsWith('data:audio')) {\n                return React.createElement(\"audio\", { src: src, controls: true, style: style }, \"Your browser does not support the audio element.\");\n            }\n            else {\n                return React.createElement(\"div\", null, \"Unsupported file type.\");\n            }\n        };\n        return renderMedia();\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 871
		},
		"__typename": "links"
	},
	{
		"id": 872,
		"type_id": 3,
		"from_id": 794,
		"to_id": 871,
		"value": {
			"id": 345,
			"value": "generated",
			"link_id": 872
		},
		"__typename": "links"
	},
	{
		"id": 873,
		"type_id": 143,
		"from_id": 871,
		"to_id": 794,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 874,
		"type_id": 3,
		"from_id": 794,
		"to_id": 873,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 875,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 3,
			"value": {
				"data": {}
			},
			"link_id": 875
		},
		"__typename": "links"
	},
	{
		"id": 876,
		"type_id": 11,
		"from_id": 869,
		"to_id": 875,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 877,
		"type_id": 54,
		"from_id": 876,
		"to_id": 718,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 880,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 349,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = React;\n    const json5 = require('json5');\n    const { useContainer, CytoEditorPreview } = require('@deep-foundation/deepcase');\n    const { Box, SimpleGrid } = require('@chakra-ui/react');\n    return ({ fillSize, style, link }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        return React.createElement(\"div\", { style: {\n                width: 600,\n                height: 600,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(CytoEditorPreview, { link: link, compact: true }));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 880
		},
		"__typename": "links"
	},
	{
		"id": 881,
		"type_id": 3,
		"from_id": 795,
		"to_id": 880,
		"value": {
			"id": 348,
			"value": "generated",
			"link_id": 881
		},
		"__typename": "links"
	},
	{
		"id": 882,
		"type_id": 143,
		"from_id": 880,
		"to_id": 795,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 883,
		"type_id": 3,
		"from_id": 795,
		"to_id": 882,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 884,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 4,
			"value": {
				"data": {}
			},
			"link_id": 884
		},
		"__typename": "links"
	},
	{
		"id": 885,
		"type_id": 11,
		"from_id": 878,
		"to_id": 884,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 886,
		"type_id": 54,
		"from_id": 885,
		"to_id": 718,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 796,
		"type_id": 713,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 350,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { useContainer, Resize, CustomizableIcon } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const { Box, IconButton, useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const { BsCheck2, BsLightbulbFill, BsLightbulbOff } = require('react-icons/bs');\n    const { motion, useAnimation } = require('framer-motion');\n\n    const variants = {\n      view: {\n        opacity: 1,\n        scale: 1,\n        transition: {\n          duration: 1,\n          delay: 0.3,\n          scale: { delay: 0.5, } \n        }\n      },\n      hide: {\n        opacity: 0, \n        scale: 0,\n        transition: {\n          type: 'spring'\n        }\n      },\n      initial: {\n        originX: 1,\n        opacity: 1,\n        scale: 1,\n      }\n    };\n  \n    const stackVariants = {\n      outside: {\n        x: '0%',\n        opacity: 1,\n        scale: 1,\n        originX: 0,\n        transition: {\n          type: 'spring',\n\n          duration: 0.5,\n          delay: 0.2,\n          scale: { delay: 0.3, }\n        }\n      },\n      nested: {\n        x: '-100%',\n        opacity: 1,\n        scale: 1,\n        originX: 1,\n        transition: {\n          type: 'spring',\n          duration: 0.5,\n          delay: 0.2,\n          scale: { delay: 0.3, }\n        }\n      },\n      initial: {\n        x: '0%',\n        opacity: 0,\n        scale: 0,\n      }\n    };\n    \n    // Only objects editor.\n    return ({ fillSize, style, link }) => {\n      const currentValue = deep.stringify(link?.value?.value) || '';\n      const [value, setValue] = useState(currentValue);\n      const isSaved = value == currentValue;\n      const [container] = useContainer();\n      const { data } = deep.useDeepSubscription({\n        type_id: { _in: [\n          deep.idLocal('@deep-foundation/core', 'Active'),\n          deep.idLocal('@deep-foundation/core', 'Contain'),\n        ] },\n        to_id: { _eq: link.id },\n      });\n      const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'))\n      const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'))\n\n      const [viewSize, setViewSize] = useState({width: 300, height: 300});\n      const terminalBorderWidth = viewSize.width - 1;\n      const terminalBorderHeight = viewSize.height - 1;\n\n      const control = useAnimation();\n      const controlStack = useAnimation();\n\n      useEffect(() => {\n        if (value) {\n          control.start('view')\n        } else {\n          control.start('hide')\n        };\n        if (fillSize === true) {\n          controlStack.start('nested')\n        } else {\n          // controlStack.start('initial')\n          controlStack.start('outside')\n        };\n\n      }, [control, controlStack, value, fillSize])\n\n      const { colorMode } = useColorMode();\n\n      const body = <div\n          style={{\n            width: viewSize.width,\n            height: viewSize.height,\n            ...style,\n            position: 'relative',\n          }}\n        >\n          <Box \n            position='relative'\n            display='grid' \n            gridTemplateColumns='1fr max-content' \n            height='inherit'\n          >\n            <Box\n              position='relative'\n              overflow='hidden' sx={{ borderRadius: 5 }}\n              border='1px dashed #605c60'\n            > \n              <MonacoEditor\n                options={{\n                  minimap: {\n                    enabled: false\n                  },\n                  lineNumbers: 'off',\n                  wordWrap: true,\n                }}\n                height=\"100%\"\n                width=\"100%\"\n                theme={colorMode === 'light' ? 'light' : \"vs-dark\"}\n                defaultLanguage=\"json\"\n                defaultValue={value || ''}\n                onChange={(value) => setValue(value)}\n                // onMount={handleEditorDidMount}\n              />\n            </Box>\n            <Box\n              as={motion.div}\n              animate={controlStack}\n              variants={stackVariants}\n              initial='initial'\n              // height={stackHeight}\n              height={fillSize ? '100%' : viewSize.height}\n              display='flex'\n              justifyContent='space-between'\n              flexDirection='column'\n              ml={fillSize ? 0 : '0.2rem'}\n            >\n              <IconButton \n                as={motion.div}\n                variants={variants}\n                initial='initial'\n                // whileInView='view'\n                animate='view'\n                aria-label='activate/inactivate button' \n                bg={active && colorMode === 'dark' ? 'gray.700' : 'blue.50'}\n                _hover={{\n                  bg: 'blue.100'\n                }}\n                isRound\n                variant='outline'\n                sx={{ borderColor: active ? '#111' : 'rgb(0, 128, 255)' }}\n                mr={fillSize ? '0.2rem' : 0}\n                mt={fillSize ? '0.2rem' : 0}\n                size='xs'\n                onClick={async () => {\n                    if (active) {\n                      await deep.delete({\n                        _or: [{\n                          id: { _eq: active?.id },\n                      }, {\n                          type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: link.id,\n                        to_id: active.id,\n                      }],\n                    });\n                  } else {\n                      await deep.insert({\n                        type_id: deep.idLocal('@deep-foundation/core', 'Active'),\n                      from_id: contain.from_id,\n                      to_id: contain.to_id,\n                      in: { data: {\n                          type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: link.id,\n                      } },\n                    });\n                  }\n                }}\n                icon={active ? <BsLightbulbOff /> : <CustomizableIcon Component={BsLightbulbFill} value={{ color: 'rgb(0, 128, 255)' }} />}\n              />\n              <IconButton \n                as={motion.div}\n                variants={variants}\n                initial='initial'\n                animate={control}\n                whileInView='view'\n                // isDisabled={isSaved}\n                aria-label='save button' \n                isRound\n                bg='blue.50'\n                _hover={{\n                  bg: 'blue.100'\n                }}\n                variant='outline'\n                sx={{ borderColor: 'rgb(0, 128, 255)' }}\n                mr={fillSize ? '0.2rem' : 0}\n                mb={fillSize ? '0.2rem' : 0}\n                // isLoading={!isSaved}\n                size='xs'\n                icon={<CustomizableIcon Component={BsCheck2} value={{ color: 'rgb(0, 128, 255)' }} />}\n                onClick={() => {\n                  try {\n                    const _value = json5.parse(value);\n                    if (!link.value) deep.insert({\n                      link_id: link.id, value: _value,\n                    }, { table: 'objects' });\n                    deep.update({ link_id: link.id }, { value: _value }, { table: 'objects' });\n                  } catch(error) {}\n                }}\n              />\n            </Box>\n          </Box>\n        </div>;\n\n      return  <>\n        {fillSize \n        ? body \n        : <Resize\n            onChangeSize={(viewSize) => setViewSize(viewSize)} \n            style={{\n            // position: 'relative',\n            // overflow: nested ? 'hidden' : 'inherit',\n            borderRadius: 5,\n            border: 'none',\n          }}\n        >{body}</Resize>}\n      </>;\n    }\n  }\n",
			"link_id": 796
		},
		"__typename": "links"
	},
	{
		"id": 887,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 888,
		"type_id": 10,
		"from_id": 796,
		"to_id": 887,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 816,
		"type_id": 156,
		"from_id": 58,
		"to_id": 811,
		"value": {
			"id": 365,
			"value": "",
			"link_id": 816
		},
		"__typename": "links"
	},
	{
		"id": 835,
		"type_id": 3,
		"from_id": 821,
		"to_id": 806,
		"value": {
			"id": 379,
			"value": "editorClientHandlerGeneratedFrom",
			"link_id": 835
		},
		"__typename": "links"
	},
	{
		"id": 924,
		"type_id": 3,
		"from_id": 754,
		"to_id": 922,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 925,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 401,
			"value": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n({ deep, require }) => {\n    const React = require('react');\n    const { useState } = React;\n    const { Text, Box, Button, Link, Input, VStack, useColorModeValue } = require('@chakra-ui/react');\n    const { ExternalLinkIcon } = require('@chakra-ui/icons');\n    return ({ fillSize, style, link }) => {\n        var _a, _b, _c, _d;\n        const axiosHooks = require(\"axios-hooks\");\n        const axios = require(\"axios\");\n        const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n        const packageId = link.id;\n        const packageTypeId = deep.idLocal('@deep-foundation/core', 'Package');\n        const packageNamespaceTypeId = deep.idLocal('@deep-foundation/core', 'PackageNamespace');\n        const packageVersionTypeId = deep.idLocal('@deep-foundation/core', 'PackageVersion');\n        const packageActiveTypeId = deep.idLocal('@deep-foundation/core', 'PackageActive');\n        const packageQueryTypeId = deep.idLocal('@deep-foundation/core', 'PackageQuery');\n        const { data: prefetchedNpmPackageLinks } = deep.useDeepSubscription({\n            up: {\n                parent: {\n                    type_id: { _eq: packageTypeId },\n                    string: { value: { _in: [\"@deep-foundation/npm-packager\"] } }\n                }\n            }\n        });\n        const { data: prefetchedPackageActiveLinksAndNamespace } = deep.useDeepSubscription({\n            type_id: { _in: [packageNamespaceTypeId, packageVersionTypeId, packageTypeId, packageActiveTypeId] }\n        });\n        const pkg = deep.minilinks.byId[packageId];\n        const pkgVersion = (_b = (_a = pkg === null || pkg === void 0 ? void 0 : pkg.in) === null || _a === void 0 ? void 0 : _a.filter(v => v.type_id === packageVersionTypeId)) === null || _b === void 0 ? void 0 : _b[0];\n        const pkgVersionValue = ((_c = pkgVersion === null || pkgVersion === void 0 ? void 0 : pkgVersion.value) === null || _c === void 0 ? void 0 : _c.value) || \"\";\n        const packageNamespaceId = pkgVersion === null || pkgVersion === void 0 ? void 0 : pkgVersion.from_id;\n        const packageName = ((_d = pkg === null || pkg === void 0 ? void 0 : pkg.value) === null || _d === void 0 ? void 0 : _d.value) || \"\";\n        const [currentPackageName, setCurrentPackageName] = useState(packageName);\n        const [currentPackageVersion, setCurrentPackageVersion] = useState(pkgVersionValue);\n        let packageUrl = `https://registry.npmjs.com/${currentPackageName}`;\n        const [{ data, loading, error }, refetch] = useAxios(packageUrl);\n        let displayUrl = `npmjs.com/package/${currentPackageName}`;\n        if (!data || !!(data === null || data === void 0 ? void 0 : data.error) || error) {\n            displayUrl = undefined;\n        }\n        const bg = useColorModeValue('#eeeeee', '#1e1e1e');\n        const borderColor = useColorModeValue('#a3a3a3', '#4d4d4d');\n        return (React.createElement(\"div\", { style: Object.assign(Object.assign({}, style), { position: 'relative' }) },\n            React.createElement(Box, { maxW: 'md', minW: 'sm', w: 'sm', borderColor: borderColor, borderWidth: '1px', borderRadius: 'lg', overflow: 'hidden', bg: bg },\n                displayUrl ? React.createElement(Box, { p: 2 },\n                    React.createElement(Link, { fontSize: 'xs', href: `https://${displayUrl}`, isExternal: true },\n                        displayUrl,\n                        \" \",\n                        React.createElement(ExternalLinkIcon, { mx: '2px' })),\n                    \" \") : null,\n                React.createElement(VStack, { p: 2 },\n                    React.createElement(Input, { placeholder: 'package name', value: currentPackageName, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageName(e.target.value) }),\n                    React.createElement(Input, { placeholder: 'package version', value: currentPackageVersion, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageVersion(e.target.value) }),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n                            var _e;\n                            let actualNamespaceId = packageNamespaceId;\n                            if (!packageNamespaceId && currentPackageName) {\n                                const { data: [packageNamespaceLink] } = yield deep.insert({\n                                    type_id: packageNamespaceTypeId,\n                                    string: { data: { value: currentPackageName } },\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceLink.id;\n                            }\n                            else if (currentPackageName) {\n                                const { data: [{ link: packageNamespaceLink }] } = yield deep.update({ link_id: packageNamespaceId }, { value: currentPackageName }, { table: 'strings', returning: `link { ${deep.selectReturning} }` });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceId;\n                            }\n                            const packageActiveLinks = deep.minilinks.byId[actualNamespaceId].out.filter(l => l.type_id == packageActiveTypeId);\n                            if (!(packageActiveLinks === null || packageActiveLinks === void 0 ? void 0 : packageActiveLinks.length)) {\n                                const { data: [packageActiveLink] } = yield deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageActiveTypeId,\n                                    to_id: packageId,\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageActiveLink]);\n                            }\n                            if (currentPackageName) {\n                                if ((_e = pkg === null || pkg === void 0 ? void 0 : pkg.value) === null || _e === void 0 ? void 0 : _e.value) {\n                                    yield deep.update({ link_id: pkg === null || pkg === void 0 ? void 0 : pkg.id }, { value: currentPackageName }, { table: 'strings' });\n                                }\n                                else {\n                                    yield deep.insert({\n                                        link_id: pkg === null || pkg === void 0 ? void 0 : pkg.id,\n                                        value: currentPackageName\n                                    }, { table: 'strings' });\n                                }\n                            }\n                            if (!(pkgVersion === null || pkgVersion === void 0 ? void 0 : pkgVersion.id)) {\n                                const { data: [{ id: packageVersionId }] } = yield deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageVersionTypeId,\n                                    to_id: pkg === null || pkg === void 0 ? void 0 : pkg.id,\n                                    string: { data: { value: currentPackageVersion || '0.0.0' } },\n                                });\n                            }\n                            else if (currentPackageVersion) {\n                                yield deep.update({ link_id: pkgVersion === null || pkgVersion === void 0 ? void 0 : pkgVersion.id }, { value: currentPackageVersion }, { table: 'strings' });\n                            }\n                        }) }, \"save\"),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n                            if (!((prefetchedNpmPackageLinks === null || prefetchedNpmPackageLinks === void 0 ? void 0 : prefetchedNpmPackageLinks.length) > 0)) {\n                                return;\n                            }\n                            const publishTypeId = deep.idLocal('@deep-foundation/npm-packager', 'Publish');\n                            const { data: [{ id: packageQueryId }] } = yield deep.insert({\n                                type_id: packageQueryTypeId,\n                                string: { data: { value: currentPackageName } },\n                            });\n                            const { data: [{ id: publishId }] } = yield deep.insert({\n                                from_id: pkg === null || pkg === void 0 ? void 0 : pkg.id,\n                                type_id: publishTypeId,\n                                to_id: packageQueryId\n                            });\n                        }) }, \"publish\")))));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 925
		},
		"__typename": "links"
	},
	{
		"id": 926,
		"type_id": 35,
		"from_id": 145,
		"to_id": 925,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 927,
		"type_id": 156,
		"from_id": 2,
		"to_id": 926,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 928,
		"type_id": 713,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 402,
			"value": "({ deep, require }) => {\n  const React = require('react');\n  const { useState } = React;\n  const { Text, Box, Button, Link, Input, VStack, useColorModeValue } = require('@chakra-ui/react');\n  const { ExternalLinkIcon } = require('@chakra-ui/icons');\n\n  return ({ fillSize, style, link }) => {\n    const axiosHooks = require(\"axios-hooks\");\n    const axios = require(\"axios\");\n    const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n    const packageId = link.id;\n    const packageTypeId = deep.idLocal('@deep-foundation/core', 'Package');\n    const packageNamespaceTypeId = deep.idLocal('@deep-foundation/core', 'PackageNamespace');\n    const packageVersionTypeId = deep.idLocal('@deep-foundation/core', 'PackageVersion');\n    const packageActiveTypeId = deep.idLocal('@deep-foundation/core', 'PackageActive');\n    const packageQueryTypeId = deep.idLocal('@deep-foundation/core', 'PackageQuery'); \n    const { data: prefetchedNpmPackageLinks } = deep.useDeepSubscription({ \n      up: { \n        parent: { \n          type_id: {_eq: packageTypeId},\n          string: { value: { _in: [\"@deep-foundation/npm-packager\"] } }\n        }\n      }\n    });     \n    const { data: prefetchedPackageActiveLinksAndNamespace } = deep.useDeepSubscription({\n      type_id: { _in: [packageNamespaceTypeId, packageVersionTypeId, packageTypeId, packageActiveTypeId] } \n    }); \n    const pkg = deep.minilinks.byId[packageId];\n    const pkgVersion = pkg?.in?.filter(v => v.type_id === packageVersionTypeId)?.[0];\n    const pkgVersionValue = pkgVersion?.value?.value || \"\";\n    const packageNamespaceId = pkgVersion?.from_id;\n    const packageName = pkg?.value?.value || \"\";\n    const [currentPackageName, setCurrentPackageName] = useState(packageName);\n    const [currentPackageVersion, setCurrentPackageVersion] = useState(pkgVersionValue); \n    let packageUrl = `https://registry.npmjs.com/${currentPackageName}`;\n    const [{ data, loading, error }, refetch] = useAxios(packageUrl);\n    let displayUrl = `npmjs.com/package/${currentPackageName}`\n    if (!data || !!data?.error || error) {\n      displayUrl = undefined;\n    }\n\n    const bg = useColorModeValue('#eeeeee', '#1e1e1e');\n    const borderColor = useColorModeValue('#a3a3a3', '#4d4d4d');\n\n    return (<div\n        style={{\n          // width: '100%',\n          // height: '100%',\n          ...style,\n          position: 'relative',\n        }}\n      >\n        <Box maxW='md' minW='sm' w='sm' borderColor={borderColor} borderWidth='1px' borderRadius='lg' overflow='hidden' bg={bg}>\n      {displayUrl ? <Box p={2}><Link fontSize='xs' href={`https://${displayUrl}`} isExternal>\n        {displayUrl} <ExternalLinkIcon mx='2px' />\n      </Link> </Box> : null}\n        <VStack p={2}>\n          <Input \n            placeholder='package name'\n            value={currentPackageName}\n            borderColor={borderColor}\n            size='sm'\n            onChange={(e) => setCurrentPackageName(e.target.value)}\n            />\n          <Input \n            placeholder='package version'\n            value={currentPackageVersion}\n            borderColor={borderColor}\n            size='sm'\n            onChange={(e) => setCurrentPackageVersion(e.target.value)}\n            />\n          <Button colorScheme='blue' size='sm' w='100%' onClick={async () => {\n            let actualNamespaceId = packageNamespaceId;\n            // console.log('npm-packager-ui-output', 'actualNamespaceId', actualNamespaceId);\n            // console.log('npm-packager-ui-output', 'currentPackageName', currentPackageName);\n            // console.log('npm-packager-ui-output', '!packageNamespaceId && currentPackageName', !packageNamespaceId && currentPackageName);\n            // console.log('npm-packager-ui-output', '!!currentPackageName', !!currentPackageName);\n            if (!packageNamespaceId && currentPackageName) {\n              const { data: [packageNamespaceLink] } = await deep.insert({\n                type_id: packageNamespaceTypeId,\n                string: { data: { value: currentPackageName } },\n              }, { returning: deep.selectReturning });\n              deep.minilinks.apply([packageNamespaceLink]);\n              actualNamespaceId = packageNamespaceLink.id;\n              // console.log('npm-packager-ui-output', 'actualNamespaceId after insert', actualNamespaceId);\n            } else if (currentPackageName) {\n              // console.log('npm-packager-ui-output', 'before update');\n              const { data: [{ link: packageNamespaceLink }] } = await deep.update(\n                { link_id: packageNamespaceId },\n                { value: currentPackageName },\n                { table: 'strings', returning: `link { ${deep.selectReturning} }` }\n              );\n              deep.minilinks.apply([packageNamespaceLink]);\n              // console.log('npm-packager-ui-output', 'after update', packageNamespaceLink);\n              actualNamespaceId = packageNamespaceId;\n            }\n            const packageActiveLinks = deep.minilinks.byId[actualNamespaceId].out.filter(l => l.type_id == packageActiveTypeId);\n            // console.log('npm-packager-ui-output', 'packageActiveLinks', packageActiveLinks);\n            if (!packageActiveLinks?.length) {\n              const { data: [packageActiveLink] } = await deep.insert({\n                from_id: actualNamespaceId,\n                type_id: packageActiveTypeId,\n                to_id: packageId,\n              }, { returning: deep.selectReturning });\n              deep.minilinks.apply([packageActiveLink]);\n            }\n            if (currentPackageName) {\n              if (pkg?.value?.value) {\n                await deep.update(\n                  { link_id: pkg?.id },\n                  { value: currentPackageName },\n                  { table: 'strings' }\n                );\n              } else {\n                await deep.insert(\n                  { \n                    link_id: pkg?.id,\n                    value: currentPackageName\n                  },\n                  { table: 'strings' }\n                );\n              }\n            }\n            if (!pkgVersion?.id) {\n              const { data: [{ id: packageVersionId }] } = await deep.insert({\n                from_id: actualNamespaceId,\n                type_id: packageVersionTypeId,\n                to_id: pkg?.id,\n                string: { data: { value: currentPackageVersion || '0.0.0' } },\n              });\n            } else if (currentPackageVersion) {\n              await deep.update(\n                { link_id: pkgVersion?.id },\n                { value: currentPackageVersion },\n                { table: 'strings' }\n              );\n            }\n          }}>save</Button>\n          <Button colorScheme='blue' size='sm' w='100%' onClick={async () => {\n            if (!(prefetchedNpmPackageLinks?.length > 0)) {\n              return;\n            }\n            const publishTypeId = deep.idLocal('@deep-foundation/npm-packager', 'Publish');\n            const { data: [{ id: packageQueryId }] } = await deep.insert({\n              type_id: packageQueryTypeId,\n              string: { data: { value: currentPackageName } },\n            });\n            const { data: [{ id: publishId }] } = await deep.insert({\n              from_id: pkg?.id,\n              type_id: publishTypeId,\n              to_id: packageQueryId\n            });\n          }}>publish</Button>\n        </VStack>\n      </Box>\n    </div>\n  );\n  }\n}",
			"link_id": 928
		},
		"__typename": "links"
	},
	{
		"id": 949,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 950,
		"type_id": 10,
		"from_id": 928,
		"to_id": 949,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1009,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 10,
			"value": {
				"data": {}
			},
			"link_id": 1009
		},
		"__typename": "links"
	},
	{
		"id": 1010,
		"type_id": 11,
		"from_id": 1003,
		"to_id": 1009,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1011,
		"type_id": 54,
		"from_id": 1010,
		"to_id": 718,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 975,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 417,
			"value": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n({ deep, require }) => {\n    const React = require('react');\n    const { Wrap, WrapItem, Stack, HStack, VStack, Flex, StackDivider, Box, Button, Text, Input } = require('@chakra-ui/react');\n    const { Resize } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const json5 = require('json5');\n    const { TbArrowMoveLeft, TbArrowMoveRight } = require('react-icons/tb');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const getSymbol = (link) => { var _a, _b, _c; return (_c = (_b = (_a = link === null || link === void 0 ? void 0 : link.inByType[deep.idLocal('@deep-foundation/core', 'Symbol')]) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.value) === null || _c === void 0 ? void 0 : _c.value; };\n    const getTypes = (link) => {\n        const types = [];\n        for (let l = link; (l === null || l === void 0 ? void 0 : l.type) && (l === null || l === void 0 ? void 0 : l.id) !== 1; l = link === null || link === void 0 ? void 0 : link.type)\n            types.push(link === null || link === void 0 ? void 0 : link.type_id);\n        return types;\n    };\n    const ListItem = (_a) => {\n        var _b, _c;\n        var { link, current, setCurrent } = _a, props = __rest(_a, [\"link\", \"current\", \"setCurrent\"]);\n        const _symbol = getSymbol(link) || getSymbol(link === null || link === void 0 ? void 0 : link.type) || getSymbol((_b = link === null || link === void 0 ? void 0 : link.type) === null || _b === void 0 ? void 0 : _b.type);\n        const _value = deep.stringify((_c = link === null || link === void 0 ? void 0 : link.value) === null || _c === void 0 ? void 0 : _c.value);\n        const __value = (_value === null || _value === void 0 ? void 0 : _value.length) > 29 ? _value.slice(0, 20) + '...' + _value.slice(-9, _value.length) : _value;\n        return (React.createElement(Box, Object.assign({ background: 'backgroundModal', p: '0.2rem' }, props),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null,\n                    _symbol,\n                    \" \", link === null || link === void 0 ? void 0 :\n                    link.id,\n                    \" \",\n                    deep.nameLocal(link === null || link === void 0 ? void 0 : link.id))),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null, __value)),\n            React.createElement(Flex, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 2, justifyContent: 'space-between', alignItems: 'center', sx: {\n                    '& > *:not(:last-of-type)': {\n                        mr: '0.5rem'\n                    }\n                } },\n                !!(link === null || link === void 0 ? void 0 : link.from_id) && React.createElement(Button, { size: 'sm', variant: \"outline\", width: 'max-content', rightIcon: React.createElement(TbArrowMoveLeft, { size: '1.3rem' }), onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n                        const { data: [next] } = yield deep.select(link === null || link === void 0 ? void 0 : link.from_id);\n                        setCurrent(next);\n                    }) },\n                    React.createElement(Text, { fontSize: 'sm' }, (link === null || link === void 0 ? void 0 : link.from_id) || 0)),\n                !!(link === null || link === void 0 ? void 0 : link.to_id) && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", leftIcon: React.createElement(TbArrowMoveRight, { size: '1.3rem' }), onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n                        const { data: [next] } = yield deep.select(link === null || link === void 0 ? void 0 : link.to_id);\n                        setCurrent(next);\n                    }) },\n                    React.createElement(Text, null, (link === null || link === void 0 ? void 0 : link.to_id) || 0)),\n                !!(link === null || link === void 0 ? void 0 : link.type_id) && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n                        const { data: [next] } = yield deep.select(link === null || link === void 0 ? void 0 : link.type_id);\n                        setCurrent(next);\n                    }) },\n                    React.createElement(Text, null, link === null || link === void 0 ? void 0 :\n                        link.type_id,\n                        \" \",\n                        deep.nameLocal(link === null || link === void 0 ? void 0 : link.type_id))))));\n    };\n    const List = ({ link, parentsQuery, childrenQuery, current, setCurrent }) => {\n        const { data: parents } = deep.useDeepSubscription(parentsQuery);\n        const { data: children } = deep.useDeepSubscription(childrenQuery);\n        const descriptionQuery = React.useMemo(() => {\n            return {\n                to: { down: {\n                        tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n                        link_id: { _in: [\n                                ...((current === null || current === void 0 ? void 0 : current.id) ? [current.id] : []),\n                                ...parents === null || parents === void 0 ? void 0 : parents.map(l => l.id),\n                                ...children === null || children === void 0 ? void 0 : children.map(l => l.id),\n                                ...parents === null || parents === void 0 ? void 0 : parents.map(l => l.from_id),\n                                ...children === null || children === void 0 ? void 0 : children.map(l => l.from_id),\n                                ...parents === null || parents === void 0 ? void 0 : parents.map(l => l.to_id),\n                                ...children === null || children === void 0 ? void 0 : children.map(l => l.to_id),\n                            ] },\n                    } },\n                type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Contain'), deep.idLocal('@deep-foundation/core', 'Symbol')] },\n            };\n        }, [current, parents, children]);\n        const description = deep.useDeepSubscription(descriptionQuery);\n        deep.useDeepSubscription({\n            down: {\n                tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n                link_id: { _in: [\n                        ...((current === null || current === void 0 ? void 0 : current.id) ? [current.id] : []),\n                        ...parents === null || parents === void 0 ? void 0 : parents.map(l => l.id),\n                        ...children === null || children === void 0 ? void 0 : children.map(l => l.id),\n                        ...parents === null || parents === void 0 ? void 0 : parents.map(l => l.from_id),\n                        ...children === null || children === void 0 ? void 0 : children.map(l => l.from_id),\n                        ...parents === null || parents === void 0 ? void 0 : parents.map(l => l.to_id),\n                        ...children === null || children === void 0 ? void 0 : children.map(l => l.to_id),\n                    ] },\n            },\n        });\n        return React.createElement(React.Fragment, null, !description.loading &&\n            React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', fontSize: 'sm' }, parents === null || parents === void 0 ? void 0 :\n                parents.map(c => (React.createElement(ListItem, { key: c === null || c === void 0 ? void 0 : c.id, current: current, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c), bg: 'backgroundModal', p: '0.2rem' }))),\n                !!current && React.createElement(ListItem, { current: current, setCurrent: setCurrent, link: current, p: '0.2rem' }), children === null || children === void 0 ? void 0 :\n                children.map(c => (React.createElement(ListItem, { key: c === null || c === void 0 ? void 0 : c.id, current: current, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c) })))));\n    };\n    return ({ style, link, onChange, search, query, fillSize, children = null, }) => {\n        const [currentId, setCurrentId] = React.useState((link === null || link === void 0 ? void 0 : link.id) || 0);\n        const setCurrent = React.useCallback((link) => setCurrentId((link === null || link === void 0 ? void 0 : link.id) || 0));\n        const { data: [current] = [] } = deep.useDeepSubscription({ id: currentId });\n        const [mode, setMode] = React.useState(typeof (search) === 'string' ? 'Search' : typeof (query) === 'object' ? 'Query' : 'Contains');\n        const [viewSize, setViewSize] = React.useState({ height: 400, width: 450 });\n        React.useEffect(() => onChange && onChange(current), [current]);\n        const [trees, setTrees] = React.useState([]);\n        React.useEffect(() => {\n            mode === 'Trees' && (() => __awaiter(void 0, void 0, void 0, function* () {\n                var _a;\n                setTrees((_a = (yield deep.select({\n                    link_id: { _eq: current === null || current === void 0 ? void 0 : current.id },\n                    parent_id: { _eq: current === null || current === void 0 ? void 0 : current.id },\n                    distinct_on: ['tree_id'],\n                }, {\n                    table: 'tree',\n                    returning: `\n          id link_id tree_id root_id depth position_id\n        `,\n                }))) === null || _a === void 0 ? void 0 : _a.data);\n            }))();\n        }, [mode, current]);\n        const [tree, setTree] = React.useState();\n        React.useEffect(() => setTree(), [mode, current]);\n        const [q, setQ] = React.useState(query);\n        const setQoDebounce = useDebounceCallback((q) => {\n            try {\n                setQo(json5.parse(q));\n            }\n            catch (error) { }\n        }, 1000);\n        const [qo, setQo] = React.useState(q);\n        const [s, setS] = React.useState(search || '');\n        const setSoDebounce = useDebounceCallback((s) => {\n            const num = parseFloat(s);\n            const _or = [];\n            if (!Number.isNaN(num)) {\n                _or.push({ id: num }, { number: { value: num } });\n            }\n            _or.push({ string: { value: s } }, { string: { value: { _ilike: s } } }, { string: { value: { _similar: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _ilike: s } } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _similar: s } } } });\n            const query = JSON.stringify({\n                _or,\n            });\n            setQ(query);\n            try {\n                setQo(json5.parse(query));\n            }\n            catch (error) { }\n        }, 1000);\n        const { colorMode } = useColorMode();\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        const body = React.createElement(Box, { sx: Object.assign({ height: fillSize ? '100%' : viewSize.height, width: fillSize ? '100%' : viewSize.width, overflowY: 'auto', position: 'relative', borderColor: 'borderColor', borderWidth: 'thin', borderRadius: '0.5rem', p: '0.2rem' }, style) },\n            React.createElement(HStack, { align: 'stretch', justifyContent: 'space-between', sx: { position: 'sticky', top: 0, mb: '0.3rem' }, bg: 'transparent' },\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Search') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Search') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Search') }, \"\\uD83E\\uDEAC\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Query') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Query') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Query') }, \"\\uD83D\\uDD0D\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Contains') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Contains') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Contains') }, \"\\uD83D\\uDDC2\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'In/Out') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'In/Out') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('In/Out') }, \"In/Out\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Trees') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Trees') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Trees') }, \"\\uD83C\\uDF32\")),\n            mode === 'Search' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(Input, { autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                        width: '100%',\n                    }, onChange: (e) => {\n                        setS(e.target.value);\n                        setSoDebounce(e.target.value);\n                    }, value: s }),\n                React.createElement(List, { link: link, current: null, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: Object.assign(Object.assign({}, qo), { limit: 30 }) })),\n            mode === 'Query' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(MonacoEditor, { options: {\n                        minimap: {\n                            enabled: false\n                        },\n                        lineNumbers: 'off',\n                        wordWrap: true,\n                    }, height: \"200px\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: q || '', onChange: (value) => {\n                        setQ(value);\n                        setQoDebounce(value);\n                    } }),\n                React.createElement(List, { link: link, current: null, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: Object.assign(Object.assign({}, qo), { limit: 30 }) })),\n            mode === 'Contains' && current && React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                    out: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        to_id: current === null || current === void 0 ? void 0 : current.id,\n                    }\n                }, childrenQuery: {\n                    in: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: current === null || current === void 0 ? void 0 : current.id,\n                    }\n                } }),\n            mode === 'In/Out' && current && React.createElement(React.Fragment, null,\n                React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                        to_id: current === null || current === void 0 ? void 0 : current.id\n                    }, childrenQuery: {\n                        from_id: current === null || current === void 0 ? void 0 : current.id\n                    } })),\n            mode === 'Trees' && React.createElement(React.Fragment, null,\n                React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', bg: 'gray.800' }, [React.createElement(Wrap, { key: (tree === null || tree === void 0 ? void 0 : tree.id) || 0, spacing: 1, justify: 'center' }, trees === null || trees === void 0 ? void 0 : trees.map(t => React.createElement(WrapItem, { key: t === null || t === void 0 ? void 0 : t.id },\n                        React.createElement(Button, { size: 'sm', variant: (tree === null || tree === void 0 ? void 0 : tree.id) === (t === null || t === void 0 ? void 0 : t.id) ? 'solid' : \"outline\", onClick: () => setTree(t) }, deep.nameLocal(t === null || t === void 0 ? void 0 : t.tree_id)))))]),\n                !tree && React.createElement(React.Fragment, null,\n                    React.createElement(List, { link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                            id: 0\n                        }, childrenQuery: {\n                            id: 0\n                        } })),\n                !!tree && React.createElement(React.Fragment, null, [React.createElement(List, { key: tree === null || tree === void 0 ? void 0 : tree.id, link: link, current: current, setCurrent: setCurrent, parentsQuery: {\n                            down: {\n                                tree_id: tree === null || tree === void 0 ? void 0 : tree.tree_id,\n                                position_id: tree === null || tree === void 0 ? void 0 : tree.position_id,\n                                link_id: current === null || current === void 0 ? void 0 : current.id\n                            },\n                        }, childrenQuery: { _and: [\n                                { up: {\n                                        tree_id: tree === null || tree === void 0 ? void 0 : tree.tree_id,\n                                        root_id: tree === null || tree === void 0 ? void 0 : tree.root_id,\n                                        parent_id: tree === null || tree === void 0 ? void 0 : tree.link_id,\n                                        depth: tree === null || tree === void 0 ? void 0 : tree.depth,\n                                    } },\n                                { down: {\n                                        tree_id: tree === null || tree === void 0 ? void 0 : tree.tree_id,\n                                        root_id: tree === null || tree === void 0 ? void 0 : tree.root_id,\n                                        depth: (tree === null || tree === void 0 ? void 0 : tree.depth) + 1,\n                                    } },\n                            ] } })])),\n            children);\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 975
		},
		"__typename": "links"
	},
	{
		"id": 976,
		"type_id": 143,
		"from_id": 975,
		"to_id": 974,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 977,
		"type_id": 35,
		"from_id": 145,
		"to_id": 975,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 978,
		"type_id": 156,
		"from_id": 1,
		"to_id": 977,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 979,
		"type_id": 810,
		"from_id": 973,
		"to_id": 977,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 980,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 418,
			"value": "@deep-foundation/finder",
			"link_id": 980
		},
		"__typename": "links"
	},
	{
		"id": 981,
		"type_id": 3,
		"from_id": 754,
		"to_id": 980,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 982,
		"type_id": 3,
		"from_id": 375,
		"to_id": 980,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 983,
		"type_id": 66,
		"from_id": 980,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 984,
		"type_id": 3,
		"from_id": 970,
		"to_id": 980,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 985,
		"type_id": 46,
		"from_id": 970,
		"to_id": 980,
		"value": {
			"id": 419,
			"value": "0.0.4",
			"link_id": 985
		},
		"__typename": "links"
	},
	{
		"id": 986,
		"type_id": 45,
		"from_id": 970,
		"to_id": 980,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1057,
		"type_id": 70,
		"from_id": 1056,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1058,
		"type_id": 20,
		"from_id": 1046,
		"to_id": 1055,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1074,
		"type_id": 58,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 13,
			"value": {
				"down": {
					"link_id": {
						"_eq": 22
					},
					"tree_id": {
						"_eq": 183
					}
				}
			},
			"link_id": 1074
		},
		"__typename": "links"
	},
	{
		"id": 1075,
		"type_id": 3,
		"from_id": 1059,
		"to_id": 1074,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1076,
		"type_id": 92,
		"from_id": 1059,
		"to_id": 1074,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1077,
		"type_id": 3,
		"from_id": 1059,
		"to_id": 1076,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1078,
		"type_id": 799,
		"from_id": 1059,
		"to_id": 1074,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1079,
		"type_id": 3,
		"from_id": 1059,
		"to_id": 1078,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1080,
		"type_id": 58,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 14,
			"value": {
				"type_id": 22
			},
			"link_id": 1080
		},
		"__typename": "links"
	},
	{
		"id": 1081,
		"type_id": 3,
		"from_id": 1059,
		"to_id": 1080,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1082,
		"type_id": 92,
		"from_id": 1059,
		"to_id": 1080,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1083,
		"type_id": 3,
		"from_id": 1059,
		"to_id": 1082,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1084,
		"type_id": 799,
		"from_id": 22,
		"to_id": 1080,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1085,
		"type_id": 3,
		"from_id": 1059,
		"to_id": 1084,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1124,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1125,
		"type_id": 66,
		"from_id": 1124,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1126,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1127,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1128,
		"type_id": 16,
		"from_id": 1127,
		"to_id": 1124,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1129,
		"type_id": 70,
		"from_id": 1128,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1130,
		"type_id": 18,
		"from_id": 1126,
		"to_id": 1127,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1131,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1132,
		"type_id": 16,
		"from_id": 1131,
		"to_id": 1124,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1133,
		"type_id": 70,
		"from_id": 1132,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1134,
		"type_id": 19,
		"from_id": 1126,
		"to_id": 1131,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1135,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1136,
		"type_id": 16,
		"from_id": 1135,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1137,
		"type_id": 70,
		"from_id": 1136,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1138,
		"type_id": 20,
		"from_id": 1126,
		"to_id": 1135,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1139,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1140,
		"type_id": 66,
		"from_id": 1139,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1196,
		"type_id": 16,
		"from_id": 1195,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1197,
		"type_id": 70,
		"from_id": 1196,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1198,
		"type_id": 20,
		"from_id": 1186,
		"to_id": 1195,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 2,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 3,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 4,
		"type_id": 1,
		"from_id": 8,
		"to_id": 1,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 5,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 6,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 7,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 8,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 9,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 10,
		"type_id": 1,
		"from_id": 8,
		"to_id": 9,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 11,
		"type_id": 1,
		"from_id": 9,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 12,
		"type_id": 1,
		"from_id": 9,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 13,
		"type_id": 4,
		"from_id": 1,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 14,
		"type_id": 4,
		"from_id": 2,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 15,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 16,
		"type_id": 1,
		"from_id": 15,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 17,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 18,
		"type_id": 1,
		"from_id": 17,
		"to_id": 15,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 19,
		"type_id": 1,
		"from_id": 17,
		"to_id": 15,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 20,
		"type_id": 1,
		"from_id": 17,
		"to_id": 15,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 21,
		"type_id": 4,
		"from_id": 3,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 22,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 23,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 24,
		"type_id": 4,
		"from_id": 23,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 25,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 26,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 27,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 28,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 29,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 30,
		"type_id": 29,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 31,
		"type_id": 4,
		"from_id": 30,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 32,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 33,
		"type_id": 32,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 34,
		"type_id": 1,
		"from_id": 1,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 35,
		"type_id": 1,
		"from_id": 82,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 36,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 37,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 38,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 39,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 40,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 41,
		"type_id": 37,
		"from_id": 40,
		"to_id": 3,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 42,
		"type_id": 39,
		"from_id": 40,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 43,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 44,
		"type_id": 4,
		"from_id": 43,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 45,
		"type_id": 1,
		"from_id": 43,
		"to_id": 2,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 57,
		"type_id": 29,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 178,
		"type_id": 39,
		"from_id": 175,
		"to_id": 9,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 179,
		"type_id": 37,
		"from_id": 175,
		"to_id": 11,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 249,
		"type_id": 3,
		"from_id": 184,
		"to_id": 65,
		"value": {
			"id": 71,
			"value": "guests",
			"link_id": 249
		},
		"__typename": "links"
	},
	{
		"id": 270,
		"type_id": 3,
		"from_id": 184,
		"to_id": 86,
		"value": {
			"id": 92,
			"value": "packageInstallCode",
			"link_id": 270
		},
		"__typename": "links"
	},
	{
		"id": 302,
		"type_id": 3,
		"from_id": 184,
		"to_id": 118,
		"value": {
			"id": 124,
			"value": "TreeIncludeOut",
			"link_id": 302
		},
		"__typename": "links"
	},
	{
		"id": 354,
		"type_id": 3,
		"from_id": 184,
		"to_id": 170,
		"value": {
			"id": 176,
			"value": "dockerJSSupportsCompatableHandleDelete",
			"link_id": 354
		},
		"__typename": "links"
	},
	{
		"id": 355,
		"type_id": 3,
		"from_id": 184,
		"to_id": 171,
		"value": {
			"id": 177,
			"value": "dockerJSSupportsCompatableHandleSchedule",
			"link_id": 355
		},
		"__typename": "links"
	},
	{
		"id": 356,
		"type_id": 3,
		"from_id": 184,
		"to_id": 172,
		"value": {
			"id": 178,
			"value": "dockerJSSupportsCompatableHandlePort",
			"link_id": 356
		},
		"__typename": "links"
	},
	{
		"id": 357,
		"type_id": 3,
		"from_id": 184,
		"to_id": 173,
		"value": {
			"id": 179,
			"value": "dockerJSSupportsCompatableHandleRoute",
			"link_id": 357
		},
		"__typename": "links"
	},
	{
		"id": 358,
		"type_id": 3,
		"from_id": 184,
		"to_id": 174,
		"value": {
			"id": 180,
			"value": "clientJSSupportsCompatableHandleClient",
			"link_id": 358
		},
		"__typename": "links"
	},
	{
		"id": 359,
		"type_id": 3,
		"from_id": 184,
		"to_id": 175,
		"value": {
			"id": 181,
			"value": "promiseTree",
			"link_id": 359
		},
		"__typename": "links"
	},
	{
		"id": 360,
		"type_id": 3,
		"from_id": 184,
		"to_id": 176,
		"value": {
			"id": 182,
			"value": "promiseTreeAny",
			"link_id": 360
		},
		"__typename": "links"
	},
	{
		"id": 361,
		"type_id": 3,
		"from_id": 184,
		"to_id": 177,
		"value": {
			"id": 183,
			"value": "promiseTreeThen",
			"link_id": 361
		},
		"__typename": "links"
	},
	{
		"id": 362,
		"type_id": 3,
		"from_id": 184,
		"to_id": 178,
		"value": {
			"id": 184,
			"value": "promiseTreePromise",
			"link_id": 362
		},
		"__typename": "links"
	},
	{
		"id": 363,
		"type_id": 3,
		"from_id": 184,
		"to_id": 179,
		"value": {
			"id": 185,
			"value": "promiseTreeResolved",
			"link_id": 363
		},
		"__typename": "links"
	},
	{
		"id": 364,
		"type_id": 3,
		"from_id": 184,
		"to_id": 180,
		"value": {
			"id": 186,
			"value": "promiseTreeRejected",
			"link_id": 364
		},
		"__typename": "links"
	},
	{
		"id": 365,
		"type_id": 3,
		"from_id": 184,
		"to_id": 181,
		"value": {
			"id": 187,
			"value": "promiseTreePromiseResult",
			"link_id": 365
		},
		"__typename": "links"
	},
	{
		"id": 366,
		"type_id": 3,
		"from_id": 184,
		"to_id": 182,
		"value": {
			"id": 188,
			"value": "MigrationsEnd",
			"link_id": 366
		},
		"__typename": "links"
	},
	{
		"id": 795,
		"type_id": 713,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 347,
			"value": "({ deep, require }) => {\n  const React = require('react');\n  const { useState } = React;\n  const json5 = require('json5');\n  const { useContainer, CytoEditorPreview } = require('@deep-foundation/deepcase');\n  const { Box, SimpleGrid } = require('@chakra-ui/react');\n  // Only objects editor.\n  return ({ fillSize, style, link }) => {\n    const currentValue = deep.stringify(link?.value?.value) || '';\n    const [value, setValue] = useState(currentValue);\n    const isSaved = value == currentValue;\n    const [container] = useContainer();\n    const { data } = deep.useDeepSubscription({\n      type_id: { _in: [\n        deep.idLocal('@deep-foundation/core', 'Active'),\n        deep.idLocal('@deep-foundation/core', 'Contain'),\n      ] },\n      to_id: { _eq: link.id },\n    });\n    const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'))\n    const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'))\n    return <div\n      style={{\n        width: 600,\n        height: 600,\n        ...style,\n        position: 'relative',\n      }}\n    >\n      <CytoEditorPreview link={link} compact/>\n    </div>;\n  }\n}",
			"link_id": 795
		},
		"__typename": "links"
	},
	{
		"id": 878,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 879,
		"type_id": 10,
		"from_id": 795,
		"to_id": 878,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 825,
		"type_id": 3,
		"from_id": 791,
		"to_id": 821,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 951,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 404,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = React;\n    const { Text, Box, Button, Link, Input, VStack, useColorModeValue } = require('@chakra-ui/react');\n    const { ExternalLinkIcon } = require('@chakra-ui/icons');\n    return ({ fillSize, style, link }) => {\n        const axiosHooks = require(\"axios-hooks\");\n        const axios = require(\"axios\");\n        const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n        const packageId = link.id;\n        const packageTypeId = deep.idLocal('@deep-foundation/core', 'Package');\n        const packageNamespaceTypeId = deep.idLocal('@deep-foundation/core', 'PackageNamespace');\n        const packageVersionTypeId = deep.idLocal('@deep-foundation/core', 'PackageVersion');\n        const packageActiveTypeId = deep.idLocal('@deep-foundation/core', 'PackageActive');\n        const packageQueryTypeId = deep.idLocal('@deep-foundation/core', 'PackageQuery');\n        const { data: prefetchedNpmPackageLinks } = deep.useDeepSubscription({\n            up: {\n                parent: {\n                    type_id: { _eq: packageTypeId },\n                    string: { value: { _in: [\"@deep-foundation/npm-packager\"] } }\n                }\n            }\n        });\n        const { data: prefetchedPackageActiveLinksAndNamespace } = deep.useDeepSubscription({\n            type_id: { _in: [packageNamespaceTypeId, packageVersionTypeId, packageTypeId, packageActiveTypeId] }\n        });\n        const pkg = deep.minilinks.byId[packageId];\n        const pkgVersion = pkg?.in?.filter(v => v.type_id === packageVersionTypeId)?.[0];\n        const pkgVersionValue = pkgVersion?.value?.value || \"\";\n        const packageNamespaceId = pkgVersion?.from_id;\n        const packageName = pkg?.value?.value || \"\";\n        const [currentPackageName, setCurrentPackageName] = useState(packageName);\n        const [currentPackageVersion, setCurrentPackageVersion] = useState(pkgVersionValue);\n        let packageUrl = `https://registry.npmjs.com/${currentPackageName}`;\n        const [{ data, loading, error }, refetch] = useAxios(packageUrl);\n        let displayUrl = `npmjs.com/package/${currentPackageName}`;\n        if (!data || !!data?.error || error) {\n            displayUrl = undefined;\n        }\n        const bg = useColorModeValue('#eeeeee', '#1e1e1e');\n        const borderColor = useColorModeValue('#a3a3a3', '#4d4d4d');\n        return (React.createElement(\"div\", { style: {\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Box, { maxW: 'md', minW: 'sm', w: 'sm', borderColor: borderColor, borderWidth: '1px', borderRadius: 'lg', overflow: 'hidden', bg: bg },\n                displayUrl ? React.createElement(Box, { p: 2 },\n                    React.createElement(Link, { fontSize: 'xs', href: `https://${displayUrl}`, isExternal: true },\n                        displayUrl,\n                        \" \",\n                        React.createElement(ExternalLinkIcon, { mx: '2px' })),\n                    \" \") : null,\n                React.createElement(VStack, { p: 2 },\n                    React.createElement(Input, { placeholder: 'package name', value: currentPackageName, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageName(e.target.value) }),\n                    React.createElement(Input, { placeholder: 'package version', value: currentPackageVersion, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageVersion(e.target.value) }),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', onClick: async () => {\n                            let actualNamespaceId = packageNamespaceId;\n                            if (!packageNamespaceId && currentPackageName) {\n                                const { data: [packageNamespaceLink] } = await deep.insert({\n                                    type_id: packageNamespaceTypeId,\n                                    string: { data: { value: currentPackageName } },\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceLink.id;\n                            }\n                            else if (currentPackageName) {\n                                const { data: [{ link: packageNamespaceLink }] } = await deep.update({ link_id: packageNamespaceId }, { value: currentPackageName }, { table: 'strings', returning: `link { ${deep.selectReturning} }` });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceId;\n                            }\n                            const packageActiveLinks = deep.minilinks.byId[actualNamespaceId].out.filter(l => l.type_id == packageActiveTypeId);\n                            if (!packageActiveLinks?.length) {\n                                const { data: [packageActiveLink] } = await deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageActiveTypeId,\n                                    to_id: packageId,\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageActiveLink]);\n                            }\n                            if (currentPackageName) {\n                                if (pkg?.value?.value) {\n                                    await deep.update({ link_id: pkg?.id }, { value: currentPackageName }, { table: 'strings' });\n                                }\n                                else {\n                                    await deep.insert({\n                                        link_id: pkg?.id,\n                                        value: currentPackageName\n                                    }, { table: 'strings' });\n                                }\n                            }\n                            if (!pkgVersion?.id) {\n                                const { data: [{ id: packageVersionId }] } = await deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageVersionTypeId,\n                                    to_id: pkg?.id,\n                                    string: { data: { value: currentPackageVersion || '0.0.0' } },\n                                });\n                            }\n                            else if (currentPackageVersion) {\n                                await deep.update({ link_id: pkgVersion?.id }, { value: currentPackageVersion }, { table: 'strings' });\n                            }\n                        } }, \"save\"),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', onClick: async () => {\n                            if (!(prefetchedNpmPackageLinks?.length > 0)) {\n                                return;\n                            }\n                            const publishTypeId = deep.idLocal('@deep-foundation/npm-packager', 'Publish');\n                            const { data: [{ id: packageQueryId }] } = await deep.insert({\n                                type_id: packageQueryTypeId,\n                                string: { data: { value: currentPackageName } },\n                            });\n                            const { data: [{ id: publishId }] } = await deep.insert({\n                                from_id: pkg?.id,\n                                type_id: publishTypeId,\n                                to_id: packageQueryId\n                            });\n                        } }, \"publish\")))));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 951
		},
		"__typename": "links"
	},
	{
		"id": 952,
		"type_id": 3,
		"from_id": 928,
		"to_id": 951,
		"value": {
			"id": 403,
			"value": "generated",
			"link_id": 952
		},
		"__typename": "links"
	},
	{
		"id": 953,
		"type_id": 143,
		"from_id": 951,
		"to_id": 928,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 954,
		"type_id": 3,
		"from_id": 928,
		"to_id": 953,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 955,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 8,
			"value": {
				"data": {}
			},
			"link_id": 955
		},
		"__typename": "links"
	},
	{
		"id": 956,
		"type_id": 11,
		"from_id": 949,
		"to_id": 955,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 957,
		"type_id": 54,
		"from_id": 956,
		"to_id": 718,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 987,
		"type_id": 3,
		"from_id": 980,
		"to_id": 976,
		"value": {
			"id": 420,
			"value": "generatedFrom",
			"link_id": 987
		},
		"__typename": "links"
	},
	{
		"id": 661,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 662,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 663,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 664,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 665,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 666,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 667,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 668,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 669,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 670,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 671,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 672,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 673,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 674,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 675,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 676,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 677,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 678,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 679,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 680,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 681,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 682,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 683,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 684,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 685,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 686,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 687,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 688,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 689,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 690,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 691,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 692,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 693,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 694,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 695,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 696,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 697,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 698,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 699,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 700,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 701,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 702,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 703,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 704,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 705,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 706,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 707,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 708,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 709,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 710,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 711,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 550,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 206,
			"value": "@deep-foundation/core-symbols",
			"link_id": 550
		},
		"__typename": "links"
	},
	{
		"id": 551,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 207,
			"value": "@deep-foundation/core-symbols",
			"link_id": 551
		},
		"__typename": "links"
	},
	{
		"id": 552,
		"type_id": 3,
		"from_id": 375,
		"to_id": 551,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 553,
		"type_id": 66,
		"from_id": 551,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 588,
		"type_id": 3,
		"from_id": 551,
		"to_id": 587,
		"value": {
			"id": 240,
			"value": "SelectorFilterSymbol",
			"link_id": 588
		},
		"__typename": "links"
	},
	{
		"id": 645,
		"type_id": 146,
		"from_id": 551,
		"to_id": 12,
		"value": {
			"id": 297,
			"value": "🔴",
			"link_id": 645
		},
		"__typename": "links"
	},
	{
		"id": 988,
		"type_id": 3,
		"from_id": 980,
		"to_id": 978,
		"value": {
			"id": 421,
			"value": "handleClient",
			"link_id": 988
		},
		"__typename": "links"
	},
	{
		"id": 989,
		"type_id": 3,
		"from_id": 980,
		"to_id": 979,
		"value": {
			"id": 422,
			"value": "context",
			"link_id": 989
		},
		"__typename": "links"
	},
	{
		"id": 990,
		"type_id": 3,
		"from_id": 980,
		"to_id": 977,
		"value": {
			"id": 423,
			"value": "handler",
			"link_id": 990
		},
		"__typename": "links"
	},
	{
		"id": 1017,
		"type_id": 97,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 427,
			"value": "@deep-foundation/deepcase-opened",
			"link_id": 1017
		},
		"__typename": "links"
	},
	{
		"id": 1018,
		"type_id": 750,
		"from_id": 380,
		"to_id": 1017,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1019,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1020,
		"type_id": 10,
		"from_id": 1018,
		"to_id": 1019,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1059,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1060,
		"type_id": 66,
		"from_id": 1059,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1061,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1062,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1063,
		"type_id": 16,
		"from_id": 1062,
		"to_id": 1059,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1064,
		"type_id": 70,
		"from_id": 1063,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1065,
		"type_id": 18,
		"from_id": 1061,
		"to_id": 1062,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1066,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1067,
		"type_id": 16,
		"from_id": 1066,
		"to_id": 1059,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1068,
		"type_id": 70,
		"from_id": 1067,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1069,
		"type_id": 19,
		"from_id": 1061,
		"to_id": 1066,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1070,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 731,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 732,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 733,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 734,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 735,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 736,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 737,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 738,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 712,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 313,
			"value": "@deep-foundation/tsx",
			"link_id": 712
		},
		"__typename": "links"
	},
	{
		"id": 713,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 314,
			"value": "TSX",
			"link_id": 713
		},
		"__typename": "links"
	},
	{
		"id": 714,
		"type_id": 146,
		"from_id": 713,
		"to_id": 713,
		"value": {
			"id": 315,
			"value": "📑",
			"link_id": 714
		},
		"__typename": "links"
	},
	{
		"id": 715,
		"type_id": 4,
		"from_id": 713,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 716,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 316,
			"value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n    const ts = require('typescript');\n  const { data: [generatedFrom] } = await deep.select({\n      type_id: await deep.id('@deep-foundation/core', 'GeneratedFrom'),\n    to_id: newLink.id, \n  });\n  const value = newLink?.value?.value;\n  let compiledString = '';\n  if (value) {\n      const result = ts.transpileModule(value, {\n        \"compilerOptions\": {\n        \"allowSyntheticDefaultImports\": true,\n        \"experimentalDecorators\": true,\n        \"sourceMap\": true, \n        \"noImplicitAny\": false,\n        \"removeComments\": true,\n        \"jsx\": \"react\",\n        \"module\": \"ESNext\",\n        \"moduleResolution\": \"node\",\n        \"target\": \"ESNext\",\n        \"skipLibCheck\": true,\n        \"resolveJsonModule\": true,\n        \"esModuleInterop\": true,\n        \"isolatedModules\": true\n      }\n    });\n    if (!result.outputText) {\n      throw result;\n    }\n    compiledString = result.outputText || '';\n  }\n  if (!generatedFrom) {\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/core', 'GeneratedFrom'),\n      to_id: newLink.id,\n      in: { data: {\n          type_id: await deep.id('@deep-foundation/core', 'Contain'),\n        from_id: newLink.id,\n      } },\n      from: { data: {\n          type_id: await deep.id('@deep-foundation/core', 'SyncTextFile'),\n        string: { data: { value: compiledString } },\n        in: { data: {\n            type_id: await deep.id('@deep-foundation/core', 'Contain'),\n          from_id: newLink.id,\n          string: { data: { value: 'generated' } },\n        } },\n      } },\n    });\n  } else {\n      await deep.update({\n        link_id: { _eq: generatedFrom.from_id },\n    }, {\n        value: compiledString,\n    }, { table: 'strings' });\n  }\n}\n",
			"link_id": 716
		},
		"__typename": "links"
	},
	{
		"id": 717,
		"type_id": 35,
		"from_id": 83,
		"to_id": 716,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1071,
		"type_id": 16,
		"from_id": 1070,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1072,
		"type_id": 70,
		"from_id": 1071,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1073,
		"type_id": 20,
		"from_id": 1061,
		"to_id": 1070,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1092,
		"type_id": 55,
		"from_id": 821,
		"to_id": 809,
		"value": {
			"id": 16,
			"value": {
				"x": 100.69018112776172,
				"y": 381.7158132010159
			},
			"link_id": 1092
		},
		"__typename": "links"
	},
	{
		"id": 1093,
		"type_id": 3,
		"from_id": 821,
		"to_id": 1092,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1109,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1110,
		"type_id": 66,
		"from_id": 1109,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 46,
		"type_id": 1,
		"from_id": 43,
		"to_id": 2,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 47,
		"type_id": 4,
		"from_id": 46,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 48,
		"type_id": 1,
		"from_id": 1,
		"to_id": 1,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 49,
		"type_id": 48,
		"from_id": 8,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 50,
		"type_id": 48,
		"from_id": 8,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 51,
		"type_id": 48,
		"from_id": 8,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 52,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 69,
		"type_id": 39,
		"from_id": 67,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 70,
		"type_id": 1,
		"from_id": 8,
		"to_id": 36,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 71,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 72,
		"type_id": 1,
		"from_id": 15,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 73,
		"type_id": 1,
		"from_id": 15,
		"to_id": 58,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 74,
		"type_id": 48,
		"from_id": 8,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 75,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 76,
		"type_id": 4,
		"from_id": 75,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 77,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 1,
			"value": "Router",
			"link_id": 77
		},
		"__typename": "links"
	},
	{
		"id": 141,
		"type_id": 82,
		"from_id": 139,
		"to_id": 140,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 142,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 180,
		"type_id": 37,
		"from_id": 175,
		"to_id": 12,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 212,
		"type_id": 3,
		"from_id": 184,
		"to_id": 28,
		"value": {
			"id": 34,
			"value": "AllowSelect",
			"link_id": 212
		},
		"__typename": "links"
	},
	{
		"id": 217,
		"type_id": 3,
		"from_id": 184,
		"to_id": 33,
		"value": {
			"id": 39,
			"value": "JSExecutionProvider",
			"link_id": 217
		},
		"__typename": "links"
	},
	{
		"id": 272,
		"type_id": 3,
		"from_id": 184,
		"to_id": 88,
		"value": {
			"id": 94,
			"value": "packageInstallCodeHandleInsert",
			"link_id": 272
		},
		"__typename": "links"
	},
	{
		"id": 273,
		"type_id": 3,
		"from_id": 184,
		"to_id": 89,
		"value": {
			"id": 95,
			"value": "packagePublishCode",
			"link_id": 273
		},
		"__typename": "links"
	},
	{
		"id": 274,
		"type_id": 3,
		"from_id": 184,
		"to_id": 90,
		"value": {
			"id": 96,
			"value": "packagePublishCodeHandler",
			"link_id": 274
		},
		"__typename": "links"
	},
	{
		"id": 275,
		"type_id": 3,
		"from_id": 184,
		"to_id": 91,
		"value": {
			"id": 97,
			"value": "packagePublishCodeHandleInsert",
			"link_id": 275
		},
		"__typename": "links"
	},
	{
		"id": 276,
		"type_id": 3,
		"from_id": 184,
		"to_id": 92,
		"value": {
			"id": 98,
			"value": "Active",
			"link_id": 276
		},
		"__typename": "links"
	},
	{
		"id": 277,
		"type_id": 3,
		"from_id": 184,
		"to_id": 93,
		"value": {
			"id": 99,
			"value": "AllowPackageInstall",
			"link_id": 277
		},
		"__typename": "links"
	},
	{
		"id": 278,
		"type_id": 3,
		"from_id": 184,
		"to_id": 94,
		"value": {
			"id": 100,
			"value": "AllowPackagePublish",
			"link_id": 278
		},
		"__typename": "links"
	},
	{
		"id": 279,
		"type_id": 3,
		"from_id": 184,
		"to_id": 95,
		"value": {
			"id": 101,
			"value": "PromiseOut",
			"link_id": 279
		},
		"__typename": "links"
	},
	{
		"id": 280,
		"type_id": 3,
		"from_id": 184,
		"to_id": 96,
		"value": {
			"id": 102,
			"value": "promiseOutValue",
			"link_id": 280
		},
		"__typename": "links"
	},
	{
		"id": 281,
		"type_id": 3,
		"from_id": 184,
		"to_id": 97,
		"value": {
			"id": 103,
			"value": "PackageQuery",
			"link_id": 281
		},
		"__typename": "links"
	},
	{
		"id": 282,
		"type_id": 3,
		"from_id": 184,
		"to_id": 98,
		"value": {
			"id": 104,
			"value": "packageQueryValue",
			"link_id": 282
		},
		"__typename": "links"
	},
	{
		"id": 283,
		"type_id": 3,
		"from_id": 184,
		"to_id": 99,
		"value": {
			"id": 105,
			"value": "Port",
			"link_id": 283
		},
		"__typename": "links"
	},
	{
		"id": 284,
		"type_id": 3,
		"from_id": 184,
		"to_id": 100,
		"value": {
			"id": 106,
			"value": "portValue",
			"link_id": 284
		},
		"__typename": "links"
	},
	{
		"id": 285,
		"type_id": 3,
		"from_id": 184,
		"to_id": 101,
		"value": {
			"id": 107,
			"value": "HandlePort",
			"link_id": 285
		},
		"__typename": "links"
	},
	{
		"id": 286,
		"type_id": 3,
		"from_id": 184,
		"to_id": 102,
		"value": {
			"id": 108,
			"value": "PackageInstalled",
			"link_id": 286
		},
		"__typename": "links"
	},
	{
		"id": 287,
		"type_id": 3,
		"from_id": 184,
		"to_id": 103,
		"value": {
			"id": 109,
			"value": "PackagePublished",
			"link_id": 287
		},
		"__typename": "links"
	},
	{
		"id": 288,
		"type_id": 3,
		"from_id": 184,
		"to_id": 104,
		"value": {
			"id": 110,
			"value": "Route",
			"link_id": 288
		},
		"__typename": "links"
	},
	{
		"id": 289,
		"type_id": 3,
		"from_id": 184,
		"to_id": 105,
		"value": {
			"id": 111,
			"value": "RouterListening",
			"link_id": 289
		},
		"__typename": "links"
	},
	{
		"id": 290,
		"type_id": 3,
		"from_id": 184,
		"to_id": 106,
		"value": {
			"id": 112,
			"value": "RouterStringUse",
			"link_id": 290
		},
		"__typename": "links"
	},
	{
		"id": 291,
		"type_id": 3,
		"from_id": 184,
		"to_id": 107,
		"value": {
			"id": 113,
			"value": "routerStringUseValue",
			"link_id": 291
		},
		"__typename": "links"
	},
	{
		"id": 292,
		"type_id": 3,
		"from_id": 184,
		"to_id": 108,
		"value": {
			"id": 114,
			"value": "HandleRoute",
			"link_id": 292
		},
		"__typename": "links"
	},
	{
		"id": 293,
		"type_id": 3,
		"from_id": 184,
		"to_id": 109,
		"value": {
			"id": 115,
			"value": "routeTree",
			"link_id": 293
		},
		"__typename": "links"
	},
	{
		"id": 294,
		"type_id": 3,
		"from_id": 184,
		"to_id": 110,
		"value": {
			"id": 116,
			"value": "routeTreePort",
			"link_id": 294
		},
		"__typename": "links"
	},
	{
		"id": 296,
		"type_id": 3,
		"from_id": 184,
		"to_id": 112,
		"value": {
			"id": 118,
			"value": "routeTreeRoute",
			"link_id": 296
		},
		"__typename": "links"
	},
	{
		"id": 323,
		"type_id": 3,
		"from_id": 184,
		"to_id": 139,
		"value": {
			"id": 145,
			"value": "Plv8IsolationProvider",
			"link_id": 323
		},
		"__typename": "links"
	},
	{
		"id": 324,
		"type_id": 3,
		"from_id": 184,
		"to_id": 140,
		"value": {
			"id": 146,
			"value": "JSminiExecutionProvider",
			"link_id": 324
		},
		"__typename": "links"
	},
	{
		"id": 325,
		"type_id": 3,
		"from_id": 184,
		"to_id": 141,
		"value": {
			"id": 147,
			"value": "plv8SupportsJs",
			"link_id": 325
		},
		"__typename": "links"
	},
	{
		"id": 326,
		"type_id": 3,
		"from_id": 184,
		"to_id": 142,
		"value": {
			"id": 148,
			"value": "Authorization",
			"link_id": 326
		},
		"__typename": "links"
	},
	{
		"id": 327,
		"type_id": 3,
		"from_id": 184,
		"to_id": 143,
		"value": {
			"id": 149,
			"value": "GeneratedFrom",
			"link_id": 327
		},
		"__typename": "links"
	},
	{
		"id": 328,
		"type_id": 3,
		"from_id": 184,
		"to_id": 144,
		"value": {
			"id": 150,
			"value": "ClientJSIsolationProvider",
			"link_id": 328
		},
		"__typename": "links"
	},
	{
		"id": 329,
		"type_id": 3,
		"from_id": 184,
		"to_id": 145,
		"value": {
			"id": 151,
			"value": "clientSupportsJs",
			"link_id": 329
		},
		"__typename": "links"
	},
	{
		"id": 367,
		"type_id": 3,
		"from_id": 184,
		"to_id": 183,
		"value": {
			"id": 189,
			"value": "typesTree",
			"link_id": 367
		},
		"__typename": "links"
	},
	{
		"id": 368,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 190,
			"value": "@deep-foundation/core",
			"link_id": 368
		},
		"__typename": "links"
	},
	{
		"id": 369,
		"type_id": 45,
		"from_id": 368,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 370,
		"type_id": 46,
		"from_id": 368,
		"to_id": 184,
		"value": {
			"id": 191,
			"value": "0.0.2",
			"link_id": 370
		},
		"__typename": "links"
	},
	{
		"id": 371,
		"type_id": 3,
		"from_id": 368,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 375,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 376,
		"type_id": 3,
		"from_id": 373,
		"to_id": 375,
		"value": {
			"id": 194,
			"value": "packages",
			"link_id": 376
		},
		"__typename": "links"
	},
	{
		"id": 377,
		"type_id": 66,
		"from_id": 375,
		"to_id": 373,
		"value": {
			"id": 195,
			"value": "packages",
			"link_id": 377
		},
		"__typename": "links"
	},
	{
		"id": 554,
		"type_id": 3,
		"from_id": 550,
		"to_id": 551,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 555,
		"type_id": 46,
		"from_id": 550,
		"to_id": 551,
		"value": {
			"id": 208,
			"value": "0.0.0",
			"link_id": 555
		},
		"__typename": "links"
	},
	{
		"id": 556,
		"type_id": 45,
		"from_id": 550,
		"to_id": 551,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 589,
		"type_id": 146,
		"from_id": 551,
		"to_id": 70,
		"value": {
			"id": 241,
			"value": "🌲",
			"link_id": 589
		},
		"__typename": "links"
	},
	{
		"id": 622,
		"type_id": 3,
		"from_id": 551,
		"to_id": 621,
		"value": {
			"id": 274,
			"value": "ExecutionProviderSymbol",
			"link_id": 622
		},
		"__typename": "links"
	},
	{
		"id": 623,
		"type_id": 146,
		"from_id": 551,
		"to_id": 30,
		"value": {
			"id": 275,
			"value": "📄",
			"link_id": 623
		},
		"__typename": "links"
	},
	{
		"id": 624,
		"type_id": 3,
		"from_id": 551,
		"to_id": 623,
		"value": {
			"id": 276,
			"value": "SyncTextFileSymbol",
			"link_id": 624
		},
		"__typename": "links"
	},
	{
		"id": 625,
		"type_id": 146,
		"from_id": 551,
		"to_id": 29,
		"value": {
			"id": 277,
			"value": "💾",
			"link_id": 625
		},
		"__typename": "links"
	},
	{
		"id": 626,
		"type_id": 3,
		"from_id": 551,
		"to_id": 625,
		"value": {
			"id": 278,
			"value": "FileSymbol",
			"link_id": 626
		},
		"__typename": "links"
	},
	{
		"id": 627,
		"type_id": 146,
		"from_id": 551,
		"to_id": 23,
		"value": {
			"id": 279,
			"value": "🔥",
			"link_id": 627
		},
		"__typename": "links"
	},
	{
		"id": 628,
		"type_id": 3,
		"from_id": 551,
		"to_id": 627,
		"value": {
			"id": 280,
			"value": "OperationSymbol",
			"link_id": 628
		},
		"__typename": "links"
	},
	{
		"id": 629,
		"type_id": 146,
		"from_id": 551,
		"to_id": 22,
		"value": {
			"id": 281,
			"value": "👤",
			"link_id": 629
		},
		"__typename": "links"
	},
	{
		"id": 630,
		"type_id": 3,
		"from_id": 551,
		"to_id": 629,
		"value": {
			"id": 282,
			"value": "UserSymbol",
			"link_id": 630
		},
		"__typename": "links"
	},
	{
		"id": 631,
		"type_id": 146,
		"from_id": 551,
		"to_id": 17,
		"value": {
			"id": 283,
			"value": "🔥",
			"link_id": 631
		},
		"__typename": "links"
	},
	{
		"id": 632,
		"type_id": 3,
		"from_id": 551,
		"to_id": 631,
		"value": {
			"id": 284,
			"value": "RuleActionSymbol",
			"link_id": 632
		},
		"__typename": "links"
	},
	{
		"id": 633,
		"type_id": 146,
		"from_id": 551,
		"to_id": 19,
		"value": {
			"id": 285,
			"value": "🍏",
			"link_id": 633
		},
		"__typename": "links"
	},
	{
		"id": 634,
		"type_id": 3,
		"from_id": 551,
		"to_id": 633,
		"value": {
			"id": 286,
			"value": "RuleObjectSymbol",
			"link_id": 634
		},
		"__typename": "links"
	},
	{
		"id": 635,
		"type_id": 146,
		"from_id": 551,
		"to_id": 18,
		"value": {
			"id": 287,
			"value": "👤",
			"link_id": 635
		},
		"__typename": "links"
	},
	{
		"id": 636,
		"type_id": 3,
		"from_id": 551,
		"to_id": 635,
		"value": {
			"id": 288,
			"value": "RuleSubjectSymbol",
			"link_id": 636
		},
		"__typename": "links"
	},
	{
		"id": 646,
		"type_id": 3,
		"from_id": 551,
		"to_id": 645,
		"value": {
			"id": 298,
			"value": "RejectedSymbol",
			"link_id": 646
		},
		"__typename": "links"
	},
	{
		"id": 647,
		"type_id": 146,
		"from_id": 551,
		"to_id": 11,
		"value": {
			"id": 299,
			"value": "🟢",
			"link_id": 647
		},
		"__typename": "links"
	},
	{
		"id": 648,
		"type_id": 3,
		"from_id": 551,
		"to_id": 647,
		"value": {
			"id": 300,
			"value": "ResolvedSymbol",
			"link_id": 648
		},
		"__typename": "links"
	},
	{
		"id": 649,
		"type_id": 146,
		"from_id": 551,
		"to_id": 10,
		"value": {
			"id": 301,
			"value": "🔗",
			"link_id": 649
		},
		"__typename": "links"
	},
	{
		"id": 650,
		"type_id": 3,
		"from_id": 551,
		"to_id": 649,
		"value": {
			"id": 302,
			"value": "ThenSymbol",
			"link_id": 650
		},
		"__typename": "links"
	},
	{
		"id": 651,
		"type_id": 146,
		"from_id": 551,
		"to_id": 9,
		"value": {
			"id": 303,
			"value": "⏳",
			"link_id": 651
		},
		"__typename": "links"
	},
	{
		"id": 652,
		"type_id": 3,
		"from_id": 551,
		"to_id": 651,
		"value": {
			"id": 304,
			"value": "PromiseSymbol",
			"link_id": 652
		},
		"__typename": "links"
	},
	{
		"id": 653,
		"type_id": 146,
		"from_id": 551,
		"to_id": 4,
		"value": {
			"id": 305,
			"value": "📎",
			"link_id": 653
		},
		"__typename": "links"
	},
	{
		"id": 654,
		"type_id": 3,
		"from_id": 551,
		"to_id": 653,
		"value": {
			"id": 306,
			"value": "ValueSymbol",
			"link_id": 654
		},
		"__typename": "links"
	},
	{
		"id": 655,
		"type_id": 146,
		"from_id": 551,
		"to_id": 3,
		"value": {
			"id": 307,
			"value": "🗂",
			"link_id": 655
		},
		"__typename": "links"
	},
	{
		"id": 656,
		"type_id": 3,
		"from_id": 551,
		"to_id": 655,
		"value": {
			"id": 308,
			"value": "ContainSymbol",
			"link_id": 656
		},
		"__typename": "links"
	},
	{
		"id": 657,
		"type_id": 146,
		"from_id": 551,
		"to_id": 2,
		"value": {
			"id": 309,
			"value": "📦",
			"link_id": 657
		},
		"__typename": "links"
	},
	{
		"id": 658,
		"type_id": 3,
		"from_id": 551,
		"to_id": 657,
		"value": {
			"id": 310,
			"value": "PackageSymbol",
			"link_id": 658
		},
		"__typename": "links"
	},
	{
		"id": 659,
		"type_id": 146,
		"from_id": 551,
		"to_id": 1,
		"value": {
			"id": 311,
			"value": "⭐️",
			"link_id": 659
		},
		"__typename": "links"
	},
	{
		"id": 660,
		"type_id": 3,
		"from_id": 551,
		"to_id": 659,
		"value": {
			"id": 312,
			"value": "TypeSymbol",
			"link_id": 660
		},
		"__typename": "links"
	},
	{
		"id": 767,
		"type_id": 3,
		"from_id": 754,
		"to_id": 748,
		"value": {
			"id": 337,
			"value": "Publish",
			"link_id": 767
		},
		"__typename": "links"
	},
	{
		"id": 768,
		"type_id": 3,
		"from_id": 754,
		"to_id": 753,
		"value": {
			"id": 338,
			"value": "installCodeHandleInsert",
			"link_id": 768
		},
		"__typename": "links"
	},
	{
		"id": 769,
		"type_id": 3,
		"from_id": 754,
		"to_id": 745,
		"value": {
			"id": 339,
			"value": "installCodeHandler",
			"link_id": 769
		},
		"__typename": "links"
	},
	{
		"id": 770,
		"type_id": 3,
		"from_id": 754,
		"to_id": 744,
		"value": {
			"id": 340,
			"value": "installCode",
			"link_id": 770
		},
		"__typename": "links"
	},
	{
		"id": 771,
		"type_id": 3,
		"from_id": 754,
		"to_id": 750,
		"value": {
			"id": 341,
			"value": "Install",
			"link_id": 771
		},
		"__typename": "links"
	},
	{
		"id": 783,
		"type_id": 3,
		"from_id": 380,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 784,
		"type_id": 97,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 342,
			"value": "@deep-foundation/deepcase",
			"link_id": 784
		},
		"__typename": "links"
	},
	{
		"id": 785,
		"type_id": 750,
		"from_id": 380,
		"to_id": 784,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 786,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 787,
		"type_id": 10,
		"from_id": 785,
		"to_id": 786,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 889,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 352,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { useContainer, Resize, CustomizableIcon } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const { Box, IconButton, useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const { BsCheck2, BsLightbulbFill, BsLightbulbOff } = require('react-icons/bs');\n    const { motion, useAnimation } = require('framer-motion');\n    const variants = {\n        view: {\n            opacity: 1,\n            scale: 1,\n            transition: {\n                duration: 1,\n                delay: 0.3,\n                scale: { delay: 0.5, }\n            }\n        },\n        hide: {\n            opacity: 0,\n            scale: 0,\n            transition: {\n                type: 'spring'\n            }\n        },\n        initial: {\n            originX: 1,\n            opacity: 1,\n            scale: 1,\n        }\n    };\n    const stackVariants = {\n        outside: {\n            x: '0%',\n            opacity: 1,\n            scale: 1,\n            originX: 0,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        nested: {\n            x: '-100%',\n            opacity: 1,\n            scale: 1,\n            originX: 1,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        initial: {\n            x: '0%',\n            opacity: 0,\n            scale: 0,\n        }\n    };\n    return ({ fillSize, style, link }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        const [viewSize, setViewSize] = useState({ width: 300, height: 300 });\n        const terminalBorderWidth = viewSize.width - 1;\n        const terminalBorderHeight = viewSize.height - 1;\n        const control = useAnimation();\n        const controlStack = useAnimation();\n        useEffect(() => {\n            if (value) {\n                control.start('view');\n            }\n            else {\n                control.start('hide');\n            }\n            ;\n            if (fillSize === true) {\n                controlStack.start('nested');\n            }\n            else {\n                controlStack.start('outside');\n            }\n            ;\n        }, [control, controlStack, value, fillSize]);\n        const { colorMode } = useColorMode();\n        const body = React.createElement(\"div\", { style: {\n                width: viewSize.width,\n                height: viewSize.height,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Box, { position: 'relative', display: 'grid', gridTemplateColumns: '1fr max-content', height: 'inherit' },\n                React.createElement(Box, { position: 'relative', overflow: 'hidden', sx: { borderRadius: 5 }, border: '1px dashed #605c60' },\n                    React.createElement(MonacoEditor, { options: {\n                            minimap: {\n                                enabled: false\n                            },\n                            lineNumbers: 'off',\n                            wordWrap: true,\n                        }, height: \"100%\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: value || '', onChange: (value) => setValue(value) })),\n                React.createElement(Box, { as: motion.div, animate: controlStack, variants: stackVariants, initial: 'initial', height: fillSize ? '100%' : viewSize.height, display: 'flex', justifyContent: 'space-between', flexDirection: 'column', ml: fillSize ? 0 : '0.2rem' },\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: 'view', \"aria-label\": 'activate/inactivate button', bg: active && colorMode === 'dark' ? 'gray.700' : 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, isRound: true, variant: 'outline', sx: { borderColor: active ? '#111' : 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mt: fillSize ? '0.2rem' : 0, size: 'xs', onClick: async () => {\n                            if (active) {\n                                await deep.delete({\n                                    _or: [{\n                                            id: { _eq: active?.id },\n                                        }, {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                            to_id: active.id,\n                                        }],\n                                });\n                            }\n                            else {\n                                await deep.insert({\n                                    type_id: deep.idLocal('@deep-foundation/core', 'Active'),\n                                    from_id: contain.from_id,\n                                    to_id: contain.to_id,\n                                    in: { data: {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                        } },\n                                });\n                            }\n                        }, icon: active ? React.createElement(BsLightbulbOff, null) : React.createElement(CustomizableIcon, { Component: BsLightbulbFill, value: { color: 'rgb(0, 128, 255)' } }) }),\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: control, whileInView: 'view', \"aria-label\": 'save button', isRound: true, bg: 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, variant: 'outline', sx: { borderColor: 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mb: fillSize ? '0.2rem' : 0, size: 'xs', icon: React.createElement(CustomizableIcon, { Component: BsCheck2, value: { color: 'rgb(0, 128, 255)' } }), onClick: () => {\n                            try {\n                                const _value = json5.parse(value);\n                                if (!link.value)\n                                    deep.insert({\n                                        link_id: link.id, value: _value,\n                                    }, { table: 'objects' });\n                                deep.update({ link_id: link.id }, { value: _value }, { table: 'objects' });\n                            }\n                            catch (error) { }\n                        } }))));\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 889
		},
		"__typename": "links"
	},
	{
		"id": 890,
		"type_id": 3,
		"from_id": 796,
		"to_id": 889,
		"value": {
			"id": 351,
			"value": "generated",
			"link_id": 890
		},
		"__typename": "links"
	},
	{
		"id": 891,
		"type_id": 143,
		"from_id": 889,
		"to_id": 796,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 892,
		"type_id": 3,
		"from_id": 796,
		"to_id": 891,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 893,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 5,
			"value": {
				"data": {}
			},
			"link_id": 893
		},
		"__typename": "links"
	},
	{
		"id": 894,
		"type_id": 11,
		"from_id": 887,
		"to_id": 893,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 895,
		"type_id": 54,
		"from_id": 894,
		"to_id": 718,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 797,
		"type_id": 713,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 353,
			"value": "({ deep, require }) => {\n      const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { Input, useColorModeValue } = require('@chakra-ui/react');\n    const { useHotkeys } = require('react-hotkeys-hook');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useContainer } = require('@deep-foundation/deepcase');\n    // Only string editor.\n    return ({ fillSize, style, link, onClose }) => {\n      \n      \n      const currentValue = deep.stringify(link?.value?.value) || '';\n      const [value, setValue] = useState(currentValue);\n      const save = async (value) => {\n          if (!link.value) await deep.insert({\n            link_id: link.id, value: value,\n        }, { table: 'strings' });\n        deep.update({ link_id: link.id }, { value: value }, { table: 'strings' });\n        \n      };\n      const ref = useHotkeys('enter', async () => {\n        await save(value);\n        onClose && onClose();\n      }, { enableOnTags: [\"INPUT\"] });\n      \n      const setValuesDebounced = useDebounceCallback(async(value) => {await save(value)}, 500);\n\n      useEffect(() => {\n        setValuesDebounced(value);\n      }, [value])\n\n      const bg = useColorModeValue('#eeeeee', '#434343');\n      const hover = useColorModeValue('white', '#1e1e1e');\n      const borderColor = useColorModeValue('#434343', '#eeeeee');\n      const color = useColorModeValue('#1e1e1e', 'white');\n\n    return <div\n        style={{\n          width: 300,\n          ...style,\n          position: 'relative', \n          // background: 'red'\n        }}\n      >\n        <Input\n          ref={ref}\n          autoFocus\n          type=\"text\"\n          variant='filled'\n          variant='filled'\n          bg={bg}\n          color={color}\n          borderWidth='thin'\n          borderColor={borderColor}\n          _hover={{bg: hover}}\n          _focus={{bg: bg}}\n          sx={{\n            width: '100%',\n          }}\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n      </div>;\n    }\n  }",
			"link_id": 797
		},
		"__typename": "links"
	},
	{
		"id": 896,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 897,
		"type_id": 10,
		"from_id": 797,
		"to_id": 896,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 929,
		"type_id": 143,
		"from_id": 925,
		"to_id": 928,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 930,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 405,
			"value": "@deep-foundation/npm-packager-ui",
			"link_id": 930
		},
		"__typename": "links"
	},
	{
		"id": 931,
		"type_id": 3,
		"from_id": 754,
		"to_id": 930,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 932,
		"type_id": 3,
		"from_id": 375,
		"to_id": 930,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 933,
		"type_id": 66,
		"from_id": 930,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 934,
		"type_id": 3,
		"from_id": 922,
		"to_id": 930,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 935,
		"type_id": 46,
		"from_id": 922,
		"to_id": 930,
		"value": {
			"id": 406,
			"value": "0.0.8",
			"link_id": 935
		},
		"__typename": "links"
	},
	{
		"id": 939,
		"type_id": 3,
		"from_id": 930,
		"to_id": 925,
		"value": {
			"id": 409,
			"value": "packageClientHandlerGenerated",
			"link_id": 939
		},
		"__typename": "links"
	},
	{
		"id": 940,
		"type_id": 3,
		"from_id": 930,
		"to_id": 928,
		"value": {
			"id": 410,
			"value": "packageClientHandler",
			"link_id": 940
		},
		"__typename": "links"
	},
	{
		"id": 941,
		"type_id": 3,
		"from_id": 930,
		"to_id": 929,
		"value": {
			"id": 411,
			"value": "packageClientHandlerGeneratedFrom",
			"link_id": 941
		},
		"__typename": "links"
	},
	{
		"id": 958,
		"type_id": 3,
		"from_id": 380,
		"to_id": 930,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 959,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 9,
			"value": {
				"ids": [
					922,
					923,
					924,
					925,
					926,
					927,
					928,
					929,
					930,
					931,
					932,
					933,
					934,
					935,
					936,
					937,
					938,
					939,
					940,
					941,
					942,
					943,
					944,
					945,
					946,
					947,
					948
				],
				"errors": [],
				"packageId": 930,
				"namespaceId": 922
			},
			"link_id": 959
		},
		"__typename": "links"
	},
	{
		"id": 960,
		"type_id": 11,
		"from_id": 918,
		"to_id": 959,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 961,
		"type_id": 54,
		"from_id": 960,
		"to_id": 753,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 962,
		"type_id": 66,
		"from_id": 930,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 991,
		"type_id": 3,
		"from_id": 980,
		"to_id": 973,
		"value": {
			"id": 424,
			"value": "Finder",
			"link_id": 991
		},
		"__typename": "links"
	},
	{
		"id": 992,
		"type_id": 3,
		"from_id": 980,
		"to_id": 974,
		"value": {
			"id": 425,
			"value": "tsx",
			"link_id": 992
		},
		"__typename": "links"
	},
	{
		"id": 1086,
		"type_id": 55,
		"from_id": 821,
		"to_id": 145,
		"value": {
			"id": 15,
			"value": {
				"x": 264.85588019288997,
				"y": 110.71490992084848
			},
			"link_id": 1086
		},
		"__typename": "links"
	},
	{
		"id": 1087,
		"type_id": 3,
		"from_id": 821,
		"to_id": 1086,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1094,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1095,
		"type_id": 66,
		"from_id": 1094,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1096,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 53,
		"type_id": 4,
		"from_id": 52,
		"to_id": 7,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 54,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 55,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 56,
		"type_id": 4,
		"from_id": 55,
		"to_id": 7,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 58,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 59,
		"type_id": 4,
		"from_id": 58,
		"to_id": 7,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 60,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 61,
		"type_id": 4,
		"from_id": 60,
		"to_id": 7,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 62,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 63,
		"type_id": 4,
		"from_id": 62,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 64,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 65,
		"type_id": 8,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 66,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 67,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 68,
		"type_id": 38,
		"from_id": 67,
		"to_id": 66,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 78,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 79,
		"type_id": 78,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 80,
		"type_id": 4,
		"from_id": 79,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 81,
		"type_id": 79,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 2,
			"value": "deepf/js-docker-isolation-provider:main",
			"link_id": 81
		},
		"__typename": "links"
	},
	{
		"id": 82,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 83,
		"type_id": 82,
		"from_id": 81,
		"to_id": 33,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 84,
		"type_id": 1,
		"from_id": 8,
		"to_id": 97,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 85,
		"type_id": 1,
		"from_id": 2,
		"to_id": 97,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 86,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 3,
			"value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n  const { data: [pq] } = await deep.select({ id: newLink.to_id });\n  const { data: { packager_install: imported }, error } = await deep.apolloClient.query({\n    query: gql`query PACKAGE_INSTALL($address: String!) {\n      packager_install(input: { address: $address }) {\n        ids\n        packageId\n        errors\n      }\n    }`,\n    variables: {\n      address: pq?.value?.value,\n    },\n  });\n  if (error) throw error;\n  if (imported?.errors?.length) throw imported.errors;\n  await deep.insert({\n    type_id: await deep.id('@deep-foundation/core', 'Contain'),\n    from_id: newLink.from_id,\n    to_id: imported.packageId,\n  });\n  return imported;\n}\n    ",
			"link_id": 86
		},
		"__typename": "links"
	},
	{
		"id": 87,
		"type_id": 35,
		"from_id": 83,
		"to_id": 86,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 88,
		"type_id": 49,
		"from_id": 84,
		"to_id": 87,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 89,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 4,
			"value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n  const { data: [pq] } = await deep.select({ id: newLink.to_id });\n  const { data: { packager_publish: exported }, error } = await deep.apolloClient.query({\n    query: gql`query PACKAGE_PUBLISH($address: String!, $id: Int) {\n      packager_publish(input: { address: $address, id: $id }) {\n        address\n        errors\n      }\n    }`,\n    variables: {\n      address: pq?.value?.value,\n      id: newLink.from_id,\n    },\n  });\n  if (error) throw error;\n  if (exported?.errors?.length) throw exported.errors;\n  return exported;\n}\n    ",
			"link_id": 89
		},
		"__typename": "links"
	},
	{
		"id": 134,
		"type_id": 39,
		"from_id": 129,
		"to_id": 15,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 143,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 150,
		"type_id": 123,
		"from_id": 40,
		"to_id": 11,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 151,
		"type_id": 123,
		"from_id": 40,
		"to_id": 12,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 152,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 153,
		"type_id": 38,
		"from_id": 152,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 154,
		"type_id": 118,
		"from_id": 152,
		"to_id": 82,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 155,
		"type_id": 38,
		"from_id": 152,
		"to_id": 48,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 156,
		"type_id": 48,
		"from_id": 8,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 157,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 158,
		"type_id": 4,
		"from_id": 157,
		"to_id": 7,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 159,
		"type_id": 1,
		"from_id": 157,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 160,
		"type_id": 1,
		"from_id": 157,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 161,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 162,
		"type_id": 161,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 163,
		"type_id": 1,
		"from_id": 161,
		"to_id": 108,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 164,
		"type_id": 1,
		"from_id": 82,
		"to_id": 48,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 165,
		"type_id": 164,
		"from_id": 141,
		"to_id": 49,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 166,
		"type_id": 164,
		"from_id": 141,
		"to_id": 50,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 167,
		"type_id": 164,
		"from_id": 141,
		"to_id": 51,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 168,
		"type_id": 164,
		"from_id": 83,
		"to_id": 49,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 169,
		"type_id": 164,
		"from_id": 83,
		"to_id": 50,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 170,
		"type_id": 164,
		"from_id": 83,
		"to_id": 51,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 171,
		"type_id": 164,
		"from_id": 83,
		"to_id": 74,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 172,
		"type_id": 164,
		"from_id": 83,
		"to_id": 101,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 173,
		"type_id": 164,
		"from_id": 83,
		"to_id": 108,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 174,
		"type_id": 164,
		"from_id": 145,
		"to_id": 156,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 175,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 176,
		"type_id": 39,
		"from_id": 175,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 177,
		"type_id": 37,
		"from_id": 175,
		"to_id": 10,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 209,
		"type_id": 3,
		"from_id": 184,
		"to_id": 25,
		"value": {
			"id": 31,
			"value": "AllowInsert",
			"link_id": 209
		},
		"__typename": "links"
	},
	{
		"id": 218,
		"type_id": 3,
		"from_id": 184,
		"to_id": 34,
		"value": {
			"id": 40,
			"value": "TreeInclude",
			"link_id": 218
		},
		"__typename": "links"
	},
	{
		"id": 219,
		"type_id": 3,
		"from_id": 184,
		"to_id": 35,
		"value": {
			"id": 41,
			"value": "Handler",
			"link_id": 219
		},
		"__typename": "links"
	},
	{
		"id": 220,
		"type_id": 3,
		"from_id": 184,
		"to_id": 36,
		"value": {
			"id": 42,
			"value": "Tree",
			"link_id": 220
		},
		"__typename": "links"
	},
	{
		"id": 221,
		"type_id": 3,
		"from_id": 184,
		"to_id": 37,
		"value": {
			"id": 43,
			"value": "TreeIncludeDown",
			"link_id": 221
		},
		"__typename": "links"
	},
	{
		"id": 222,
		"type_id": 3,
		"from_id": 184,
		"to_id": 38,
		"value": {
			"id": 44,
			"value": "TreeIncludeUp",
			"link_id": 222
		},
		"__typename": "links"
	},
	{
		"id": 223,
		"type_id": 3,
		"from_id": 184,
		"to_id": 39,
		"value": {
			"id": 45,
			"value": "TreeIncludeNode",
			"link_id": 223
		},
		"__typename": "links"
	},
	{
		"id": 224,
		"type_id": 3,
		"from_id": 184,
		"to_id": 40,
		"value": {
			"id": 46,
			"value": "containTree",
			"link_id": 224
		},
		"__typename": "links"
	},
	{
		"id": 225,
		"type_id": 3,
		"from_id": 184,
		"to_id": 41,
		"value": {
			"id": 47,
			"value": "containTreeContain",
			"link_id": 225
		},
		"__typename": "links"
	},
	{
		"id": 226,
		"type_id": 3,
		"from_id": 184,
		"to_id": 42,
		"value": {
			"id": 48,
			"value": "containTreeAny",
			"link_id": 226
		},
		"__typename": "links"
	},
	{
		"id": 227,
		"type_id": 3,
		"from_id": 184,
		"to_id": 43,
		"value": {
			"id": 49,
			"value": "PackageNamespace",
			"link_id": 227
		},
		"__typename": "links"
	},
	{
		"id": 228,
		"type_id": 3,
		"from_id": 184,
		"to_id": 44,
		"value": {
			"id": 50,
			"value": "packageNamespaceValue",
			"link_id": 228
		},
		"__typename": "links"
	},
	{
		"id": 229,
		"type_id": 3,
		"from_id": 184,
		"to_id": 45,
		"value": {
			"id": 51,
			"value": "PackageActive",
			"link_id": 229
		},
		"__typename": "links"
	},
	{
		"id": 230,
		"type_id": 3,
		"from_id": 184,
		"to_id": 46,
		"value": {
			"id": 52,
			"value": "PackageVersion",
			"link_id": 230
		},
		"__typename": "links"
	},
	{
		"id": 231,
		"type_id": 3,
		"from_id": 184,
		"to_id": 47,
		"value": {
			"id": 53,
			"value": "packageVersionValue",
			"link_id": 231
		},
		"__typename": "links"
	},
	{
		"id": 232,
		"type_id": 3,
		"from_id": 184,
		"to_id": 48,
		"value": {
			"id": 54,
			"value": "HandleOperation",
			"link_id": 232
		},
		"__typename": "links"
	},
	{
		"id": 233,
		"type_id": 3,
		"from_id": 184,
		"to_id": 49,
		"value": {
			"id": 55,
			"value": "HandleInsert",
			"link_id": 233
		},
		"__typename": "links"
	},
	{
		"id": 234,
		"type_id": 3,
		"from_id": 184,
		"to_id": 50,
		"value": {
			"id": 56,
			"value": "HandleUpdate",
			"link_id": 234
		},
		"__typename": "links"
	},
	{
		"id": 235,
		"type_id": 3,
		"from_id": 184,
		"to_id": 51,
		"value": {
			"id": 57,
			"value": "HandleDelete",
			"link_id": 235
		},
		"__typename": "links"
	},
	{
		"id": 236,
		"type_id": 3,
		"from_id": 184,
		"to_id": 52,
		"value": {
			"id": 58,
			"value": "PromiseResult",
			"link_id": 236
		},
		"__typename": "links"
	},
	{
		"id": 237,
		"type_id": 3,
		"from_id": 184,
		"to_id": 53,
		"value": {
			"id": 59,
			"value": "promiseResultValueRelationTable",
			"link_id": 237
		},
		"__typename": "links"
	},
	{
		"id": 238,
		"type_id": 3,
		"from_id": 184,
		"to_id": 54,
		"value": {
			"id": 60,
			"value": "PromiseReason",
			"link_id": 238
		},
		"__typename": "links"
	},
	{
		"id": 239,
		"type_id": 3,
		"from_id": 184,
		"to_id": 55,
		"value": {
			"id": 61,
			"value": "Focus",
			"link_id": 239
		},
		"__typename": "links"
	},
	{
		"id": 240,
		"type_id": 3,
		"from_id": 184,
		"to_id": 56,
		"value": {
			"id": 62,
			"value": "focusValue",
			"link_id": 240
		},
		"__typename": "links"
	},
	{
		"id": 241,
		"type_id": 3,
		"from_id": 184,
		"to_id": 57,
		"value": {
			"id": 63,
			"value": "AsyncFile",
			"link_id": 241
		},
		"__typename": "links"
	},
	{
		"id": 242,
		"type_id": 3,
		"from_id": 184,
		"to_id": 58,
		"value": {
			"id": 64,
			"value": "Query",
			"link_id": 242
		},
		"__typename": "links"
	},
	{
		"id": 243,
		"type_id": 3,
		"from_id": 184,
		"to_id": 59,
		"value": {
			"id": 65,
			"value": "queryValue",
			"link_id": 243
		},
		"__typename": "links"
	},
	{
		"id": 244,
		"type_id": 3,
		"from_id": 184,
		"to_id": 60,
		"value": {
			"id": 66,
			"value": "Fixed",
			"link_id": 244
		},
		"__typename": "links"
	},
	{
		"id": 245,
		"type_id": 3,
		"from_id": 184,
		"to_id": 61,
		"value": {
			"id": 67,
			"value": "fixedValue",
			"link_id": 245
		},
		"__typename": "links"
	},
	{
		"id": 246,
		"type_id": 3,
		"from_id": 184,
		"to_id": 62,
		"value": {
			"id": 68,
			"value": "Space",
			"link_id": 246
		},
		"__typename": "links"
	},
	{
		"id": 300,
		"type_id": 3,
		"from_id": 184,
		"to_id": 116,
		"value": {
			"id": 122,
			"value": "routeTreeHandleRoute",
			"link_id": 300
		},
		"__typename": "links"
	},
	{
		"id": 303,
		"type_id": 3,
		"from_id": 184,
		"to_id": 119,
		"value": {
			"id": 125,
			"value": "TreeIncludeFromCurrent",
			"link_id": 303
		},
		"__typename": "links"
	},
	{
		"id": 304,
		"type_id": 3,
		"from_id": 184,
		"to_id": 120,
		"value": {
			"id": 126,
			"value": "TreeIncludeToCurrent",
			"link_id": 304
		},
		"__typename": "links"
	},
	{
		"id": 305,
		"type_id": 3,
		"from_id": 184,
		"to_id": 121,
		"value": {
			"id": 127,
			"value": "TreeIncludeCurrentFrom",
			"link_id": 305
		},
		"__typename": "links"
	},
	{
		"id": 306,
		"type_id": 3,
		"from_id": 184,
		"to_id": 122,
		"value": {
			"id": 128,
			"value": "TreeIncludeCurrentTo",
			"link_id": 306
		},
		"__typename": "links"
	},
	{
		"id": 307,
		"type_id": 3,
		"from_id": 184,
		"to_id": 123,
		"value": {
			"id": 129,
			"value": "TreeIncludeFromCurrentTo",
			"link_id": 307
		},
		"__typename": "links"
	},
	{
		"id": 308,
		"type_id": 3,
		"from_id": 184,
		"to_id": 124,
		"value": {
			"id": 130,
			"value": "TreeIncludeToCurrentFrom",
			"link_id": 308
		},
		"__typename": "links"
	},
	{
		"id": 309,
		"type_id": 3,
		"from_id": 184,
		"to_id": 125,
		"value": {
			"id": 131,
			"value": "AllowInsertType",
			"link_id": 309
		},
		"__typename": "links"
	},
	{
		"id": 310,
		"type_id": 3,
		"from_id": 184,
		"to_id": 126,
		"value": {
			"id": 132,
			"value": "AllowUpdateType",
			"link_id": 310
		},
		"__typename": "links"
	},
	{
		"id": 311,
		"type_id": 3,
		"from_id": 184,
		"to_id": 127,
		"value": {
			"id": 133,
			"value": "AllowDeleteType",
			"link_id": 311
		},
		"__typename": "links"
	},
	{
		"id": 312,
		"type_id": 3,
		"from_id": 184,
		"to_id": 128,
		"value": {
			"id": 134,
			"value": "AllowSelectType",
			"link_id": 312
		},
		"__typename": "links"
	},
	{
		"id": 313,
		"type_id": 3,
		"from_id": 184,
		"to_id": 129,
		"value": {
			"id": 135,
			"value": "ruleTree",
			"link_id": 313
		},
		"__typename": "links"
	},
	{
		"id": 314,
		"type_id": 3,
		"from_id": 184,
		"to_id": 130,
		"value": {
			"id": 136,
			"value": "ruleTreeRule",
			"link_id": 314
		},
		"__typename": "links"
	},
	{
		"id": 315,
		"type_id": 3,
		"from_id": 184,
		"to_id": 131,
		"value": {
			"id": 137,
			"value": "ruleTreeRuleAction",
			"link_id": 315
		},
		"__typename": "links"
	},
	{
		"id": 316,
		"type_id": 3,
		"from_id": 184,
		"to_id": 132,
		"value": {
			"id": 138,
			"value": "ruleTreeRuleObject",
			"link_id": 316
		},
		"__typename": "links"
	},
	{
		"id": 317,
		"type_id": 3,
		"from_id": 184,
		"to_id": 133,
		"value": {
			"id": 139,
			"value": "ruleTreeRuleSubject",
			"link_id": 317
		},
		"__typename": "links"
	},
	{
		"id": 318,
		"type_id": 3,
		"from_id": 184,
		"to_id": 134,
		"value": {
			"id": 140,
			"value": "ruleTreeRuleSelector",
			"link_id": 318
		},
		"__typename": "links"
	},
	{
		"id": 319,
		"type_id": 3,
		"from_id": 184,
		"to_id": 135,
		"value": {
			"id": 141,
			"value": "ruleTreeRuleQuery",
			"link_id": 319
		},
		"__typename": "links"
	},
	{
		"id": 320,
		"type_id": 3,
		"from_id": 184,
		"to_id": 136,
		"value": {
			"id": 142,
			"value": "ruleTreeRuleSelectorInclude",
			"link_id": 320
		},
		"__typename": "links"
	},
	{
		"id": 321,
		"type_id": 3,
		"from_id": 184,
		"to_id": 137,
		"value": {
			"id": 143,
			"value": "ruleTreeRuleSelectorExclude",
			"link_id": 321
		},
		"__typename": "links"
	},
	{
		"id": 322,
		"type_id": 3,
		"from_id": 184,
		"to_id": 138,
		"value": {
			"id": 144,
			"value": "ruleTreeRuleSelectorFilter",
			"link_id": 322
		},
		"__typename": "links"
	},
	{
		"id": 378,
		"type_id": 3,
		"from_id": 375,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 379,
		"type_id": 66,
		"from_id": 184,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 380,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 381,
		"type_id": 3,
		"from_id": 373,
		"to_id": 380,
		"value": {
			"id": 196,
			"value": "demo",
			"link_id": 381
		},
		"__typename": "links"
	},
	{
		"id": 382,
		"type_id": 3,
		"from_id": 372,
		"to_id": 380,
		"value": {
			"id": 197,
			"value": "demo",
			"link_id": 382
		},
		"__typename": "links"
	},
	{
		"id": 383,
		"type_id": 66,
		"from_id": 372,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 384,
		"type_id": 66,
		"from_id": 184,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 385,
		"type_id": 66,
		"from_id": 380,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 386,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 387,
		"type_id": 3,
		"from_id": 380,
		"to_id": 386,
		"value": {
			"id": 198,
			"value": "allowAdminRule",
			"link_id": 387
		},
		"__typename": "links"
	},
	{
		"id": 388,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 389,
		"type_id": 16,
		"from_id": 388,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 390,
		"type_id": 70,
		"from_id": 389,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 391,
		"type_id": 18,
		"from_id": 386,
		"to_id": 388,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 392,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 393,
		"type_id": 16,
		"from_id": 392,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 394,
		"type_id": 70,
		"from_id": 393,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 395,
		"type_id": 19,
		"from_id": 386,
		"to_id": 392,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 396,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 397,
		"type_id": 16,
		"from_id": 396,
		"to_id": 71,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 398,
		"type_id": 70,
		"from_id": 397,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 399,
		"type_id": 20,
		"from_id": 386,
		"to_id": 396,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 557,
		"type_id": 146,
		"from_id": 551,
		"to_id": 146,
		"value": {
			"id": 209,
			"value": "🙂",
			"link_id": 557
		},
		"__typename": "links"
	},
	{
		"id": 590,
		"type_id": 3,
		"from_id": 551,
		"to_id": 589,
		"value": {
			"id": 242,
			"value": "SelectorTreeSymbol",
			"link_id": 590
		},
		"__typename": "links"
	},
	{
		"id": 591,
		"type_id": 146,
		"from_id": 551,
		"to_id": 66,
		"value": {
			"id": 243,
			"value": "🤝",
			"link_id": 591
		},
		"__typename": "links"
	},
	{
		"id": 592,
		"type_id": 3,
		"from_id": 551,
		"to_id": 591,
		"value": {
			"id": 244,
			"value": "JoinSymbol",
			"link_id": 592
		},
		"__typename": "links"
	},
	{
		"id": 593,
		"type_id": 146,
		"from_id": 551,
		"to_id": 62,
		"value": {
			"id": 245,
			"value": "🔮",
			"link_id": 593
		},
		"__typename": "links"
	},
	{
		"id": 594,
		"type_id": 3,
		"from_id": 551,
		"to_id": 593,
		"value": {
			"id": 246,
			"value": "SpaceSymbol",
			"link_id": 594
		},
		"__typename": "links"
	},
	{
		"id": 90,
		"type_id": 35,
		"from_id": 83,
		"to_id": 89,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 91,
		"type_id": 49,
		"from_id": 85,
		"to_id": 90,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 92,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 93,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 94,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 95,
		"type_id": 1,
		"from_id": 9,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 96,
		"type_id": 4,
		"from_id": 95,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 97,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 98,
		"type_id": 4,
		"from_id": 97,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 99,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 5,
			"value": "Port",
			"link_id": 99
		},
		"__typename": "links"
	},
	{
		"id": 100,
		"type_id": 4,
		"from_id": 99,
		"to_id": 6,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 101,
		"type_id": 48,
		"from_id": 99,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 102,
		"type_id": 1,
		"from_id": 2,
		"to_id": 97,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 103,
		"type_id": 1,
		"from_id": 2,
		"to_id": 97,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 104,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 105,
		"type_id": 1,
		"from_id": 77,
		"to_id": 99,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 106,
		"type_id": 1,
		"from_id": 104,
		"to_id": 77,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 107,
		"type_id": 4,
		"from_id": 106,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 108,
		"type_id": 48,
		"from_id": 104,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 109,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 110,
		"type_id": 39,
		"from_id": 109,
		"to_id": 99,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 111,
		"type_id": 39,
		"from_id": 109,
		"to_id": 77,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 112,
		"type_id": 39,
		"from_id": 109,
		"to_id": 104,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 113,
		"type_id": 39,
		"from_id": 109,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 114,
		"type_id": 38,
		"from_id": 109,
		"to_id": 105,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 115,
		"type_id": 38,
		"from_id": 109,
		"to_id": 106,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 116,
		"type_id": 37,
		"from_id": 109,
		"to_id": 108,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 117,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 118,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 119,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 120,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 121,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 122,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 123,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 124,
		"type_id": 34,
		"from_id": 36,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 125,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 126,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 127,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 128,
		"type_id": 23,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 129,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 130,
		"type_id": 39,
		"from_id": 129,
		"to_id": 17,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 131,
		"type_id": 37,
		"from_id": 129,
		"to_id": 20,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 132,
		"type_id": 37,
		"from_id": 129,
		"to_id": 19,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 133,
		"type_id": 37,
		"from_id": 129,
		"to_id": 18,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 135,
		"type_id": 39,
		"from_id": 129,
		"to_id": 58,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 136,
		"type_id": 37,
		"from_id": 129,
		"to_id": 16,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 137,
		"type_id": 37,
		"from_id": 129,
		"to_id": 72,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 138,
		"type_id": 37,
		"from_id": 129,
		"to_id": 73,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 139,
		"type_id": 78,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 140,
		"type_id": 32,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 181,
		"type_id": 39,
		"from_id": 175,
		"to_id": 52,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 182,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 183,
		"type_id": 36,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 184,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 6,
			"value": "@deep-foundation/core",
			"link_id": 184
		},
		"__typename": "links"
	},
	{
		"id": 185,
		"type_id": 3,
		"from_id": 184,
		"to_id": 1,
		"value": {
			"id": 7,
			"value": "Type",
			"link_id": 185
		},
		"__typename": "links"
	},
	{
		"id": 186,
		"type_id": 3,
		"from_id": 184,
		"to_id": 2,
		"value": {
			"id": 8,
			"value": "Package",
			"link_id": 186
		},
		"__typename": "links"
	},
	{
		"id": 187,
		"type_id": 3,
		"from_id": 184,
		"to_id": 3,
		"value": {
			"id": 9,
			"value": "Contain",
			"link_id": 187
		},
		"__typename": "links"
	},
	{
		"id": 188,
		"type_id": 3,
		"from_id": 184,
		"to_id": 4,
		"value": {
			"id": 10,
			"value": "Value",
			"link_id": 188
		},
		"__typename": "links"
	},
	{
		"id": 189,
		"type_id": 3,
		"from_id": 184,
		"to_id": 5,
		"value": {
			"id": 11,
			"value": "String",
			"link_id": 189
		},
		"__typename": "links"
	},
	{
		"id": 190,
		"type_id": 3,
		"from_id": 184,
		"to_id": 6,
		"value": {
			"id": 12,
			"value": "Number",
			"link_id": 190
		},
		"__typename": "links"
	},
	{
		"id": 191,
		"type_id": 3,
		"from_id": 184,
		"to_id": 7,
		"value": {
			"id": 13,
			"value": "Object",
			"link_id": 191
		},
		"__typename": "links"
	},
	{
		"id": 192,
		"type_id": 3,
		"from_id": 184,
		"to_id": 8,
		"value": {
			"id": 14,
			"value": "Any",
			"link_id": 192
		},
		"__typename": "links"
	},
	{
		"id": 193,
		"type_id": 3,
		"from_id": 184,
		"to_id": 9,
		"value": {
			"id": 15,
			"value": "Promise",
			"link_id": 193
		},
		"__typename": "links"
	},
	{
		"id": 194,
		"type_id": 3,
		"from_id": 184,
		"to_id": 10,
		"value": {
			"id": 16,
			"value": "Then",
			"link_id": 194
		},
		"__typename": "links"
	},
	{
		"id": 195,
		"type_id": 3,
		"from_id": 184,
		"to_id": 11,
		"value": {
			"id": 17,
			"value": "Resolved",
			"link_id": 195
		},
		"__typename": "links"
	},
	{
		"id": 196,
		"type_id": 3,
		"from_id": 184,
		"to_id": 12,
		"value": {
			"id": 18,
			"value": "Rejected",
			"link_id": 196
		},
		"__typename": "links"
	},
	{
		"id": 197,
		"type_id": 3,
		"from_id": 184,
		"to_id": 13,
		"value": {
			"id": 19,
			"value": "typeValue",
			"link_id": 197
		},
		"__typename": "links"
	},
	{
		"id": 198,
		"type_id": 3,
		"from_id": 184,
		"to_id": 14,
		"value": {
			"id": 20,
			"value": "packageValue",
			"link_id": 198
		},
		"__typename": "links"
	},
	{
		"id": 199,
		"type_id": 3,
		"from_id": 184,
		"to_id": 15,
		"value": {
			"id": 21,
			"value": "Selector",
			"link_id": 199
		},
		"__typename": "links"
	},
	{
		"id": 200,
		"type_id": 3,
		"from_id": 184,
		"to_id": 16,
		"value": {
			"id": 22,
			"value": "SelectorInclude",
			"link_id": 200
		},
		"__typename": "links"
	},
	{
		"id": 201,
		"type_id": 3,
		"from_id": 184,
		"to_id": 17,
		"value": {
			"id": 23,
			"value": "Rule",
			"link_id": 201
		},
		"__typename": "links"
	},
	{
		"id": 202,
		"type_id": 3,
		"from_id": 184,
		"to_id": 18,
		"value": {
			"id": 24,
			"value": "RuleSubject",
			"link_id": 202
		},
		"__typename": "links"
	},
	{
		"id": 203,
		"type_id": 3,
		"from_id": 184,
		"to_id": 19,
		"value": {
			"id": 25,
			"value": "RuleObject",
			"link_id": 203
		},
		"__typename": "links"
	},
	{
		"id": 204,
		"type_id": 3,
		"from_id": 184,
		"to_id": 20,
		"value": {
			"id": 26,
			"value": "RuleAction",
			"link_id": 204
		},
		"__typename": "links"
	},
	{
		"id": 205,
		"type_id": 3,
		"from_id": 184,
		"to_id": 21,
		"value": {
			"id": 27,
			"value": "containValue",
			"link_id": 205
		},
		"__typename": "links"
	},
	{
		"id": 206,
		"type_id": 3,
		"from_id": 184,
		"to_id": 22,
		"value": {
			"id": 28,
			"value": "User",
			"link_id": 206
		},
		"__typename": "links"
	},
	{
		"id": 207,
		"type_id": 3,
		"from_id": 184,
		"to_id": 23,
		"value": {
			"id": 29,
			"value": "Operation",
			"link_id": 207
		},
		"__typename": "links"
	},
	{
		"id": 208,
		"type_id": 3,
		"from_id": 184,
		"to_id": 24,
		"value": {
			"id": 30,
			"value": "operationValue",
			"link_id": 208
		},
		"__typename": "links"
	},
	{
		"id": 211,
		"type_id": 3,
		"from_id": 184,
		"to_id": 27,
		"value": {
			"id": 33,
			"value": "AllowDelete",
			"link_id": 211
		},
		"__typename": "links"
	},
	{
		"id": 353,
		"type_id": 3,
		"from_id": 184,
		"to_id": 169,
		"value": {
			"id": 175,
			"value": "dockerJSSupportsCompatableHandleUpdate",
			"link_id": 353
		},
		"__typename": "links"
	},
	{
		"id": 558,
		"type_id": 3,
		"from_id": 551,
		"to_id": 557,
		"value": {
			"id": 210,
			"value": "SymbolSymbol",
			"link_id": 558
		},
		"__typename": "links"
	},
	{
		"id": 595,
		"type_id": 146,
		"from_id": 551,
		"to_id": 58,
		"value": {
			"id": 247,
			"value": "🔎",
			"link_id": 595
		},
		"__typename": "links"
	},
	{
		"id": 596,
		"type_id": 3,
		"from_id": 551,
		"to_id": 595,
		"value": {
			"id": 248,
			"value": "QuerySymbol",
			"link_id": 596
		},
		"__typename": "links"
	},
	{
		"id": 597,
		"type_id": 146,
		"from_id": 551,
		"to_id": 55,
		"value": {
			"id": 249,
			"value": "📌",
			"link_id": 597
		},
		"__typename": "links"
	},
	{
		"id": 598,
		"type_id": 3,
		"from_id": 551,
		"to_id": 597,
		"value": {
			"id": 250,
			"value": "FocusSymbol",
			"link_id": 598
		},
		"__typename": "links"
	},
	{
		"id": 599,
		"type_id": 146,
		"from_id": 551,
		"to_id": 54,
		"value": {
			"id": 251,
			"value": "🧲",
			"link_id": 599
		},
		"__typename": "links"
	},
	{
		"id": 600,
		"type_id": 3,
		"from_id": 551,
		"to_id": 599,
		"value": {
			"id": 252,
			"value": "PromiseReasonSymbol",
			"link_id": 600
		},
		"__typename": "links"
	},
	{
		"id": 601,
		"type_id": 146,
		"from_id": 551,
		"to_id": 52,
		"value": {
			"id": 253,
			"value": "🔖",
			"link_id": 601
		},
		"__typename": "links"
	},
	{
		"id": 602,
		"type_id": 3,
		"from_id": 551,
		"to_id": 601,
		"value": {
			"id": 254,
			"value": "PromiseResultSymbol",
			"link_id": 602
		},
		"__typename": "links"
	},
	{
		"id": 603,
		"type_id": 146,
		"from_id": 551,
		"to_id": 48,
		"value": {
			"id": 255,
			"value": "🛠",
			"link_id": 603
		},
		"__typename": "links"
	},
	{
		"id": 604,
		"type_id": 3,
		"from_id": 551,
		"to_id": 603,
		"value": {
			"id": 256,
			"value": "HandleOperationSymbol",
			"link_id": 604
		},
		"__typename": "links"
	},
	{
		"id": 605,
		"type_id": 146,
		"from_id": 551,
		"to_id": 46,
		"value": {
			"id": 257,
			"value": "🏷",
			"link_id": 605
		},
		"__typename": "links"
	},
	{
		"id": 606,
		"type_id": 3,
		"from_id": 551,
		"to_id": 605,
		"value": {
			"id": 258,
			"value": "PackageVersionSymbol",
			"link_id": 606
		},
		"__typename": "links"
	},
	{
		"id": 607,
		"type_id": 146,
		"from_id": 551,
		"to_id": 45,
		"value": {
			"id": 259,
			"value": "📯",
			"link_id": 607
		},
		"__typename": "links"
	},
	{
		"id": 608,
		"type_id": 3,
		"from_id": 551,
		"to_id": 607,
		"value": {
			"id": 260,
			"value": "PackageActiveSymbol",
			"link_id": 608
		},
		"__typename": "links"
	},
	{
		"id": 609,
		"type_id": 146,
		"from_id": 551,
		"to_id": 43,
		"value": {
			"id": 261,
			"value": "🎁",
			"link_id": 609
		},
		"__typename": "links"
	},
	{
		"id": 718,
		"type_id": 50,
		"from_id": 713,
		"to_id": 717,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 719,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 317,
			"value": "@deep-foundation/tsx",
			"link_id": 719
		},
		"__typename": "links"
	},
	{
		"id": 720,
		"type_id": 3,
		"from_id": 375,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 721,
		"type_id": 66,
		"from_id": 719,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 722,
		"type_id": 3,
		"from_id": 712,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 723,
		"type_id": 46,
		"from_id": 712,
		"to_id": 719,
		"value": {
			"id": 318,
			"value": "0.0.4",
			"link_id": 723
		},
		"__typename": "links"
	},
	{
		"id": 724,
		"type_id": 45,
		"from_id": 712,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 725,
		"type_id": 3,
		"from_id": 719,
		"to_id": 718,
		"value": {
			"id": 319,
			"value": "handleUpdate",
			"link_id": 725
		},
		"__typename": "links"
	},
	{
		"id": 726,
		"type_id": 3,
		"from_id": 719,
		"to_id": 717,
		"value": {
			"id": 320,
			"value": "handler",
			"link_id": 726
		},
		"__typename": "links"
	},
	{
		"id": 727,
		"type_id": 3,
		"from_id": 719,
		"to_id": 714,
		"value": {
			"id": 321,
			"value": "tsxSymbol",
			"link_id": 727
		},
		"__typename": "links"
	},
	{
		"id": 728,
		"type_id": 3,
		"from_id": 719,
		"to_id": 715,
		"value": {
			"id": 322,
			"value": "tsxValue",
			"link_id": 728
		},
		"__typename": "links"
	},
	{
		"id": 729,
		"type_id": 3,
		"from_id": 719,
		"to_id": 713,
		"value": {
			"id": 323,
			"value": "TSX",
			"link_id": 729
		},
		"__typename": "links"
	},
	{
		"id": 730,
		"type_id": 3,
		"from_id": 719,
		"to_id": 716,
		"value": {
			"id": 324,
			"value": "compiler",
			"link_id": 730
		},
		"__typename": "links"
	},
	{
		"id": 739,
		"type_id": 66,
		"from_id": 719,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 740,
		"type_id": 3,
		"from_id": 380,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 898,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 355,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { Input, useColorModeValue } = require('@chakra-ui/react');\n    const { useHotkeys } = require('react-hotkeys-hook');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useContainer } = require('@deep-foundation/deepcase');\n    return ({ fillSize, style, link, onClose }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const save = async (value) => {\n            if (!link.value)\n                await deep.insert({\n                    link_id: link.id, value: value,\n                }, { table: 'strings' });\n            deep.update({ link_id: link.id }, { value: value }, { table: 'strings' });\n        };\n        const ref = useHotkeys('enter', async () => {\n            await save(value);\n            onClose && onClose();\n        }, { enableOnTags: [\"INPUT\"] });\n        const setValuesDebounced = useDebounceCallback(async (value) => { await save(value); }, 500);\n        useEffect(() => {\n            setValuesDebounced(value);\n        }, [value]);\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        return React.createElement(\"div\", { style: {\n                width: 300,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Input, { ref: ref, autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                    width: '100%',\n                }, onChange: (e) => setValue(e.target.value), value: value }));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 898
		},
		"__typename": "links"
	},
	{
		"id": 899,
		"type_id": 3,
		"from_id": 797,
		"to_id": 898,
		"value": {
			"id": 354,
			"value": "generated",
			"link_id": 899
		},
		"__typename": "links"
	},
	{
		"id": 900,
		"type_id": 143,
		"from_id": 898,
		"to_id": 797,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 901,
		"type_id": 3,
		"from_id": 797,
		"to_id": 900,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 902,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 6,
			"value": {
				"data": {}
			},
			"link_id": 902
		},
		"__typename": "links"
	},
	{
		"id": 903,
		"type_id": 11,
		"from_id": 896,
		"to_id": 902,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 904,
		"type_id": 54,
		"from_id": 903,
		"to_id": 718,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 799,
		"type_id": 1,
		"from_id": 8,
		"to_id": 58,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 800,
		"type_id": 146,
		"from_id": 799,
		"to_id": 799,
		"value": {
			"id": 356,
			"value": "🧳",
			"link_id": 800
		},
		"__typename": "links"
	},
	{
		"id": 801,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 357,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = require('react');\n    const axiosHooks = require(\"axios-hooks\");\n    const axios = require(\"axios\");\n    const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n    return ({ fillSize, style, link }) => {\n        const ssl = deep.apolloClient.ssl;\n        const path = deep.apolloClient.path.slice(0, -4);\n        const url = `${ssl ? \"https://\" : \"http://\"}${path}/file?linkId=${link.id}`;\n        const [{ data, loading, error }, refetch] = useAxios({\n            method: 'get',\n            url,\n            headers: {\n                'Authorization': `Bearer ${deep.token}`\n            },\n            responseType: \"blob\",\n        });\n        const [src, setSrc] = useState(\"test\");\n        if (!loading && data) {\n            const reader = new window.FileReader();\n            reader.onload = () => {\n                setSrc(reader.result);\n            };\n            reader.readAsDataURL(data);\n        }\n        const renderMedia = () => {\n            if (src.startsWith('data:image')) {\n                return React.createElement(\"img\", { src: src, alt: \"An image from Deep file storage.\", style: style });\n            }\n            else if (src.startsWith('data:audio')) {\n                return React.createElement(\"audio\", { src: src, controls: true, style: style }, \"Your browser does not support the audio element.\");\n            }\n            else {\n                return React.createElement(\"div\", null, \"Unsupported file type.\");\n            }\n        };\n        return renderMedia();\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 801
		},
		"__typename": "links"
	},
	{
		"id": 802,
		"type_id": 143,
		"from_id": 801,
		"to_id": 794,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 803,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 358,
			"value": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { useContainer, Resize, CustomizableIcon } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const { Box, IconButton, useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const { BsCheck2, BsLightbulbFill, BsLightbulbOff } = require('react-icons/bs');\n    const { motion, useAnimation } = require('framer-motion');\n    const variants = {\n        view: {\n            opacity: 1,\n            scale: 1,\n            transition: {\n                duration: 1,\n                delay: 0.3,\n                scale: { delay: 0.5, }\n            }\n        },\n        hide: {\n            opacity: 0,\n            scale: 0,\n            transition: {\n                type: 'spring'\n            }\n        },\n        initial: {\n            originX: 1,\n            opacity: 1,\n            scale: 1,\n        }\n    };\n    const stackVariants = {\n        outside: {\n            x: '0%',\n            opacity: 1,\n            scale: 1,\n            originX: 0,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        nested: {\n            x: '-100%',\n            opacity: 1,\n            scale: 1,\n            originX: 1,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        initial: {\n            x: '0%',\n            opacity: 0,\n            scale: 0,\n        }\n    };\n    return ({ fillSize, style, link }) => {\n        var _a;\n        const currentValue = deep.stringify((_a = link === null || link === void 0 ? void 0 : link.value) === null || _a === void 0 ? void 0 : _a.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data === null || data === void 0 ? void 0 : data.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data === null || data === void 0 ? void 0 : data.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        const [viewSize, setViewSize] = useState({ width: 300, height: 300 });\n        const terminalBorderWidth = viewSize.width - 1;\n        const terminalBorderHeight = viewSize.height - 1;\n        const control = useAnimation();\n        const controlStack = useAnimation();\n        useEffect(() => {\n            if (value) {\n                control.start('view');\n            }\n            else {\n                control.start('hide');\n            }\n            ;\n            if (fillSize === true) {\n                controlStack.start('nested');\n            }\n            else {\n                controlStack.start('outside');\n            }\n            ;\n        }, [control, controlStack, value, fillSize]);\n        const { colorMode } = useColorMode();\n        const body = React.createElement(\"div\", { style: Object.assign(Object.assign({ width: viewSize.width, height: viewSize.height }, style), { position: 'relative' }) },\n            React.createElement(Box, { position: 'relative', display: 'grid', gridTemplateColumns: '1fr max-content', height: 'inherit' },\n                React.createElement(Box, { position: 'relative', overflow: 'hidden', sx: { borderRadius: 5 }, border: '1px dashed #605c60' },\n                    React.createElement(MonacoEditor, { options: {\n                            minimap: {\n                                enabled: false\n                            },\n                            lineNumbers: 'off',\n                            wordWrap: true,\n                        }, height: \"100%\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: value || '', onChange: (value) => setValue(value) })),\n                React.createElement(Box, { as: motion.div, animate: controlStack, variants: stackVariants, initial: 'initial', height: fillSize ? '100%' : viewSize.height, display: 'flex', justifyContent: 'space-between', flexDirection: 'column', ml: fillSize ? 0 : '0.2rem' },\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: 'view', \"aria-label\": 'activate/inactivate button', bg: active && colorMode === 'dark' ? 'gray.700' : 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, isRound: true, variant: 'outline', sx: { borderColor: active ? '#111' : 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mt: fillSize ? '0.2rem' : 0, size: 'xs', onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n                            if (active) {\n                                yield deep.delete({\n                                    _or: [{\n                                            id: { _eq: active === null || active === void 0 ? void 0 : active.id },\n                                        }, {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                            to_id: active.id,\n                                        }],\n                                });\n                            }\n                            else {\n                                yield deep.insert({\n                                    type_id: deep.idLocal('@deep-foundation/core', 'Active'),\n                                    from_id: contain.from_id,\n                                    to_id: contain.to_id,\n                                    in: { data: {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                        } },\n                                });\n                            }\n                        }), icon: active ? React.createElement(BsLightbulbOff, null) : React.createElement(CustomizableIcon, { Component: BsLightbulbFill, value: { color: 'rgb(0, 128, 255)' } }) }),\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: control, whileInView: 'view', \"aria-label\": 'save button', isRound: true, bg: 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, variant: 'outline', sx: { borderColor: 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mb: fillSize ? '0.2rem' : 0, size: 'xs', icon: React.createElement(CustomizableIcon, { Component: BsCheck2, value: { color: 'rgb(0, 128, 255)' } }), onClick: () => {\n                            try {\n                                const _value = json5.parse(value);\n                                if (!link.value)\n                                    deep.insert({\n                                        link_id: link.id, value: _value,\n                                    }, { table: 'objects' });\n                                deep.update({ link_id: link.id }, { value: _value }, { table: 'objects' });\n                            }\n                            catch (error) { }\n                        } }))));\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 803
		},
		"__typename": "links"
	},
	{
		"id": 804,
		"type_id": 143,
		"from_id": 803,
		"to_id": 796,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 805,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 359,
			"value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = React;\n    const json5 = require('json5');\n    const { useContainer, CytoEditorPreview } = require('@deep-foundation/deepcase');\n    const { Box, SimpleGrid } = require('@chakra-ui/react');\n    return ({ fillSize, style, link }) => {\n        var _a;\n        const currentValue = deep.stringify((_a = link === null || link === void 0 ? void 0 : link.value) === null || _a === void 0 ? void 0 : _a.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data === null || data === void 0 ? void 0 : data.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data === null || data === void 0 ? void 0 : data.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        return React.createElement(\"div\", { style: Object.assign(Object.assign({ width: 600, height: 600 }, style), { position: 'relative' }) },\n            React.createElement(CytoEditorPreview, { link: link, compact: true }));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 805
		},
		"__typename": "links"
	},
	{
		"id": 806,
		"type_id": 143,
		"from_id": 805,
		"to_id": 795,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 807,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 360,
			"value": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { Input, useColorModeValue } = require('@chakra-ui/react');\n    const { useHotkeys } = require('react-hotkeys-hook');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useContainer } = require('@deep-foundation/deepcase');\n    return ({ fillSize, style, link, onClose }) => {\n        var _a;\n        const currentValue = deep.stringify((_a = link === null || link === void 0 ? void 0 : link.value) === null || _a === void 0 ? void 0 : _a.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const save = (value) => __awaiter(void 0, void 0, void 0, function* () {\n            if (!link.value)\n                yield deep.insert({\n                    link_id: link.id, value: value,\n                }, { table: 'strings' });\n            deep.update({ link_id: link.id }, { value: value }, { table: 'strings' });\n        });\n        const ref = useHotkeys('enter', () => __awaiter(void 0, void 0, void 0, function* () {\n            yield save(value);\n            onClose && onClose();\n        }), { enableOnTags: [\"INPUT\"] });\n        const setValuesDebounced = useDebounceCallback((value) => __awaiter(void 0, void 0, void 0, function* () { yield save(value); }), 500);\n        useEffect(() => {\n            setValuesDebounced(value);\n        }, [value]);\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        return React.createElement(\"div\", { style: Object.assign(Object.assign({ width: 300 }, style), { position: 'relative' }) },\n            React.createElement(Input, { ref: ref, autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                    width: '100%',\n                }, onChange: (e) => setValue(e.target.value), value: value }));\n    };\n};\n//# sourceMappingURL=module.js.map",
			"link_id": 807
		},
		"__typename": "links"
	},
	{
		"id": 808,
		"type_id": 143,
		"from_id": 807,
		"to_id": 797,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 809,
		"type_id": 35,
		"from_id": 145,
		"to_id": 801,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 810,
		"type_id": 1,
		"from_id": 798,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 811,
		"type_id": 35,
		"from_id": 145,
		"to_id": 803,
		"value": {
			"id": 361,
			"value": "",
			"link_id": 811
		},
		"__typename": "links"
	},
	{
		"id": 812,
		"type_id": 35,
		"from_id": 145,
		"to_id": 805,
		"value": {
			"id": 362,
			"value": "",
			"link_id": 812
		},
		"__typename": "links"
	},
	{
		"id": 813,
		"type_id": 35,
		"from_id": 145,
		"to_id": 807,
		"value": {
			"id": 363,
			"value": "",
			"link_id": 813
		},
		"__typename": "links"
	},
	{
		"id": 814,
		"type_id": 156,
		"from_id": 57,
		"to_id": 809,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 815,
		"type_id": 156,
		"from_id": 713,
		"to_id": 812,
		"value": {
			"id": 364,
			"value": "",
			"link_id": 815
		},
		"__typename": "links"
	},
	{
		"id": 936,
		"type_id": 45,
		"from_id": 922,
		"to_id": 930,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 144,
		"type_id": 78,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 145,
		"type_id": 82,
		"from_id": 144,
		"to_id": 33,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 146,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 147,
		"type_id": 4,
		"from_id": 146,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 148,
		"type_id": 120,
		"from_id": 40,
		"to_id": 146,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 149,
		"type_id": 123,
		"from_id": 40,
		"to_id": 10,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 210,
		"type_id": 3,
		"from_id": 184,
		"to_id": 26,
		"value": {
			"id": 32,
			"value": "AllowUpdate",
			"link_id": 210
		},
		"__typename": "links"
	},
	{
		"id": 213,
		"type_id": 3,
		"from_id": 184,
		"to_id": 29,
		"value": {
			"id": 35,
			"value": "File",
			"link_id": 213
		},
		"__typename": "links"
	},
	{
		"id": 214,
		"type_id": 3,
		"from_id": 184,
		"to_id": 30,
		"value": {
			"id": 36,
			"value": "SyncTextFile",
			"link_id": 214
		},
		"__typename": "links"
	},
	{
		"id": 215,
		"type_id": 3,
		"from_id": 184,
		"to_id": 31,
		"value": {
			"id": 37,
			"value": "syncTextFileValue",
			"link_id": 215
		},
		"__typename": "links"
	},
	{
		"id": 216,
		"type_id": 3,
		"from_id": 184,
		"to_id": 32,
		"value": {
			"id": 38,
			"value": "ExecutionProvider",
			"link_id": 216
		},
		"__typename": "links"
	},
	{
		"id": 330,
		"type_id": 3,
		"from_id": 184,
		"to_id": 146,
		"value": {
			"id": 152,
			"value": "Symbol",
			"link_id": 330
		},
		"__typename": "links"
	},
	{
		"id": 559,
		"type_id": 146,
		"from_id": 551,
		"to_id": 143,
		"value": {
			"id": 211,
			"value": "🏗",
			"link_id": 559
		},
		"__typename": "links"
	},
	{
		"id": 610,
		"type_id": 3,
		"from_id": 551,
		"to_id": 609,
		"value": {
			"id": 262,
			"value": "PackageNamespaceSymbol",
			"link_id": 610
		},
		"__typename": "links"
	},
	{
		"id": 611,
		"type_id": 146,
		"from_id": 551,
		"to_id": 34,
		"value": {
			"id": 263,
			"value": "🌿",
			"link_id": 611
		},
		"__typename": "links"
	},
	{
		"id": 798,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 937,
		"type_id": 3,
		"from_id": 930,
		"to_id": 927,
		"value": {
			"id": 407,
			"value": "packageHandleClient",
			"link_id": 937
		},
		"__typename": "links"
	},
	{
		"id": 938,
		"type_id": 3,
		"from_id": 930,
		"to_id": 926,
		"value": {
			"id": 408,
			"value": "packageHandler",
			"link_id": 938
		},
		"__typename": "links"
	},
	{
		"id": 1021,
		"type_id": 752,
		"from_id": 1018,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1036,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1037,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1038,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1022,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 428,
			"value": "@deep-foundation/deepcase-opened",
			"link_id": 1022
		},
		"__typename": "links"
	},
	{
		"id": 1023,
		"type_id": 66,
		"from_id": 1022,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1024,
		"type_id": 3,
		"from_id": 754,
		"to_id": 1022,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1025,
		"type_id": 1,
		"from_id": 8,
		"to_id": 8,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1026,
		"type_id": 1,
		"from_id": 1025,
		"to_id": 35,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1027,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 429,
			"value": "@deep-foundation/deepcase-opened",
			"link_id": 1027
		},
		"__typename": "links"
	},
	{
		"id": 1028,
		"type_id": 3,
		"from_id": 754,
		"to_id": 1027,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1029,
		"type_id": 3,
		"from_id": 375,
		"to_id": 1027,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1030,
		"type_id": 66,
		"from_id": 1027,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 772,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 773,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 774,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 775,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 776,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 777,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 778,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 779,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 780,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 781,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 741,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 325,
			"value": "@deep-foundation/npm-packager",
			"link_id": 741
		},
		"__typename": "links"
	},
	{
		"id": 742,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 326,
			"value": "async ({ deep, require, gql, data: { triggeredByLinkId, newLink } }) => {\n  const fs = await deep.import('fs');\n  const encoding = 'utf8';\n  const deepPackageKeyWord = 'deep-package';\n  \n  const makeTempDirectory = async () => {\n    const os = await deep.import('os');\n    const { v4: uuid } = await deep.import('uuid');\n    \n    const baseTempDirectory = os.tmpdir();\n    const randomId = uuid();\n    const tempDirectory = [baseTempDirectory,randomId].join('/');\n    fs.mkdirSync(tempDirectory);\n    console.log(tempDirectory);\n    return tempDirectory;\n  };\n  const npmInstall = async (packageName, installationPath) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm --prefix \"${installationPath}\" i ${packageName}`;\n    try {\n      const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: installationPath\n      }).toString();\n      console.log(`${command}\\n`, output);\n      return {\n        resolved: {\n          status: 0,\n          stdout: output\n        }\n      };\n    } catch(error) {\n      return {\n        rejected: error\n      };\n    }\n  };\n  const npmLogin = async (token, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm set \"//registry.npmjs.org/:_authToken\" ${token}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const npmPublish = async (tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm publish --access public`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const makeDeepPackagePath = (tempDirectory, packageName) => [tempDirectory, 'node_modules', packageName].join('/');\n  const makeDeepJsonPath = (packagePath) => [packagePath, 'deep.json'].join('/');\n  const makePackageJsonPath = (packagePath) => [packagePath, 'package.json'].join('/');\n  const deepExport = async (packageId) => {\n    const packager = new (await deep.import('@deep-foundation/deeplinks/imports/packager.js')).Packager(deep);\n    const exported = await packager.export({ packageLinkId: packageId });\n    console.log(exported);\n    if (exported?.errors?.length) throw exported;\n    return exported;\n  };\n  const loadNpmToken = async () => {\n    const containTreeId = await deep.id('@deep-foundation/core', 'containTree');\n    const tokenTypeId = await deep.id('@deep-foundation/npm-packager', 'Token');\n    const { data: [{ value: { value: npmToken = undefined } = {}} = {}] = []} = await deep.select({\n      up: {\n        tree_id: { _eq: containTreeId },\n        parent: { id: { _eq: triggeredByLinkId } },\n        link: { type_id: { _eq: tokenTypeId } }\n      }\n    });\n    return npmToken;\n  };\n  const loadFromJson = (path) => {\n    if (!fs.existsSync(path)) {\n      throw new Error(`${path} is not found.`);\n    }\n    const json = fs.readFileSync(path, { encoding });\n    if (!json) {\n      throw new Error(`${path} is empty or was not read properly.`);\n    }\n    console.log(`Parsing ${path} ...`);\n    const data = JSON.parse(json);\n    console.log(`Parsing ${path} finished.`);\n    return data;\n  }\n  const saveAsJson = (path, data) => {\n    fs.writeFileSync(path, JSON.stringify(data, null, 2), { encoding });\n  }\n  const updateVersion = async (deepJsonPath, packageJsonPath, localVersion) => {\n    const semver = await deep.import('semver');\n\n    const deepPackage = loadFromJson(deepJsonPath);\n    const npmPackage = loadFromJson(packageJsonPath);\n\n    const oldNpmVersion = npmPackage?.version || '0.0.0';\n\n    const nextVersion = semver.gt(localVersion, oldNpmVersion) ? localVersion : semver.inc(oldNpmVersion, 'patch');\n\n    npmPackage.version = nextVersion;\n    if (!deepPackage.package) {\n      deepPackage.package = {};\n    }\n    deepPackage.package.version = nextVersion;  \n\n    saveAsJson(deepJsonPath, deepPackage);\n    saveAsJson(packageJsonPath, npmPackage);\n\n    return nextVersion;\n  };\n  const addKeyword = (packageJsonPath, keyword) => {\n    const npmPackage = loadFromJson(packageJsonPath);\n    if (npmPackage?.keywords?.length > 0) {\n      if (!npmPackage.keywords.includes(keyword)) {\n        npmPackage.keywords.push(keyword); \n      }\n    } else {\n      npmPackage.keywords = [ keyword ];\n    }\n    saveAsJson(packageJsonPath, npmPackage);\n  };\n  const installDependencies = async (packagePath, dependencies) => {\n    for (const dependency of dependencies) {\n      const dependencyPackageName = `${dependency.name}@~${dependency.version}`;\n      const installationResult = await npmInstall(dependencyPackageName, packagePath);\n      if (installationResult?.rejected) {\n        console.log(`Unable to install ${dependencyPackageName} dependency.`)\n        throw installationResult.rejected;\n      } else if (!installationResult?.resolved) {\n        throw new Error(`Unsupported NPM dependency installation result for ${dependencyPackageName} dependency package.`);\n      }\n    }\n  }\n\n  if (!triggeredByLinkId) {\n    throw new Error('Publish link should be inserted using JWT token (role link), it cannot be inserted using hasura secret (role admin).');\n  }\n\n  const { data: [packageQuery] } = await deep.select({ id: newLink.to_id });\n  const packageName = packageQuery?.value?.value;\n  if (!packageName) {\n    throw new Error('Package query value is empty.');\n  }\n  const packageVersionTypeId = await deep.id('@deep-foundation/core', 'PackageVersion');\n  const { data: [{ versions: [{ version: { value: localVersion = undefined } = {}} = {}] = []} = {}] = []} = await deep.select({ id: newLink.from_id }, { returning: `id versions: in(where: { type_id: { _eq: ${packageVersionTypeId} } }) { id type_id version: value }` });\n  if (!localVersion) {\n    throw new Error('Package must have a version.');\n  }\n\n  const packageId = newLink.from_id;\n  const { data: [{ value: actualPackageName }]} = await deep.select(\n    { link_id: { _eq: packageId } },\n    {\n      table: 'strings',\n      returning: 'value'\n    }\n  );\n  if (packageName !== actualPackageName) {\n    throw new Error('Package query value should be equal to actual package name.');\n  }\n  const tempDirectory = await makeTempDirectory();\n  try {\n    const npmToken = await loadNpmToken();\n    if (!npmToken) {\n      throw new Error('NPM token is required to publish package. NPM token should be contained by user that does insert publish link.');\n    }\n    await npmLogin(npmToken, tempDirectory);\n    const installationResult = await npmInstall(packageName, tempDirectory);\n    let deepPackagePath; \n    let packageJsonPath;\n    if (installationResult?.resolved) {\n      deepPackagePath = makeDeepPackagePath(tempDirectory, packageName);\n      packageJsonPath = makePackageJsonPath(deepPackagePath);\n    } else if(installationResult?.rejected) {\n      deepPackagePath = tempDirectory;\n      packageJsonPath = makePackageJsonPath(deepPackagePath);\n      const packageJson = {\n        name: packageName\n      };\n      saveAsJson(packageJsonPath, packageJson);\n    } else {\n      throw new Error(`Unsupported NPM installation result for ${packageName} package.`);\n    }\n    console.log('deepPackagePath', deepPackagePath);\n    console.log('packageJsonPath', packageJsonPath);\n    \n    const pkg = await deepExport(packageId);\n    console.log(pkg);\n    await installDependencies(deepPackagePath, pkg.dependencies);\n    const deepJsonPath = makeDeepJsonPath(deepPackagePath);\n    saveAsJson(deepJsonPath, pkg);\n    const nextVersion = await updateVersion(deepJsonPath, packageJsonPath, localVersion);\n    addKeyword(packageJsonPath, deepPackageKeyWord);\n    await npmPublish(deepPackagePath);\n    if (nextVersion !== localVersion) {\n      await deep.update({\n        link: {\n          type_id: { _eq: await deep.id('@deep-foundation/core', 'PackageVersion') },\n          to_id: { _eq: packageId },\n        },\n      }, { value: nextVersion }, { table: 'strings' });\n    }\n  } finally {\n    fs.rmSync(tempDirectory, { recursive: true, force: true });\n  }\n}",
			"link_id": 742
		},
		"__typename": "links"
	},
	{
		"id": 743,
		"type_id": 35,
		"from_id": 83,
		"to_id": 742,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 744,
		"type_id": 30,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 327,
			"value": "async ({ deep, gql, data: { triggeredByLinkId, newLink } }) => {\n  const deepFileName = 'deep.json';\n  const fs = await deep.import('fs');\n\n  const makeTempDirectory = async () => {\n    const os = await deep.import('os');\n    const { v4: uuid } = await deep.import('uuid');\n    \n    const baseTempDirectory = os.tmpdir();\n    const randomId = uuid();\n    const tempDirectory = [baseTempDirectory,randomId].join('/');\n    fs.mkdirSync(tempDirectory);\n    console.log(tempDirectory);\n    return tempDirectory;\n  };\n  const npmInstall = async (packageName, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    const command = `npm --prefix \"${tempDirectory}\" i ${packageName}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const npmLogin = async (token, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm set \"//registry.npmjs.org/:_authToken\" ${token}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const makePackagePath = (tempDirectory, packageName) => [tempDirectory, 'node_modules', packageName].join('/');\n  const makeDeepJsonPath = (packagePath) => [packagePath, deepFileName].join('/');\n  const makePackageJsonPath = (packagePath) => [packagePath, 'package.json'].join('/');\n  const loadNpmToken = async () => {\n    const containTreeId = await deep.id('@deep-foundation/core', 'containTree');\n    const tokenTypeId = await deep.id('@deep-foundation/npm-packager', 'Token');\n    const { data: [{ value: { value: npmToken = undefined } = {}} = {}] = []} = await deep.select({\n      up: {\n        tree_id: { _eq: containTreeId },\n        parent: { id: { _eq: triggeredByLinkId } },\n        link: { type_id: { _eq: tokenTypeId } }\n      }\n    });\n    return npmToken;\n  };\n  const deepImport = async (deepJson, packageJson) => {\n    if (deepJson.package.name !== packageJson.name) {\n      throw new Error(`Package name is not synchronized between ${deepFileName} and package.json files.\n  ${deepFileName} package name: ${deepJson.package.name}.\n  package.json package name: ${packageJson.name}.`);\n    }\n    if (deepJson.package.version !== packageJson.version) {\n      throw new Error(`Package version is not synchronized between ${deepFileName} and package.json files.\n  ${deepFileName} package version: ${deepJson.package.version}.\n  package.json package version: ${packageJson.version}.`);\n    }\n    const packager = new (await deep.import('@deep-foundation/deeplinks/imports/packager.js')).Packager(deep);\n    const imported = await packager.import(deepJson);\n    console.log(imported);\n    if (imported?.errors?.length) throw imported;\n    return imported;\n  };\n  const getDeepPackagesList = async (rootPath) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    const deepFileName = 'deep.json';\n    const deepFileNameLength = deepFileName.length;\n\n    const command = `find . -name ${deepFileName}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: rootPath\n    });\n    console.log('', `${command}\\n`, output);\n\n    const packages = output\n      .split(/\\r?\\n/)\n      .filter(line => line.trim())\n      .map(line => line.slice(2).slice(0, -deepFileNameLength - 1))\n      .map(line => line.split('/node_modules/'));\n    return packages;\n  };\n  const getDeepPackagesDependencies = async (rootPath, packages, packageName) => {\n    const dictionary = {};\n    for (const pkg of packages) {\n      const packagePath = [rootPath, pkg.join('/node_modules/')].join('/');\n      console.log('packagePath', packagePath);\n      const packageJsonPath = makePackageJsonPath(packagePath);\n      console.log('packageJsonPath', packageJsonPath);\n      if (!fs.existsSync(packageJsonPath)) {\n        throw new Error(`package.json for dependency ${pkg} is not found at ${packageJsonPath}. Looks like ${packageName} does not contain ${pkg} dependency in package.json.`);\n      }\n      const packageJson = await deep.import(packageJsonPath);\n      console.log('packageJson', packageJson);\n      const deepJsonPath = makeDeepJsonPath(packagePath);\n      console.log('deepJsonPath', deepJsonPath);\n      if (!fs.existsSync(deepJsonPath)) {\n        throw new Error(`deep.json for dependency ${pkg} is not found at ${deepJsonPath}. Looks like ${pkg} installed, but it does not contain deep.json. Make sure ${pkg} is a deep package.`);\n      }\n      const deepJson = await deep.import(deepJsonPath);\n      console.log('deepJson', deepJson);\n      const dependencies = packageJson.dependencies ?? {};\n      console.log('dependencies', dependencies);\n      const dependencyPackageName = pkg.at(-1);\n      console.log('dependencyPackageName', dependencyPackageName);\n      if (Array.isArray(dictionary[dependencyPackageName])) {\n        throw new Error('Multiple versions of the same package are not supported yet.');\n      }\n      dictionary[dependencyPackageName] = { deepJson, packageJson, dependencies };\n    }\n    for (const pkg in dictionary) {\n      const sourceDependencies = dictionary[pkg].dependencies;\n      const targetDependencies = [];\n      for (const dependency in sourceDependencies)\n      {\n        if (dictionary[dependency]) {\n          targetDependencies.push(dependency);\n        }\n      }\n      dictionary[pkg].dependencies = targetDependencies;\n    }\n    return dictionary;\n  }\n  const buildInstallationQueueCore = (deepPackagesDependencies, queue, set, packageName) => {\n    const dependencies = deepPackagesDependencies[packageName].dependencies;\n    for (const dependency of dependencies) {\n      if (!set[dependency]) {\n        buildInstallationQueueCore(deepPackagesDependencies, queue, set, dependency);\n      }\n    }\n    if(!set[packageName]) {\n      const deepJson = deepPackagesDependencies[packageName].deepJson;\n      const packageJson = deepPackagesDependencies[packageName].packageJson;\n      queue.push({ name: packageName, deepJson, packageJson });\n      set[packageName] = true;\n    }\n  }\n  const buildInstallationQueue = (deepPackagesDependencies, queue, set) => {\n    for (const packageName in deepPackagesDependencies) {\n      buildInstallationQueueCore(deepPackagesDependencies, queue, set, packageName);\n    }\n  }\n  const getExistingPackages = async (packageNames) => {\n    const packageTypeId = await deep.id('@deep-foundation/core', 'Package');\n    const packageVersionTypeId = await deep.id('@deep-foundation/core', 'PackageVersion');\n    const { data: packages } = await deep.select({\n      type_id: { _eq: packageTypeId },\n      string: { value: { _in: packageNames } }\n    }, {\n      name: 'GET_EXISTING_PACKAGES_WITH_VERSIONS',\n      returning: `\n        id\n        name: value\n        versions: in(where: {type_id: {_eq: ${packageVersionTypeId}}, string: {value: {_is_null: false}}}) {\n          id\n          version: value\n        }\n      `\n    })\n    console.log('packages', packages);\n    const existingPackages = packages.reduce(\n      (accumulator, currentValue) => {\n        const packageId = currentValue?.id;\n        const packageName = currentValue?.name?.value;\n        if (currentValue?.versions.length !== 1) {\n          throw new Error(`'${packageName}' package must have exactly one version. Now it has ${currentValue?.versions.length} versions.`);\n        }\n        if (accumulator[packageName]) {\n          throw new Error(`Multiple packages with name '${packageName}' exist.`)\n        }\n        const packageVersion = currentValue?.versions?.[0]?.version?.value;\n        accumulator[packageName] = { id: packageId, version: packageVersion };\n        return accumulator;\n      },\n      {}\n    );\n    console.log('existingPackages', existingPackages);\n    return existingPackages;\n  };\n\n  if (!triggeredByLinkId) {\n    throw new Error('Install link should be inserted using JWT token (role link), it cannot be inserted using hasura secret (role admin).');\n  }\n\n  const { data: [{ value: { value: packageQuery } }] } = await deep.select({ id: newLink.to_id });\n  const packageQueryParts = packageQuery.split('@');\n  if (packageQueryParts.length === 3) {\n    const packageVersion = packageQueryParts.pop();\n  }\n  const packageName = packageQueryParts.join('@');\n  if (!packageName) {\n    throw new Error('Package query value is empty.');\n  }\n  const tempDirectory = await makeTempDirectory();\n  let deepJson;\n  let packageJson;\n  const installationQueue = [];\n  const installationSet = {};\n  try {\n    const npmToken = await loadNpmToken();\n    if (npmToken) {\n      await npmLogin(npmToken, tempDirectory);\n    }\n    const nodeModulesPath = [tempDirectory, 'node_modules'].join('/');\n    await npmInstall(packageQuery, tempDirectory);\n    const packagePath = makePackagePath(tempDirectory, packageName);\n    const deepJsonPath = makeDeepJsonPath(packagePath);\n    const packageJsonPath = makePackageJsonPath(packagePath);\n    deepJson = await deep.import(deepJsonPath);\n    packageJson = await deep.import(packageJsonPath);\n\n    const packages = await getDeepPackagesList(nodeModulesPath);\n    console.log('packages', packages);\n    \n    const deepPackagesDependencies = await getDeepPackagesDependencies(nodeModulesPath, packages, packageName);\n    delete deepPackagesDependencies[packageName];\n    console.log('deepPackagesDependencies', deepPackagesDependencies);\n    \n    buildInstallationQueue(deepPackagesDependencies, installationQueue, installationSet);\n    \n    console.log('installationQueue', installationQueue);\n    console.log('installationSet', installationSet);\n  } finally {\n    fs.rmSync(tempDirectory, { recursive: true, force: true });\n  }\n  \n  const existingPackages = await getExistingPackages(installationQueue.map(e => e.name));\n  console.log('existingPackages', existingPackages);\n\n  for (const dependencyPackage of installationQueue) {\n    const dependencyPackageName = dependencyPackage.name;\n    const existingPackage = existingPackages[dependencyPackageName];\n    if (existingPackage) {\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/npm-packager', 'Used'),\n        from_id: newLink.id,\n        to_id: existingPackage.id,\n      });\n    } else {\n      const importedDependency = await deepImport(dependencyPackage.deepJson, dependencyPackage.packageJson);\n      if (importedDependency?.errors?.length > 0 || !importedDependency?.packageId) {\n        console.log(`Unable to install dependency ${dependencyPackageName}.`, importedDependency);\n        throw new Error(`Unable to install dependency ${dependencyPackageName}.`);\n      }\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/npm-packager', 'Installed'),\n        from_id: newLink.id,\n        to_id: importedDependency.packageId,\n      });\n      // TODO: Should it be inserted?\n      // await deep.insert({\n      //   type_id: await deep.id('@deep-foundation/core', 'Contain'),\n      //   from_id: newLink.from_id,\n      //   to_id: importedDependency.packageId,\n      // });\n    }\n  }\n\n  const imported = await deepImport(deepJson, packageJson);\n  await deep.insert({\n    type_id: await deep.id('@deep-foundation/core', 'Contain'),\n    from_id: newLink.from_id,\n    to_id: imported.packageId,\n  });\n  return imported;\n}",
			"link_id": 744
		},
		"__typename": "links"
	},
	{
		"id": 745,
		"type_id": 35,
		"from_id": 83,
		"to_id": 744,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 746,
		"type_id": 1,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 747,
		"type_id": 4,
		"from_id": 746,
		"to_id": 5,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 748,
		"type_id": 1,
		"from_id": 2,
		"to_id": 97,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 749,
		"type_id": 49,
		"from_id": 748,
		"to_id": 743,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 750,
		"type_id": 1,
		"from_id": 8,
		"to_id": 97,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 751,
		"type_id": 1,
		"from_id": 750,
		"to_id": 2,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 752,
		"type_id": 1,
		"from_id": 750,
		"to_id": 2,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 753,
		"type_id": 49,
		"from_id": 750,
		"to_id": 745,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 754,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 328,
			"value": "@deep-foundation/npm-packager",
			"link_id": 754
		},
		"__typename": "links"
	},
	{
		"id": 755,
		"type_id": 3,
		"from_id": 375,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 756,
		"type_id": 66,
		"from_id": 754,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 757,
		"type_id": 3,
		"from_id": 741,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 758,
		"type_id": 46,
		"from_id": 741,
		"to_id": 754,
		"value": {
			"id": 329,
			"value": "0.0.37",
			"link_id": 758
		},
		"__typename": "links"
	},
	{
		"id": 759,
		"type_id": 45,
		"from_id": 741,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 760,
		"type_id": 3,
		"from_id": 754,
		"to_id": 751,
		"value": {
			"id": 330,
			"value": "Installed",
			"link_id": 760
		},
		"__typename": "links"
	},
	{
		"id": 761,
		"type_id": 3,
		"from_id": 754,
		"to_id": 752,
		"value": {
			"id": 331,
			"value": "Used",
			"link_id": 761
		},
		"__typename": "links"
	},
	{
		"id": 762,
		"type_id": 3,
		"from_id": 754,
		"to_id": 747,
		"value": {
			"id": 332,
			"value": "tokenValue",
			"link_id": 762
		},
		"__typename": "links"
	},
	{
		"id": 763,
		"type_id": 3,
		"from_id": 754,
		"to_id": 746,
		"value": {
			"id": 333,
			"value": "Token",
			"link_id": 763
		},
		"__typename": "links"
	},
	{
		"id": 764,
		"type_id": 3,
		"from_id": 754,
		"to_id": 749,
		"value": {
			"id": 334,
			"value": "publishCodeHandleInsert",
			"link_id": 764
		},
		"__typename": "links"
	},
	{
		"id": 765,
		"type_id": 3,
		"from_id": 754,
		"to_id": 743,
		"value": {
			"id": 335,
			"value": "publishCodeHandler",
			"link_id": 765
		},
		"__typename": "links"
	},
	{
		"id": 766,
		"type_id": 3,
		"from_id": 754,
		"to_id": 742,
		"value": {
			"id": 336,
			"value": "publishCode",
			"link_id": 766
		},
		"__typename": "links"
	},
	{
		"id": 1141,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1142,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1143,
		"type_id": 16,
		"from_id": 1142,
		"to_id": 1139,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1144,
		"type_id": 70,
		"from_id": 1143,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1145,
		"type_id": 18,
		"from_id": 1141,
		"to_id": 1142,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1146,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1147,
		"type_id": 16,
		"from_id": 1146,
		"to_id": 1139,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1148,
		"type_id": 70,
		"from_id": 1147,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1149,
		"type_id": 19,
		"from_id": 1141,
		"to_id": 1146,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1150,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1151,
		"type_id": 16,
		"from_id": 1150,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1152,
		"type_id": 70,
		"from_id": 1151,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1153,
		"type_id": 20,
		"from_id": 1141,
		"to_id": 1150,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1154,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1155,
		"type_id": 66,
		"from_id": 1154,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1156,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1157,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1158,
		"type_id": 16,
		"from_id": 1157,
		"to_id": 1154,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1159,
		"type_id": 70,
		"from_id": 1158,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1160,
		"type_id": 18,
		"from_id": 1156,
		"to_id": 1157,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1161,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1162,
		"type_id": 16,
		"from_id": 1161,
		"to_id": 1154,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1163,
		"type_id": 70,
		"from_id": 1162,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1164,
		"type_id": 19,
		"from_id": 1156,
		"to_id": 1161,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1165,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1166,
		"type_id": 16,
		"from_id": 1165,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1167,
		"type_id": 70,
		"from_id": 1166,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1168,
		"type_id": 20,
		"from_id": 1156,
		"to_id": 1165,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 247,
		"type_id": 3,
		"from_id": 184,
		"to_id": 63,
		"value": {
			"id": 69,
			"value": "spaceValue",
			"link_id": 247
		},
		"__typename": "links"
	},
	{
		"id": 248,
		"type_id": 3,
		"from_id": 184,
		"to_id": 64,
		"value": {
			"id": 70,
			"value": "AllowLogin",
			"link_id": 248
		},
		"__typename": "links"
	},
	{
		"id": 250,
		"type_id": 3,
		"from_id": 184,
		"to_id": 66,
		"value": {
			"id": 72,
			"value": "Join",
			"link_id": 250
		},
		"__typename": "links"
	},
	{
		"id": 251,
		"type_id": 3,
		"from_id": 184,
		"to_id": 67,
		"value": {
			"id": 73,
			"value": "joinTree",
			"link_id": 251
		},
		"__typename": "links"
	},
	{
		"id": 252,
		"type_id": 3,
		"from_id": 184,
		"to_id": 68,
		"value": {
			"id": 74,
			"value": "joinTreeJoin",
			"link_id": 252
		},
		"__typename": "links"
	},
	{
		"id": 253,
		"type_id": 3,
		"from_id": 184,
		"to_id": 69,
		"value": {
			"id": 75,
			"value": "joinTreeAny",
			"link_id": 253
		},
		"__typename": "links"
	},
	{
		"id": 254,
		"type_id": 3,
		"from_id": 184,
		"to_id": 70,
		"value": {
			"id": 76,
			"value": "SelectorTree",
			"link_id": 254
		},
		"__typename": "links"
	},
	{
		"id": 255,
		"type_id": 3,
		"from_id": 184,
		"to_id": 71,
		"value": {
			"id": 77,
			"value": "AllowAdmin",
			"link_id": 255
		},
		"__typename": "links"
	},
	{
		"id": 256,
		"type_id": 3,
		"from_id": 184,
		"to_id": 72,
		"value": {
			"id": 78,
			"value": "SelectorExclude",
			"link_id": 256
		},
		"__typename": "links"
	},
	{
		"id": 257,
		"type_id": 3,
		"from_id": 184,
		"to_id": 73,
		"value": {
			"id": 79,
			"value": "SelectorFilter",
			"link_id": 257
		},
		"__typename": "links"
	},
	{
		"id": 258,
		"type_id": 3,
		"from_id": 184,
		"to_id": 74,
		"value": {
			"id": 80,
			"value": "HandleSchedule",
			"link_id": 258
		},
		"__typename": "links"
	},
	{
		"id": 259,
		"type_id": 3,
		"from_id": 184,
		"to_id": 75,
		"value": {
			"id": 81,
			"value": "Schedule",
			"link_id": 259
		},
		"__typename": "links"
	},
	{
		"id": 260,
		"type_id": 3,
		"from_id": 184,
		"to_id": 76,
		"value": {
			"id": 82,
			"value": "scheduleValue",
			"link_id": 260
		},
		"__typename": "links"
	},
	{
		"id": 261,
		"type_id": 3,
		"from_id": 184,
		"to_id": 77,
		"value": {
			"id": 83,
			"value": "Router",
			"link_id": 261
		},
		"__typename": "links"
	},
	{
		"id": 262,
		"type_id": 3,
		"from_id": 184,
		"to_id": 78,
		"value": {
			"id": 84,
			"value": "IsolationProvider",
			"link_id": 262
		},
		"__typename": "links"
	},
	{
		"id": 263,
		"type_id": 3,
		"from_id": 184,
		"to_id": 79,
		"value": {
			"id": 85,
			"value": "DockerIsolationProvider",
			"link_id": 263
		},
		"__typename": "links"
	},
	{
		"id": 267,
		"type_id": 3,
		"from_id": 184,
		"to_id": 83,
		"value": {
			"id": 89,
			"value": "dockerSupportsJs",
			"link_id": 267
		},
		"__typename": "links"
	},
	{
		"id": 271,
		"type_id": 3,
		"from_id": 184,
		"to_id": 87,
		"value": {
			"id": 93,
			"value": "packageInstallCodeHandler",
			"link_id": 271
		},
		"__typename": "links"
	},
	{
		"id": 560,
		"type_id": 3,
		"from_id": 551,
		"to_id": 559,
		"value": {
			"id": 212,
			"value": "GeneratedFromSymbol",
			"link_id": 560
		},
		"__typename": "links"
	},
	{
		"id": 561,
		"type_id": 146,
		"from_id": 551,
		"to_id": 142,
		"value": {
			"id": 213,
			"value": "🔑",
			"link_id": 561
		},
		"__typename": "links"
	},
	{
		"id": 562,
		"type_id": 3,
		"from_id": 551,
		"to_id": 561,
		"value": {
			"id": 214,
			"value": "AuthorizationSymbol",
			"link_id": 562
		},
		"__typename": "links"
	},
	{
		"id": 563,
		"type_id": 146,
		"from_id": 551,
		"to_id": 106,
		"value": {
			"id": 215,
			"value": "🔗",
			"link_id": 563
		},
		"__typename": "links"
	},
	{
		"id": 612,
		"type_id": 3,
		"from_id": 551,
		"to_id": 611,
		"value": {
			"id": 264,
			"value": "TreeIncludeSymbol",
			"link_id": 612
		},
		"__typename": "links"
	},
	{
		"id": 613,
		"type_id": 146,
		"from_id": 551,
		"to_id": 36,
		"value": {
			"id": 265,
			"value": "🌲",
			"link_id": 613
		},
		"__typename": "links"
	},
	{
		"id": 614,
		"type_id": 3,
		"from_id": 551,
		"to_id": 613,
		"value": {
			"id": 266,
			"value": "TreeSymbol",
			"link_id": 614
		},
		"__typename": "links"
	},
	{
		"id": 615,
		"type_id": 146,
		"from_id": 551,
		"to_id": 35,
		"value": {
			"id": 267,
			"value": "💡",
			"link_id": 615
		},
		"__typename": "links"
	},
	{
		"id": 616,
		"type_id": 3,
		"from_id": 551,
		"to_id": 615,
		"value": {
			"id": 268,
			"value": "HandlerSymbol",
			"link_id": 616
		},
		"__typename": "links"
	},
	{
		"id": 617,
		"type_id": 146,
		"from_id": 551,
		"to_id": 57,
		"value": {
			"id": 269,
			"value": "💽",
			"link_id": 617
		},
		"__typename": "links"
	},
	{
		"id": 618,
		"type_id": 3,
		"from_id": 551,
		"to_id": 617,
		"value": {
			"id": 270,
			"value": "AsyncFileSymbol",
			"link_id": 618
		},
		"__typename": "links"
	},
	{
		"id": 619,
		"type_id": 146,
		"from_id": 551,
		"to_id": 78,
		"value": {
			"id": 271,
			"value": "📡",
			"link_id": 619
		},
		"__typename": "links"
	},
	{
		"id": 620,
		"type_id": 3,
		"from_id": 551,
		"to_id": 619,
		"value": {
			"id": 272,
			"value": "IsolationProviderSymbol",
			"link_id": 620
		},
		"__typename": "links"
	},
	{
		"id": 782,
		"type_id": 66,
		"from_id": 754,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 817,
		"type_id": 156,
		"from_id": 30,
		"to_id": 812,
		"value": {
			"id": 366,
			"value": "",
			"link_id": 817
		},
		"__typename": "links"
	},
	{
		"id": 818,
		"type_id": 156,
		"from_id": 3,
		"to_id": 813,
		"value": {
			"id": 367,
			"value": "",
			"link_id": 818
		},
		"__typename": "links"
	},
	{
		"id": 819,
		"type_id": 156,
		"from_id": 97,
		"to_id": 813,
		"value": {
			"id": 368,
			"value": "",
			"link_id": 819
		},
		"__typename": "links"
	},
	{
		"id": 820,
		"type_id": 156,
		"from_id": 66,
		"to_id": 813,
		"value": {
			"id": 369,
			"value": "",
			"link_id": 820
		},
		"__typename": "links"
	},
	{
		"id": 821,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 370,
			"value": "@deep-foundation/deepcase",
			"link_id": 821
		},
		"__typename": "links"
	},
	{
		"id": 822,
		"type_id": 3,
		"from_id": 754,
		"to_id": 821,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 823,
		"type_id": 3,
		"from_id": 375,
		"to_id": 821,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 824,
		"type_id": 66,
		"from_id": 821,
		"to_id": 375,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 920,
		"type_id": 752,
		"from_id": 917,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 921,
		"type_id": 752,
		"from_id": 917,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 942,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 943,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 944,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 945,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 946,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 947,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 948,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 922,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 400,
			"value": "@deep-foundation/npm-packager-ui",
			"link_id": 922
		},
		"__typename": "links"
	},
	{
		"id": 923,
		"type_id": 66,
		"from_id": 922,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 963,
		"type_id": 97,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 412,
			"value": "@deep-foundation/finder",
			"link_id": 963
		},
		"__typename": "links"
	},
	{
		"id": 964,
		"type_id": 750,
		"from_id": 380,
		"to_id": 963,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 965,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 966,
		"type_id": 10,
		"from_id": 964,
		"to_id": 965,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 993,
		"type_id": 3,
		"from_id": 980,
		"to_id": 975,
		"value": {
			"id": 426,
			"value": "generated",
			"link_id": 993
		},
		"__typename": "links"
	},
	{
		"id": 1012,
		"type_id": 3,
		"from_id": 380,
		"to_id": 980,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1013,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 11,
			"value": {
				"ids": [
					970,
					971,
					972,
					973,
					974,
					975,
					976,
					977,
					978,
					979,
					980,
					981,
					982,
					983,
					984,
					985,
					986,
					987,
					988,
					989,
					990,
					991,
					992,
					993,
					994,
					995,
					996,
					997,
					998,
					999,
					1000,
					1001,
					1002
				],
				"errors": [],
				"packageId": 980,
				"namespaceId": 970
			},
			"link_id": 1013
		},
		"__typename": "links"
	},
	{
		"id": 1014,
		"type_id": 11,
		"from_id": 965,
		"to_id": 1013,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1015,
		"type_id": 54,
		"from_id": 1014,
		"to_id": 753,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1016,
		"type_id": 66,
		"from_id": 980,
		"to_id": 380,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1031,
		"type_id": 3,
		"from_id": 1022,
		"to_id": 1027,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1032,
		"type_id": 46,
		"from_id": 1022,
		"to_id": 1027,
		"value": {
			"id": 430,
			"value": "0.0.1",
			"link_id": 1032
		},
		"__typename": "links"
	},
	{
		"id": 1033,
		"type_id": 45,
		"from_id": 1022,
		"to_id": 1027,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1034,
		"type_id": 3,
		"from_id": 1027,
		"to_id": 1026,
		"value": {
			"id": 431,
			"value": "OpenedHandler",
			"link_id": 1034
		},
		"__typename": "links"
	},
	{
		"id": 1035,
		"type_id": 3,
		"from_id": 1027,
		"to_id": 1025,
		"value": {
			"id": 432,
			"value": "Opened",
			"link_id": 1035
		},
		"__typename": "links"
	},
	{
		"id": 1039,
		"type_id": 3,
		"from_id": 380,
		"to_id": 1027,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1040,
		"type_id": 52,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 12,
			"value": {
				"ids": [
					1022,
					1023,
					1024,
					1025,
					1026,
					1027,
					1028,
					1029,
					1030,
					1031,
					1032,
					1033,
					1034,
					1035,
					1036,
					1037,
					1038
				],
				"errors": [],
				"packageId": 1027,
				"namespaceId": 1022
			},
			"link_id": 1040
		},
		"__typename": "links"
	},
	{
		"id": 1041,
		"type_id": 11,
		"from_id": 1019,
		"to_id": 1040,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1042,
		"type_id": 54,
		"from_id": 1041,
		"to_id": 753,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1097,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1098,
		"type_id": 16,
		"from_id": 1097,
		"to_id": 1094,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1099,
		"type_id": 70,
		"from_id": 1098,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1100,
		"type_id": 18,
		"from_id": 1096,
		"to_id": 1097,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1101,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1102,
		"type_id": 16,
		"from_id": 1101,
		"to_id": 1094,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1103,
		"type_id": 70,
		"from_id": 1102,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1104,
		"type_id": 19,
		"from_id": 1096,
		"to_id": 1101,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1105,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1106,
		"type_id": 16,
		"from_id": 1105,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1107,
		"type_id": 70,
		"from_id": 1106,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1108,
		"type_id": 20,
		"from_id": 1096,
		"to_id": 1105,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1169,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1170,
		"type_id": 66,
		"from_id": 1169,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1171,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1172,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1173,
		"type_id": 16,
		"from_id": 1172,
		"to_id": 1169,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1174,
		"type_id": 70,
		"from_id": 1173,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1175,
		"type_id": 18,
		"from_id": 1171,
		"to_id": 1172,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1176,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1177,
		"type_id": 16,
		"from_id": 1176,
		"to_id": 1169,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1178,
		"type_id": 70,
		"from_id": 1177,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1179,
		"type_id": 19,
		"from_id": 1171,
		"to_id": 1176,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1180,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1181,
		"type_id": 16,
		"from_id": 1180,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1182,
		"type_id": 70,
		"from_id": 1181,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1183,
		"type_id": 20,
		"from_id": 1171,
		"to_id": 1180,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 264,
		"type_id": 3,
		"from_id": 184,
		"to_id": 80,
		"value": {
			"id": 86,
			"value": "dockerIsolationProviderValue",
			"link_id": 264
		},
		"__typename": "links"
	},
	{
		"id": 265,
		"type_id": 3,
		"from_id": 184,
		"to_id": 81,
		"value": {
			"id": 87,
			"value": "JSDockerIsolationProvider",
			"link_id": 265
		},
		"__typename": "links"
	},
	{
		"id": 266,
		"type_id": 3,
		"from_id": 184,
		"to_id": 82,
		"value": {
			"id": 88,
			"value": "Supports",
			"link_id": 266
		},
		"__typename": "links"
	},
	{
		"id": 268,
		"type_id": 3,
		"from_id": 184,
		"to_id": 84,
		"value": {
			"id": 90,
			"value": "PackageInstall",
			"link_id": 268
		},
		"__typename": "links"
	},
	{
		"id": 269,
		"type_id": 3,
		"from_id": 184,
		"to_id": 85,
		"value": {
			"id": 91,
			"value": "PackagePublish",
			"link_id": 269
		},
		"__typename": "links"
	},
	{
		"id": 295,
		"type_id": 3,
		"from_id": 184,
		"to_id": 111,
		"value": {
			"id": 117,
			"value": "routeTreeRouter",
			"link_id": 295
		},
		"__typename": "links"
	},
	{
		"id": 297,
		"type_id": 3,
		"from_id": 184,
		"to_id": 113,
		"value": {
			"id": 119,
			"value": "routeTreeHandler",
			"link_id": 297
		},
		"__typename": "links"
	},
	{
		"id": 298,
		"type_id": 3,
		"from_id": 184,
		"to_id": 114,
		"value": {
			"id": 120,
			"value": "routeTreeRouterListening",
			"link_id": 298
		},
		"__typename": "links"
	},
	{
		"id": 299,
		"type_id": 3,
		"from_id": 184,
		"to_id": 115,
		"value": {
			"id": 121,
			"value": "routeTreeRouterStringUse",
			"link_id": 299
		},
		"__typename": "links"
	},
	{
		"id": 301,
		"type_id": 3,
		"from_id": 184,
		"to_id": 117,
		"value": {
			"id": 123,
			"value": "TreeIncludeIn",
			"link_id": 301
		},
		"__typename": "links"
	},
	{
		"id": 331,
		"type_id": 3,
		"from_id": 184,
		"to_id": 147,
		"value": {
			"id": 153,
			"value": "symbolValue",
			"link_id": 331
		},
		"__typename": "links"
	},
	{
		"id": 332,
		"type_id": 3,
		"from_id": 184,
		"to_id": 148,
		"value": {
			"id": 154,
			"value": "containTreeSymbol",
			"link_id": 332
		},
		"__typename": "links"
	},
	{
		"id": 333,
		"type_id": 3,
		"from_id": 184,
		"to_id": 149,
		"value": {
			"id": 155,
			"value": "containTreeThen",
			"link_id": 333
		},
		"__typename": "links"
	},
	{
		"id": 334,
		"type_id": 3,
		"from_id": 184,
		"to_id": 150,
		"value": {
			"id": 156,
			"value": "containTreeResolved",
			"link_id": 334
		},
		"__typename": "links"
	},
	{
		"id": 335,
		"type_id": 3,
		"from_id": 184,
		"to_id": 151,
		"value": {
			"id": 157,
			"value": "containTreeRejected",
			"link_id": 335
		},
		"__typename": "links"
	},
	{
		"id": 336,
		"type_id": 3,
		"from_id": 184,
		"to_id": 152,
		"value": {
			"id": 158,
			"value": "handlersTree",
			"link_id": 336
		},
		"__typename": "links"
	},
	{
		"id": 337,
		"type_id": 3,
		"from_id": 184,
		"to_id": 153,
		"value": {
			"id": 159,
			"value": "handlersTreeHandler",
			"link_id": 337
		},
		"__typename": "links"
	},
	{
		"id": 338,
		"type_id": 3,
		"from_id": 184,
		"to_id": 154,
		"value": {
			"id": 160,
			"value": "handlersTreeSupports",
			"link_id": 338
		},
		"__typename": "links"
	},
	{
		"id": 339,
		"type_id": 3,
		"from_id": 184,
		"to_id": 155,
		"value": {
			"id": 161,
			"value": "handlersTreeHandleOperation",
			"link_id": 339
		},
		"__typename": "links"
	},
	{
		"id": 340,
		"type_id": 3,
		"from_id": 184,
		"to_id": 156,
		"value": {
			"id": 162,
			"value": "HandleClient",
			"link_id": 340
		},
		"__typename": "links"
	},
	{
		"id": 341,
		"type_id": 3,
		"from_id": 184,
		"to_id": 157,
		"value": {
			"id": 163,
			"value": "HandlingError",
			"link_id": 341
		},
		"__typename": "links"
	},
	{
		"id": 342,
		"type_id": 3,
		"from_id": 184,
		"to_id": 158,
		"value": {
			"id": 164,
			"value": "handlingErrorValue",
			"link_id": 342
		},
		"__typename": "links"
	},
	{
		"id": 343,
		"type_id": 3,
		"from_id": 184,
		"to_id": 159,
		"value": {
			"id": 165,
			"value": "HandlingErrorReason",
			"link_id": 343
		},
		"__typename": "links"
	},
	{
		"id": 344,
		"type_id": 3,
		"from_id": 184,
		"to_id": 160,
		"value": {
			"id": 166,
			"value": "HandlingErrorLink",
			"link_id": 344
		},
		"__typename": "links"
	},
	{
		"id": 345,
		"type_id": 3,
		"from_id": 184,
		"to_id": 161,
		"value": {
			"id": 167,
			"value": "GqlEndpoint",
			"link_id": 345
		},
		"__typename": "links"
	},
	{
		"id": 346,
		"type_id": 3,
		"from_id": 184,
		"to_id": 162,
		"value": {
			"id": 168,
			"value": "MainGqlEndpoint",
			"link_id": 346
		},
		"__typename": "links"
	},
	{
		"id": 347,
		"type_id": 3,
		"from_id": 184,
		"to_id": 163,
		"value": {
			"id": 169,
			"value": "HandleGql",
			"link_id": 347
		},
		"__typename": "links"
	},
	{
		"id": 348,
		"type_id": 3,
		"from_id": 184,
		"to_id": 164,
		"value": {
			"id": 170,
			"value": "SupportsCompatable",
			"link_id": 348
		},
		"__typename": "links"
	},
	{
		"id": 349,
		"type_id": 3,
		"from_id": 184,
		"to_id": 165,
		"value": {
			"id": 171,
			"value": "plv8JSSupportsCompatableHandleInsert",
			"link_id": 349
		},
		"__typename": "links"
	},
	{
		"id": 350,
		"type_id": 3,
		"from_id": 184,
		"to_id": 166,
		"value": {
			"id": 172,
			"value": "plv8JSSupportsCompatableHandleUpdate",
			"link_id": 350
		},
		"__typename": "links"
	},
	{
		"id": 351,
		"type_id": 3,
		"from_id": 184,
		"to_id": 167,
		"value": {
			"id": 173,
			"value": "plv8JSSupportsCompatableHandleDelete",
			"link_id": 351
		},
		"__typename": "links"
	},
	{
		"id": 352,
		"type_id": 3,
		"from_id": 184,
		"to_id": 168,
		"value": {
			"id": 174,
			"value": "dockerJSSupportsCompatableHandleInsert",
			"link_id": 352
		},
		"__typename": "links"
	},
	{
		"id": 372,
		"type_id": 2,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 192,
			"value": "deep",
			"link_id": 372
		},
		"__typename": "links"
	},
	{
		"id": 373,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 374,
		"type_id": 3,
		"from_id": 372,
		"to_id": 373,
		"value": {
			"id": 193,
			"value": "users",
			"link_id": 374
		},
		"__typename": "links"
	},
	{
		"id": 400,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 401,
		"type_id": 3,
		"from_id": 380,
		"to_id": 400,
		"value": {
			"id": 199,
			"value": "allowSelectBasicTypesRule",
			"link_id": 401
		},
		"__typename": "links"
	},
	{
		"id": 402,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 403,
		"type_id": 16,
		"from_id": 402,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 404,
		"type_id": 70,
		"from_id": 403,
		"to_id": 67,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 405,
		"type_id": 18,
		"from_id": 400,
		"to_id": 402,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 406,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 407,
		"type_id": 16,
		"from_id": 406,
		"to_id": 22,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 408,
		"type_id": 70,
		"from_id": 407,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 409,
		"type_id": 16,
		"from_id": 406,
		"to_id": 10,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 410,
		"type_id": 70,
		"from_id": 409,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 411,
		"type_id": 16,
		"from_id": 406,
		"to_id": 9,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 412,
		"type_id": 70,
		"from_id": 411,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 413,
		"type_id": 16,
		"from_id": 406,
		"to_id": 11,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 414,
		"type_id": 70,
		"from_id": 413,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 415,
		"type_id": 16,
		"from_id": 406,
		"to_id": 12,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 416,
		"type_id": 70,
		"from_id": 415,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 417,
		"type_id": 19,
		"from_id": 400,
		"to_id": 406,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 418,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 419,
		"type_id": 16,
		"from_id": 418,
		"to_id": 128,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 420,
		"type_id": 70,
		"from_id": 419,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 421,
		"type_id": 20,
		"from_id": 400,
		"to_id": 418,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 564,
		"type_id": 3,
		"from_id": 551,
		"to_id": 563,
		"value": {
			"id": 216,
			"value": "RouterStringUseSymbol",
			"link_id": 564
		},
		"__typename": "links"
	},
	{
		"id": 565,
		"type_id": 146,
		"from_id": 551,
		"to_id": 105,
		"value": {
			"id": 217,
			"value": "🔗",
			"link_id": 565
		},
		"__typename": "links"
	},
	{
		"id": 566,
		"type_id": 3,
		"from_id": 551,
		"to_id": 565,
		"value": {
			"id": 218,
			"value": "RouterListeningSymbol",
			"link_id": 566
		},
		"__typename": "links"
	},
	{
		"id": 567,
		"type_id": 146,
		"from_id": 551,
		"to_id": 104,
		"value": {
			"id": 219,
			"value": "🚏",
			"link_id": 567
		},
		"__typename": "links"
	},
	{
		"id": 568,
		"type_id": 3,
		"from_id": 551,
		"to_id": 567,
		"value": {
			"id": 220,
			"value": "RouteSymbol",
			"link_id": 568
		},
		"__typename": "links"
	},
	{
		"id": 569,
		"type_id": 146,
		"from_id": 551,
		"to_id": 99,
		"value": {
			"id": 221,
			"value": "🗜",
			"link_id": 569
		},
		"__typename": "links"
	},
	{
		"id": 570,
		"type_id": 3,
		"from_id": 551,
		"to_id": 569,
		"value": {
			"id": 222,
			"value": "PortSymbol",
			"link_id": 570
		},
		"__typename": "links"
	},
	{
		"id": 571,
		"type_id": 146,
		"from_id": 551,
		"to_id": 97,
		"value": {
			"id": 223,
			"value": "🏷",
			"link_id": 571
		},
		"__typename": "links"
	},
	{
		"id": 572,
		"type_id": 3,
		"from_id": 551,
		"to_id": 571,
		"value": {
			"id": 224,
			"value": "PackageQuerySymbol",
			"link_id": 572
		},
		"__typename": "links"
	},
	{
		"id": 573,
		"type_id": 146,
		"from_id": 551,
		"to_id": 95,
		"value": {
			"id": 225,
			"value": "🧷",
			"link_id": 573
		},
		"__typename": "links"
	},
	{
		"id": 574,
		"type_id": 3,
		"from_id": 551,
		"to_id": 573,
		"value": {
			"id": 226,
			"value": "PromiseOutSymbol",
			"link_id": 574
		},
		"__typename": "links"
	},
	{
		"id": 575,
		"type_id": 146,
		"from_id": 551,
		"to_id": 92,
		"value": {
			"id": 227,
			"value": "💡",
			"link_id": 575
		},
		"__typename": "links"
	},
	{
		"id": 576,
		"type_id": 3,
		"from_id": 551,
		"to_id": 575,
		"value": {
			"id": 228,
			"value": "ActiveSymbol",
			"link_id": 576
		},
		"__typename": "links"
	},
	{
		"id": 577,
		"type_id": 146,
		"from_id": 551,
		"to_id": 85,
		"value": {
			"id": 229,
			"value": "📤",
			"link_id": 577
		},
		"__typename": "links"
	},
	{
		"id": 578,
		"type_id": 3,
		"from_id": 551,
		"to_id": 577,
		"value": {
			"id": 230,
			"value": "PackagePublishSymbol",
			"link_id": 578
		},
		"__typename": "links"
	},
	{
		"id": 579,
		"type_id": 146,
		"from_id": 551,
		"to_id": 84,
		"value": {
			"id": 231,
			"value": "📥",
			"link_id": 579
		},
		"__typename": "links"
	},
	{
		"id": 580,
		"type_id": 3,
		"from_id": 551,
		"to_id": 579,
		"value": {
			"id": 232,
			"value": "PackageInstallSymbol",
			"link_id": 580
		},
		"__typename": "links"
	},
	{
		"id": 581,
		"type_id": 146,
		"from_id": 551,
		"to_id": 82,
		"value": {
			"id": 233,
			"value": "🔋",
			"link_id": 581
		},
		"__typename": "links"
	},
	{
		"id": 582,
		"type_id": 3,
		"from_id": 551,
		"to_id": 581,
		"value": {
			"id": 234,
			"value": "SupportsSymbol",
			"link_id": 582
		},
		"__typename": "links"
	},
	{
		"id": 583,
		"type_id": 146,
		"from_id": 551,
		"to_id": 77,
		"value": {
			"id": 235,
			"value": "🚦",
			"link_id": 583
		},
		"__typename": "links"
	},
	{
		"id": 584,
		"type_id": 3,
		"from_id": 551,
		"to_id": 583,
		"value": {
			"id": 236,
			"value": "RouterSymbol",
			"link_id": 584
		},
		"__typename": "links"
	},
	{
		"id": 585,
		"type_id": 146,
		"from_id": 551,
		"to_id": 75,
		"value": {
			"id": 237,
			"value": "⏲",
			"link_id": 585
		},
		"__typename": "links"
	},
	{
		"id": 621,
		"type_id": 146,
		"from_id": 551,
		"to_id": 32,
		"value": {
			"id": 273,
			"value": "🔌",
			"link_id": 621
		},
		"__typename": "links"
	},
	{
		"id": 826,
		"type_id": 46,
		"from_id": 791,
		"to_id": 821,
		"value": {
			"id": 371,
			"value": "0.0.58",
			"link_id": 826
		},
		"__typename": "links"
	},
	{
		"id": 827,
		"type_id": 45,
		"from_id": 791,
		"to_id": 821,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 828,
		"type_id": 3,
		"from_id": 821,
		"to_id": 809,
		"value": {
			"id": 372,
			"value": "asyncFileHandler",
			"link_id": 828
		},
		"__typename": "links"
	},
	{
		"id": 829,
		"type_id": 3,
		"from_id": 821,
		"to_id": 802,
		"value": {
			"id": 373,
			"value": "asyncFileClientHandlerGeneratedFrom",
			"link_id": 829
		},
		"__typename": "links"
	},
	{
		"id": 830,
		"type_id": 3,
		"from_id": 821,
		"to_id": 801,
		"value": {
			"id": 374,
			"value": "asyncFileClientHandlerGenerated",
			"link_id": 830
		},
		"__typename": "links"
	},
	{
		"id": 831,
		"type_id": 3,
		"from_id": 821,
		"to_id": 814,
		"value": {
			"id": 375,
			"value": "asyncFileHandleClient",
			"link_id": 831
		},
		"__typename": "links"
	},
	{
		"id": 832,
		"type_id": 3,
		"from_id": 821,
		"to_id": 810,
		"value": {
			"id": 376,
			"value": "Context",
			"link_id": 832
		},
		"__typename": "links"
	},
	{
		"id": 833,
		"type_id": 3,
		"from_id": 821,
		"to_id": 798,
		"value": {
			"id": 377,
			"value": "ContextToken",
			"link_id": 833
		},
		"__typename": "links"
	},
	{
		"id": 834,
		"type_id": 3,
		"from_id": 821,
		"to_id": 794,
		"value": {
			"id": 378,
			"value": "asyncFileClientHandler",
			"link_id": 834
		},
		"__typename": "links"
	},
	{
		"id": 967,
		"type_id": 752,
		"from_id": 964,
		"to_id": 184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 968,
		"type_id": 752,
		"from_id": 964,
		"to_id": 719,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 969,
		"type_id": 752,
		"from_id": 964,
		"to_id": 821,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 994,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 995,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 996,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 997,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 998,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 999,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1000,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1001,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1002,
		"type_id": 0,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 970,
		"type_id": 43,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 413,
			"value": "@deep-foundation/finder",
			"link_id": 970
		},
		"__typename": "links"
	},
	{
		"id": 971,
		"type_id": 66,
		"from_id": 970,
		"to_id": 754,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 972,
		"type_id": 3,
		"from_id": 754,
		"to_id": 970,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 973,
		"type_id": 798,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 974,
		"type_id": 713,
		"from_id": 0,
		"to_id": 0,
		"value": {
			"id": 414,
			"value": "({ deep, require }) => {\n  const React = require('react');\n  const { Wrap, WrapItem, Stack, HStack, VStack, Flex, StackDivider, Box, Button, Text, Input } = require('@chakra-ui/react');\n  const { Resize } = require('@deep-foundation/deepcase');\n  const MonacoEditor = require('@monaco-editor/react');\n  const json5 = require('json5');\n  const {TbArrowMoveLeft, TbArrowMoveRight } =require('react-icons/tb');\n  const { useDebounceCallback } = require('@react-hook/debounce');\n  const { useColorModeValue, useColorMode } = require('@chakra-ui/react');\n\n  const getSymbol = (link) => link?.inByType[deep.idLocal('@deep-foundation/core', 'Symbol')]?.[0]?.value?.value\n\n  const getTypes = (link) => {\n    const types = [];\n    for (let l = link; l?.type && l?.id !== 1; l = link?.type) types.push(link?.type_id);\n    return types;\n  };\n\n  const ListItem = ({ link, current, setCurrent, ...props }) => {\n    // const [__symbol] = deep.useMinilinksSubscription({\n    //   type_id: deep.idLocal('@deep-foundation/core', 'Symbol'),\n    //   to_id: { _in: getTypes(link) },\n    // });\n    // const _symbol = __symbol?.value?.value;\n    const _symbol = getSymbol(link) || getSymbol(link?.type) || getSymbol(link?.type?.type);\n    const _value = deep.stringify(link?.value?.value);\n    const __value = _value?.length > 29 ? _value.slice(0, 20)+'...'+_value.slice(-9, _value.length) : _value;\n    return (<Box background='backgroundModal' p='0.2rem' {...props}>\n      <Box mr='0.5rem'><Text>{_symbol} {link?.id} {deep.nameLocal(link?.id)}</Text></Box>\n      <Box mr='0.5rem'><Text>{__value}</Text></Box>\n      <Flex \n        divider={<StackDivider borderColor='borderColor' />}\n        spacing={2}\n        justifyContent='space-between'\n        alignItems='center'\n        sx={{\n          '& > *:not(:last-of-type)': {\n            mr: '0.5rem'\n          }\n        }}\n      >\n        {!!link?.from_id && <Button \n          size='sm'\n          variant=\"outline\" \n          width='max-content'\n          rightIcon={<TbArrowMoveLeft size='1.3rem' />}\n            onClick={async () => {\n            const { data: [next] } = await deep.select(link?.from_id);\n            setCurrent(next);\n          }}\n        ><Text fontSize='sm'>{link?.from_id || 0}</Text></Button>}\n        {!!link?.to_id && <Button \n          size='sm'\n          fontSize='sm'\n          variant=\"outline\"\n          leftIcon={<TbArrowMoveRight size='1.3rem' />} \n            onClick={async () => {\n            const { data: [next] } = await deep.select(link?.to_id);\n            setCurrent(next);\n          }}\n        ><Text>{link?.to_id || 0}</Text></Button>}\n        {!!link?.type_id && <Button\n          size='sm' \n          fontSize='sm'\n          variant=\"outline\" \n            onClick={async () => {\n            const { data: [next] } = await deep.select(link?.type_id);\n            setCurrent(next);\n          }}\n        ><Text>{link?.type_id} {deep.nameLocal(link?.type_id)}</Text></Button>}\n      </Flex>\n    </Box>);\n  };\n\n  const List = ({\n    link, parentsQuery, childrenQuery, current, setCurrent\n  }) => {\n    const { data: parents } = deep.useDeepSubscription(parentsQuery);\n\n    const { data: children } = deep.useDeepSubscription(childrenQuery);\n\n    const descriptionQuery = React.useMemo(() => {\n      return {\n        to: { down: {\n          tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n          link_id: { _in: [\n            ...(current?.id ? [current.id] : []),\n            ...parents?.map(l => l.id),\n            ...children?.map(l => l.id),\n            ...parents?.map(l => l.from_id),\n            ...children?.map(l => l.from_id),\n            ...parents?.map(l => l.to_id),\n            ...children?.map(l => l.to_id),\n          ] },\n         } },\n        type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Contain'), deep.idLocal('@deep-foundation/core', 'Symbol')] },\n      };\n    }, [current, parents, children]);\n    const description = deep.useDeepSubscription(descriptionQuery);\n\n    deep.useDeepSubscription({\n      down: {\n        tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n        link_id: { _in: [\n          ...(current?.id ? [current.id] : []),\n          ...parents?.map(l => l.id),\n          ...children?.map(l => l.id),\n          ...parents?.map(l => l.from_id),\n          ...children?.map(l => l.from_id),\n          ...parents?.map(l => l.to_id),\n          ...children?.map(l => l.to_id),\n        ] },\n      },\n    });\n\n    return <>{!description.loading &&\n      <VStack\n        divider={<StackDivider borderColor='borderColor' />}\n        spacing={1}\n        align='stretch'\n        fontSize='sm'\n      >\n        {parents?.map(c => (\n          <ListItem key={c?.id} current={current} setCurrent={setCurrent} link={c} onClick={() => setCurrent(c)} bg='backgroundModal' p='0.2rem' />\n        ))}\n        {!!current && <ListItem current={current} setCurrent={setCurrent} link={current}  p='0.2rem' />}\n        {children?.map(c => (\n          <ListItem key={c?.id} current={current} setCurrent={setCurrent} link={c} onClick={() => setCurrent(c)}/>\n        ))}\n      </VStack>\n    }</>;\n  };\n\n  return ({\n    style,\n    link,\n    onChange,\n    search,\n    query,\n    fillSize,\n    children = null,\n  }: {\n    style: any;\n    link: any;\n    onChange?: any;\n    search?: any;\n    query?: any;\n    fillSize?: boolean;\n    children?: any;\n  }) => {\n    const [currentId, setCurrentId] = React.useState<number>(link?.id || 0)\n    const setCurrent = React.useCallback((link) => setCurrentId(link?.id || 0));\n    const { data: [current] = [] } = deep.useDeepSubscription({ id: currentId });\n    const [mode, setMode] = React.useState(typeof(search) === 'string' ? 'Search' : typeof(query) === 'object' ? 'Query' : 'Contains');\n    const [ viewSize, setViewSize ] = React.useState({ height: 400, width: 450 });\n\n    React.useEffect(() => onChange && onChange(current), [current]);\n\n    const [trees, setTrees] = React.useState([]);\n    React.useEffect(() => { mode === 'Trees' && (async () => {\n      setTrees((await deep.select({\n        link_id: { _eq: current?.id },\n        parent_id: { _eq: current?.id }\n        distinct_on: ['tree_id'],\n      }, {\n        table: 'tree',\n        returning: `\n          id link_id tree_id root_id depth position_id\n        `,\n      }))?.data);\n    })() }, [mode, current]);\n    const [tree, setTree] = React.useState();\n    React.useEffect(() => setTree(), [mode, current]);\n\n    const [q, setQ] = React.useState(query);\n    const setQoDebounce = useDebounceCallback((q) => {\n      try {\n        setQo(json5.parse(q));\n      } catch(error) {}\n    }, 1000);\n    const [qo setQo] = React.useState(q);\n\n    const [s, setS] = React.useState(search || '');\n    const setSoDebounce = useDebounceCallback((s) => {\n      const num = parseFloat(s);\n      const _or = [];\n      if (!Number.isNaN(num)) {\n        _or.push({ id: num }, { number: { value: num } });\n      }\n      _or.push(\n        { string: { value: s } },\n        { string: { value: { _ilike: s } } },\n        { string: { value: { _similar: s } } },\n        { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: s } } },\n        { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _ilike: s } } } },\n        { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _similar: s } } } },\n      );\n      \n      \n      const query = JSON.stringify({\n        _or,\n      });\n      setQ(query);\n      // setQoDebounce(query);\n      try {\n        setQo(json5.parse(query));\n      } catch(error) {}\n    }, 1000);\n\n    const { colorMode } = useColorMode();\n\n    const bg = useColorModeValue('#eeeeee', '#434343');\n    const hover = useColorModeValue('white', '#1e1e1e');\n    const borderColor = useColorModeValue('#434343', '#eeeeee');\n    const color = useColorModeValue('#1e1e1e', 'white');\n\n    const body = <Box sx={{ \n        height: fillSize ? '100%' : viewSize.height, \n        width: fillSize ? '100%' : viewSize.width, \n        overflowY: 'auto', \n        position: 'relative', \n        borderColor: 'borderColor', \n        borderWidth: 'thin',\n        borderRadius: '0.5rem',\n        p: '0.2rem',\n        ...style }}\n      >\n      <HStack\n        // divider={<StackDivider borderColor='borderColor' />}\n        // spacing={1}\n        align='stretch'\n        justifyContent='space-between'\n        sx={{ position: 'sticky', top: 0, mb: '0.3rem' }}\n        bg='transparent'\n      >\n        <Button variant='solid' size='sm' background={!(mode === 'Search') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Search') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Search')}>🪬</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'Query') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Query') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Query')}>🔍</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'Contains') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Contains') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Contains')}>🗂</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'In/Out') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'In/Out') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('In/Out')}>In/Out</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'Trees') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Trees') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Trees')}>🌲</Button>\n      </HStack>\n      {mode === 'Search' && <>\n        {current && <List\n          link={link}\n          current={current}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{ id: 0 }}\n        />}\n        <Input\n          autoFocus\n          type=\"text\"\n          variant='filled'\n          variant='filled'\n          bg={bg}\n          color={color}\n          borderWidth='thin'\n          borderColor={borderColor}\n          _hover={{bg: hover}}\n          _focus={{bg: bg}}\n          sx={{\n            width: '100%',\n          }}\n          onChange={(e) => {\n            setS(e.target.value);\n            setSoDebounce(e.target.value);\n          }}\n          value={s}\n        />\n        {<List\n          link={link}\n          current={null}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{\n            ...qo,\n            limit: 30,\n          }}\n        />}\n      </>}\n      {mode === 'Query' && <>\n        {current && <List\n          link={link}\n          current={current}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{ id: 0 }}\n        />}\n        <MonacoEditor\n          options={{\n            minimap: {\n              enabled: false\n            },\n            lineNumbers: 'off',\n            wordWrap: true,\n          }}\n          height=\"200px\"\n          width=\"100%\"\n          theme={colorMode === 'light' ? 'light' : \"vs-dark\"}\n          defaultLanguage=\"json\"\n          defaultValue={q || ''}\n          onChange={(value) => {\n            setQ(value);\n            setQoDebounce(value);\n          }}\n          // onMount={handleEditorDidMount}\n        />\n        <List\n          link={link}\n          current={null}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{\n            ...qo,\n            limit: 30,\n          }}\n        />\n      </>}\n      {mode === 'Contains' && current && <List\n        link={link}\n        current={current}\n        setCurrent={setCurrent}\n        parentsQuery={{\n          out: {\n            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n            to_id: current?.id,\n          }\n        }}\n        childrenQuery={{\n          in: {\n            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n            from_id: current?.id,\n          }\n        }}\n      />}\n      {mode === 'In/Out' && current && <>\n        <List\n          link={link}\n          current={current}\n          setCurrent={setCurrent}\n          parentsQuery={{\n            to_id: current?.id\n          }}\n          childrenQuery={{\n            from_id: current?.id\n          }}\n        />\n      </>}\n      {mode === 'Trees' && <>\n        <VStack\n          divider={<StackDivider borderColor='borderColor' />}\n          spacing={1}\n          align='stretch'\n          bg='gray.800'\n        >\n          {[<Wrap key={tree?.id || 0} spacing={1} justify='center'>\n            {trees?.map(t => <WrapItem key={t?.id}>\n              <Button size='sm' variant={tree?.id === t?.id ? 'solid' : \"outline\"} onClick={() => setTree(t)}>{deep.nameLocal(t?.tree_id)}</Button>\n            </WrapItem>)}\n          </Wrap>]}\n        </VStack>\n        {!tree && <>\n          <List\n            link={link}\n            current={current}\n            setCurrent={setCurrent}\n            parentsQuery={{\n              id: 0\n            }}\n            childrenQuery={{ \n              id: 0\n            }}\n          />\n        </>}\n        {!!tree && <>\n          {[<List\n            key={tree?.id}\n            link={link}\n            current={current}\n            setCurrent={setCurrent}\n            parentsQuery={{\n              down: {\n                tree_id: tree?.tree_id,\n                position_id: tree?.position_id,\n                link_id: current?.id\n              },\n            }}\n            childrenQuery={{ _and: [\n              { up: {\n                tree_id: tree?.tree_id,\n                root_id: tree?.root_id,\n                parent_id: tree?.link_id,\n                depth: tree?.depth,\n              } },\n              { down: {\n                tree_id: tree?.tree_id,\n                root_id: tree?.root_id,\n                depth: tree?.depth + 1,\n              } },\n            ]}}\n          />]}\n        </>}\n      </>}\n      {children}\n    </div>\n    \n    return <>\n      {fillSize \n      ? body \n      : <Resize\n          onChangeSize={(viewSize) => setViewSize(viewSize)} \n          style={{\n          // position: 'relative',\n          // overflow: nested ? 'hidden' : 'inherit',\n          borderRadius: 5,\n          border: 'none',\n        }}\n      >{body}</Resize>}\n    </>;\n  };\n}\n",
			"link_id": 974
		},
		"__typename": "links"
	},
	{
		"id": 1003,
		"type_id": 9,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1004,
		"type_id": 10,
		"from_id": 974,
		"to_id": 1003,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1043,
		"type_id": 182,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1111,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1112,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1113,
		"type_id": 16,
		"from_id": 1112,
		"to_id": 1109,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1114,
		"type_id": 70,
		"from_id": 1113,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1115,
		"type_id": 18,
		"from_id": 1111,
		"to_id": 1112,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1116,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1117,
		"type_id": 16,
		"from_id": 1116,
		"to_id": 1109,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1118,
		"type_id": 70,
		"from_id": 1117,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1119,
		"type_id": 19,
		"from_id": 1111,
		"to_id": 1116,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1120,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1121,
		"type_id": 16,
		"from_id": 1120,
		"to_id": 28,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1122,
		"type_id": 70,
		"from_id": 1121,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1123,
		"type_id": 20,
		"from_id": 1111,
		"to_id": 1120,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1184,
		"type_id": 22,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1185,
		"type_id": 66,
		"from_id": 1184,
		"to_id": 373,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1186,
		"type_id": 17,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1187,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1188,
		"type_id": 16,
		"from_id": 1187,
		"to_id": 1184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1189,
		"type_id": 70,
		"from_id": 1188,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1190,
		"type_id": 18,
		"from_id": 1186,
		"to_id": 1187,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1191,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1192,
		"type_id": 16,
		"from_id": 1191,
		"to_id": 1184,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1193,
		"type_id": 70,
		"from_id": 1192,
		"to_id": 40,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1194,
		"type_id": 19,
		"from_id": 1186,
		"to_id": 1191,
		"value": null,
		"__typename": "links"
	},
	{
		"id": 1195,
		"type_id": 15,
		"from_id": 0,
		"to_id": 0,
		"value": null,
		"__typename": "links"
	}
]
